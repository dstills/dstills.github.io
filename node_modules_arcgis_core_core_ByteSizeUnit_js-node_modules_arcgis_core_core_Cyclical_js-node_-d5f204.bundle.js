"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["node_modules_arcgis_core_core_ByteSizeUnit_js-node_modules_arcgis_core_core_Cyclical_js-node_-d5f204"],{

/***/ "./node_modules/@arcgis/core/core/ByteSizeUnit.js":
/*!********************************************************!*\
  !*** ./node_modules/@arcgis/core/core/ByteSizeUnit.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ByteSizeUnit: () => (/* binding */ E)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
var E;!function(E){E[E.KILOBYTES=1024]="KILOBYTES",E[E.MEGABYTES=1048576]="MEGABYTES",E[E.GIGABYTES=1073741824]="GIGABYTES"}(E||(E={}));


/***/ }),

/***/ "./node_modules/@arcgis/core/core/Cyclical.js":
/*!****************************************************!*\
  !*** ./node_modules/@arcgis/core/core/Cyclical.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Cyclical: () => (/* binding */ i),
/* harmony export */   cyclical2PI: () => (/* binding */ o),
/* harmony export */   cyclicalDegrees: () => (/* binding */ s),
/* harmony export */   cyclicalPI: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _mathUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mathUtils.js */ "./node_modules/@arcgis/core/core/mathUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class i{constructor(n,i){this.min=n,this.max=i,this.range=i-n}ndiff(n,i=0){return Math.ceil((n-i)/this.range)*this.range+i}_normalize(n,i,t,o=0,r=!1){return(t-=o)<n?t+=this.ndiff(n-t):t>i&&(t-=this.ndiff(t-i)),r&&t===i&&(t=n),t+o}normalize(n,i=0,t=!1){return this._normalize(this.min,this.max,n,i,t)}clamp(i,t=0){return (0,_mathUtils_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(i-t,this.min,this.max)+t}monotonic(n,i,t){return n<i?i:i+this.ndiff(n-i,t)}minimalMonotonic(n,i,t){return this._normalize(n,n+this.range,i,t)}center(n,i,t){return i=this.monotonic(n,i,t),this.normalize((n+i)/2,t)}diff(n,i,t){return this.monotonic(n,i,t)-n}shortestSignedDiff(n,i){n=this.normalize(n);const t=(i=this.normalize(i))-n,o=i<n?this.minimalMonotonic(n,i)-n:i-this.minimalMonotonic(i,n);return Math.abs(t)<Math.abs(o)?t:o}contains(n,i,t){return i=this.minimalMonotonic(n,i),(t=this.minimalMonotonic(n,t))>n&&t<i}}function t(n){for(const i in n){const t=n[i];t instanceof Function&&(n[i]=t.bind(n))}return n}const o=t(new i(0,2*Math.PI)),r=t(new i(-Math.PI,Math.PI)),s=t(new i(0,360));


/***/ }),

/***/ "./node_modules/@arcgis/core/support/basemapUtils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@arcgis/core/support/basemapUtils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clonePreservingTiledLayers: () => (/* binding */ v),
/* harmony export */   contentEquals: () => (/* binding */ R),
/* harmony export */   createCache: () => (/* binding */ y),
/* harmony export */   destroyCache: () => (/* binding */ m),
/* harmony export */   ensureType: () => (/* binding */ b),
/* harmony export */   findSpatialReference: () => (/* binding */ U),
/* harmony export */   getBasemapThumbnailUrl: () => (/* binding */ O),
/* harmony export */   getWellKnownBasemapId: () => (/* binding */ h),
/* harmony export */   hasDeveloperBasemapLayer: () => (/* binding */ w),
/* harmony export */   isBasemap3D: () => (/* binding */ d),
/* harmony export */   isBasemapInBeta: () => (/* binding */ L),
/* harmony export */   isBasemapLayer: () => (/* binding */ S),
/* harmony export */   isDeveloperBasemapLayer: () => (/* binding */ j),
/* harmony export */   overrideGetWellKnownBasemapId: () => (/* binding */ I)
/* harmony export */ });
/* harmony import */ var _Basemap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Basemap.js */ "./node_modules/@arcgis/core/Basemap.js");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.js */ "./node_modules/@arcgis/core/config.js");
/* harmony import */ var _core_Collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Collection.js */ "./node_modules/@arcgis/core/core/Collection.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/accessorSupport/ensureType.js */ "./node_modules/@arcgis/core/core/accessorSupport/ensureType.js");
/* harmony import */ var _layers_effects_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../layers/effects/utils.js */ "./node_modules/@arcgis/core/layers/effects/utils.js");
/* harmony import */ var _basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./basemapDefinitions.js */ "./node_modules/@arcgis/core/support/basemapDefinitions.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const p=_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.support.basemapUtils");function y(){return{}}function m(e){for(const r in e){const t=e[r];(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.destroyMaybe)(t),delete e[r]}}function b(t,n){let a;if("string"==typeof t){const i=t in _basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__.esriBasemapDefinitions,l=!i&&t.includes("/");if(!i&&!l){const e=Object.entries(_basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__.esriBasemapDefinitions).filter((([e,t])=>_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].apiKey&&!t.classic||!_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].apiKey&&(t.classic||t.is3d))).map((([e])=>`"${e}"`)).sort().join(", ");return p.warn(`Unable to find basemap definition for: ${t}. Try one of these: ${e}`),null}n&&(a=n[t]),a||(a=i?_Basemap_js__WEBPACK_IMPORTED_MODULE_0__["default"].fromId(t):new _Basemap_js__WEBPACK_IMPORTED_MODULE_0__["default"]({style:{id:t}}),n&&(n[t]=a))}else a=(0,_core_accessorSupport_ensureType_js__WEBPACK_IMPORTED_MODULE_6__.ensureType)(_Basemap_js__WEBPACK_IMPORTED_MODULE_0__["default"],t);return a?.destroyed&&(p.warn("The provided basemap is already destroyed",{basemap:a}),a=null),a}function d(e){return"Web Scene"===e.portalItem?.type}function L(e){return!!e?.portalItem?.tags?.some((e=>"beta"===e.toLowerCase()))}function S(e,r){return e.basemap?.referenceLayers?.some((e=>e.uid===r))||e.basemap?.baseLayers?.some((e=>e.uid===r))}function v(e,r=null){const t=b(e);if(!t)return null;const n=t.clone();return r&&(n.baseLayers=T(n.baseLayers,r.baseLayers),n.referenceLayers=T(n.referenceLayers,r.referenceLayers)),n}let g;function h(e){if(g)return g(e);let r=null;const t=M(e),n=!t?.baseLayers.length;for(const a in _basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__.esriBasemapDefinitions){const e=K(t,$(_basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__.esriBasemapDefinitions[a]),{mustMatchReferences:n});if("equal"===e){r=a;break}"base-layers-equal"===e&&(r=a)}return r}function I(e){g=e}function R(e,r){if(e===r)return!0;if(null!=e?.portalItem?.id&&e.portalItem.id===r?.portalItem?.id)return!0;return"equal"===K(M(e),M(r),{mustMatchReferences:!0})}function T(e,r){const n=new _core_Collection_js__WEBPACK_IMPORTED_MODULE_2__["default"];return e.forEach((e=>{const t=r.find((r=>"scene"!==r.type&&D(A(e),A(r))))||e;n.includes(t)?n.push(e):n.push(t)})),n}function w(e){return!!e?.baseLayers.concat(e.referenceLayers).some(j)}function j(e){if(x(e.url))return!0;if("vector-tile"===e.type)for(const r in e.sourceNameToSource){const t=e.sourceNameToSource[r];if(x(t?.sourceUrl))return!0}return!1}function U(e,r){if(null==r||null==e)return{spatialReference:null,updating:!1};if("not-loaded"===r.loadStatus)return r.load(),{spatialReference:null,updating:!0};if(r.spatialReference)return{spatialReference:r.spatialReference,updating:!1};if(0===r.baseLayers.length)return{spatialReference:null,updating:!1};const t=r.baseLayers.at(0);switch(t.loadStatus){case"not-loaded":t.load();case"loading":return{spatialReference:null,updating:!0};case"failed":return{spatialReference:null,updating:!1}}const n=(("supportedSpatialReferences"in t?t.supportedSpatialReferences:null)||["tileInfo"in t?t.tileInfo?.spatialReference:t.spatialReference]).filter(Boolean),a=e.spatialReference;return a?{spatialReference:n.find((e=>a.equals(e)))??n[0]??null,updating:!1}:{spatialReference:n[0],updating:!1}}const q=/^(basemaps|ibasemaps).*-api\.arcgis\.com$/i;function x(e){if(!e)return!1;const r=new _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.Url((0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.makeAbsolute)(e));return!!r.authority&&q.test(r.authority)}function M(e){return e?!e.loaded&&e.resourceInfo?$(e.resourceInfo.data):{baseLayers:k(e.baseLayers),referenceLayers:k(e.referenceLayers)}:null}function k(e){return(_core_Collection_js__WEBPACK_IMPORTED_MODULE_2__["default"].isCollection(e)?e.toArray():e).map(A)}function A(e){return{type:e.type,effect:"effect"in e?e.effect:void 0,url:E("urlTemplate"in e&&e.urlTemplate||e.url||"styleUrl"in e&&e.styleUrl||""),minScale:"minScale"in e&&null!=e.minScale?e.minScale:0,maxScale:"maxScale"in e&&null!=e.maxScale?e.maxScale:0,opacity:null!=e.opacity?e.opacity:1,visible:null==e.visible||!!e.visible,sublayers:"map-image"!==e.type&&"wms"!==e.type||null==e.sublayers?void 0:e.sublayers?.map((e=>({id:e.id,visible:e.visible}))),activeLayerId:"wmts"===e.type?e.activeLayer?.id:void 0}}function C(e){return e.isReference||"ArcGISSceneServiceLayer"===e.layerType}function $(e){return e?{baseLayers:G((e.baseMapLayers??[]).filter((e=>!C(e)))),referenceLayers:G((e.baseMapLayers??[]).filter((e=>C(e))))}:null}function G(e){return e.map((e=>B(e)))}function B(e){let r;switch(e.layerType){case"VectorTileLayer":r="vector-tile";break;case"ArcGISTiledMapServiceLayer":r="tile";break;case"ArcGISSceneServiceLayer":r="scene";break;default:r="unknown"}return{type:r,effect:e.effect,url:E(e.templateUrl||e.urlTemplate||e.styleUrl||e.url),minScale:e.minScale??0,maxScale:e.maxScale??0,opacity:e.opacity??1,visible:null==e.visibility||!!e.visibility,sublayers:void 0,activeLayerId:void 0}}function K(e,r,t){if(null!=e!=(null!=r))return"not-equal";if(!e||!r)return"equal";if(!N(e.baseLayers,r.baseLayers))return"not-equal";return N(e.referenceLayers,r.referenceLayers)?"equal":t.mustMatchReferences?"not-equal":"base-layers-equal"}function N(e,r){if(e.length!==r.length)return!1;for(let t=0;t<e.length;t++)if(!D(e[t],r[t]))return!1;return!0}function D(e,r){if(e.type!==r.type||e.url!==r.url||e.minScale!==r.minScale||e.maxScale!==r.maxScale||e.visible!==r.visible||e.opacity!==r.opacity)return!1;if(!(0,_layers_effects_utils_js__WEBPACK_IMPORTED_MODULE_7__.effectEquals)(e.effect,r.effect))return!1;if(null!=e.activeLayerId||null!=r.activeLayerId)return e.activeLayerId===r.activeLayerId;if(null!=e.sublayers||null!=r.sublayers){if(null==e.sublayers||null==r.sublayers||e.sublayers.length!==r.sublayers.length)return!1;for(let t=0;t<e.sublayers.length;t++){const n=e.sublayers.at(t),a=r.sublayers.at(t);if(n?.id!==a?.id||n?.visible!==a?.visible)return!1}}return!0}function E(e){return e?(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.normalize)(e).replace(/^\s*https?:/i,"").toLowerCase():""}function O(e){if(!e)return null;const{thumbnailUrl:r}=e;if(r)return r;const t=h(e);return t?_basemapDefinitions_js__WEBPACK_IMPORTED_MODULE_8__.esriBasemapDefinitions[t].thumbnailUrl:(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.mappedFind)(e.baseLayers,V)}function V(e){return"portalItem"in e?e.portalItem?.thumbnailUrl:void 0}


/***/ }),

/***/ "./node_modules/@arcgis/core/widgets/support/globalCss.js":
/*!****************************************************************!*\
  !*** ./node_modules/@arcgis/core/widgets/support/globalCss.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   globalCss: () => (/* binding */ e)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const e={anchor:"esri-widget__anchor",anchorDisabled:"esri-widget__anchor--disabled",button:"esri-button",buttonDisabled:"esri-button--disabled",buttonHalf:"esri-button--half",buttonSecondary:"esri-button--secondary",buttonSmall:"esri-button--small",buttonTertiary:"esri-button--tertiary",buttonThird:"esri-button--third",disabled:"esri-disabled",disabledElement:"esri-disabled-element",empty:"esri-widget__content--empty",emptyIllustration:"esri-widget__content-illustration--empty",heading:"esri-widget__heading",hidden:"esri-hidden",input:"esri-input",interactive:"esri-interactive",loader:"esri-widget__loader",loaderAnimation:"esri-widget__loader-animation",loaderText:"esri-widget__loader-text",menu:"esri-menu",menuHeader:"esri-menu__header",menuItem:"esri-menu__list-item",menuItemActive:"esri-menu__list-item--active",menuItemFocus:"esri-menu__list-item--focus",menuList:"esri-menu__list",noBookmarksIcon:"esri-widget__no-bookmark-icon",panel:"esri-widget--panel",panelHeightOnly:"esri-widget--panel-height-only",primaryTick:"primary-tick",primaryTickAmPm:"primary-tick__ampm",primaryTickLabel:"primary-tick__label",rotating:"esri-rotating",secondaryTick:"secondary-tick",select:"esri-select",table:"esri-widget__table",widget:"esri-widget",widgetButton:"esri-widget--button",widgetButtonActive:"esri-widget--button-active",widgetDisabled:"esri-widget--disabled"};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,