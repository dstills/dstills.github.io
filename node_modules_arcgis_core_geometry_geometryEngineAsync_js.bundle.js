"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["node_modules_arcgis_core_geometry_geometryEngineAsync_js"],{

/***/ "./node_modules/@arcgis/core/geometry/geometryEngineAsync.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/geometryEngineAsync.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   buffer: () => (/* binding */ L),
/* harmony export */   changeDefaultSpatialReferenceTolerance: () => (/* binding */ X),
/* harmony export */   clearDefaultSpatialReferenceTolerance: () => (/* binding */ Y),
/* harmony export */   clip: () => (/* binding */ y),
/* harmony export */   contains: () => (/* binding */ p),
/* harmony export */   convexHull: () => (/* binding */ j),
/* harmony export */   crosses: () => (/* binding */ m),
/* harmony export */   cut: () => (/* binding */ w),
/* harmony export */   densify: () => (/* binding */ C),
/* harmony export */   difference: () => (/* binding */ E),
/* harmony export */   disjoint: () => (/* binding */ A),
/* harmony export */   distance: () => (/* binding */ d),
/* harmony export */   equals: () => (/* binding */ g),
/* harmony export */   extendedSpatialReferenceInfo: () => (/* binding */ l),
/* harmony export */   flipHorizontal: () => (/* binding */ I),
/* harmony export */   flipVertical: () => (/* binding */ q),
/* harmony export */   generalize: () => (/* binding */ B),
/* harmony export */   geodesicArea: () => (/* binding */ K),
/* harmony export */   geodesicBuffer: () => (/* binding */ P),
/* harmony export */   geodesicDensify: () => (/* binding */ U),
/* harmony export */   geodesicLength: () => (/* binding */ M),
/* harmony export */   intersect: () => (/* binding */ D),
/* harmony export */   intersectLinesToPoints: () => (/* binding */ Q),
/* harmony export */   intersects: () => (/* binding */ h),
/* harmony export */   isSimple: () => (/* binding */ J),
/* harmony export */   nearestCoordinate: () => (/* binding */ T),
/* harmony export */   nearestVertex: () => (/* binding */ V),
/* harmony export */   nearestVertices: () => (/* binding */ z),
/* harmony export */   offset: () => (/* binding */ v),
/* harmony export */   overlaps: () => (/* binding */ O),
/* harmony export */   planarArea: () => (/* binding */ W),
/* harmony export */   planarLength: () => (/* binding */ F),
/* harmony export */   relate: () => (/* binding */ R),
/* harmony export */   rotate: () => (/* binding */ H),
/* harmony export */   simplify: () => (/* binding */ N),
/* harmony export */   symmetricDifference: () => (/* binding */ k),
/* harmony export */   touches: () => (/* binding */ S),
/* harmony export */   union: () => (/* binding */ b),
/* harmony export */   within: () => (/* binding */ x)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _core_workers_workers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/workers/workers.js */ "./node_modules/@arcgis/core/core/workers/workers.js");
/* harmony import */ var _Point_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/* harmony import */ var _support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function r(n){return Array.isArray(n)?n[0]?.spatialReference:n?.spatialReference}function a(n){return n?Array.isArray(n)?n.map(a):n.toJSON?n.toJSON():n:n}function i(n){return Array.isArray(n)?n.map((n=>(0,_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_3__.fromJSON)(n))):(0,_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_3__.fromJSON)(n)}function o(n,t){let e;return Array.isArray(n)?e=n:(e=[],e.push(n),null!=t&&e.push(t)),e}let c;async function u(){return c||(c=(0,_core_workers_workers_js__WEBPACK_IMPORTED_MODULE_1__.open)("geometryEngineWorker",{strategy:"distributed"})),c}async function s(n,t){return(await u()).invoke("executeGEOperation",{operation:n,parameters:a(t)})}async function f(n,t){const e=await u();return Promise.all(e.broadcast("executeGEOperation",{operation:n,parameters:a(t)}))}function l(n){return s("extendedSpatialReferenceInfo",[n])}async function y(n,t){return i(await s("clip",[r(n),n,t]))}async function w(n,t){return i(await s("cut",[r(n),n,t]))}function p(n,t){return s("contains",[r(n),n,t])}function m(n,t){return s("crosses",[r(n),n,t])}function d(n,t,e){return s("distance",[r(n),n,t,e])}function g(n,t){return s("equals",[r(n),n,t])}function h(n,t){return s("intersects",[r(n),n,t])}function S(n,t){return s("touches",[r(n),n,t])}function x(n,t){return s("within",[r(n),n,t])}function A(n,t){return s("disjoint",[r(n),n,t])}function O(n,t){return s("overlaps",[r(n),n,t])}function R(n,t,e){return s("relate",[r(n),n,t,e])}function J(n){return s("isSimple",[r(n),n])}async function N(n){return i(await s("simplify",[r(n),n]))}async function j(n,t=!1){return i(await s("convexHull",[r(n),n,t]))}async function E(n,t){return i(await s("difference",[r(n),n,t]))}async function k(n,t){return i(await s("symmetricDifference",[r(n),n,t]))}async function D(n,t){return i(await s("intersect",[r(n),n,t]))}async function b(n,t=null){const e=o(n,t);return i(await s("union",[r(e),e]))}async function v(n,t,e,a,o,c){return i(await s("offset",[r(n),n,t,e,a,o,c]))}async function L(n,t,e,a=!1){const o=[r(n),n,t,e,a];return i(await s("buffer",o))}async function P(n,t,e,a,o,c){const u=[r(n),n,t,e,a,o,c];return i(await s("geodesicBuffer",u))}async function T(n,e,a=!0){const i=await s("nearestCoordinate",[r(n),n,e,a]);return{...i,coordinate:_Point_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(i.coordinate)}}async function V(n,e){const a=await s("nearestVertex",[r(n),n,e]);return{...a,coordinate:_Point_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(a.coordinate)}}async function z(n,e,a,i){return(await s("nearestVertices",[r(n),n,e,a,i])).map((n=>({...n,coordinate:_Point_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(n.coordinate)})))}function G(n){return"xmin"in n?n.center:"x"in n?n:n.extent?.center}async function H(n,t,e){if(null==n)throw new Z;const r=n.spatialReference;if(null==(e=e??G(n)))throw new Z;const a=n.constructor.fromJSON(await s("rotate",[r,n,t,e]));return a.spatialReference=r,a}async function I(n,t){if(null==n)throw new Z;const e=n.spatialReference;if(null==(t=t??G(n)))throw new Z;const r=n.constructor.fromJSON(await s("flipHorizontal",[e,n,t]));return r.spatialReference=e,r}async function q(n,t){if(null==n)throw new Z;const e=n.spatialReference;if(null==(t=t??G(n)))throw new Z;const r=n.constructor.fromJSON(await s("flipVertical",[e,n,t]));return r.spatialReference=e,r}async function B(n,t,e,a){return i(await s("generalize",[r(n),n,t,e,a]))}async function C(n,t,e){return i(await s("densify",[r(n),n,t,e]))}async function U(n,t,e,a=0){return i(await s("geodesicDensify",[r(n),n,t,e,a]))}function W(n,t){return s("planarArea",[r(n),n,t])}function F(n,t){return s("planarLength",[r(n),n,t])}function K(n,t,e){return s("geodesicArea",[r(n),n,t,e])}function M(n,t,e){return s("geodesicLength",[r(n),n,t,e])}async function Q(n,t){return i(await s("intersectLinesToPoints",[r(n),n,t]))}async function X(n,t){await f("changeDefaultSpatialReferenceTolerance",[n,t])}async function Y(n){await f("clearDefaultSpatialReferenceTolerance",[n])}class Z extends Error{constructor(){super("Illegal Argument Exception")}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2FyY2dpc19jb3JlX2dlb21ldHJ5X2dlb21ldHJ5RW5naW5lQXN5bmNfanMuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNxSixjQUFjLG1FQUFtRSxjQUFjLDJEQUEyRCxjQUFjLGtDQUFrQywrREFBQyxNQUFNLCtEQUFDLElBQUksZ0JBQWdCLE1BQU0sa0VBQWtFLE1BQU0sbUJBQW1CLGFBQWEsOERBQUMseUJBQXlCLHVCQUF1QixLQUFLLHNCQUFzQiwrQ0FBK0MsNEJBQTRCLEVBQUUsc0JBQXNCLGtCQUFrQixxREFBcUQsNEJBQTRCLEdBQUcsY0FBYyw2Q0FBNkMsc0JBQXNCLHFDQUFxQyxzQkFBc0Isb0NBQW9DLGdCQUFnQixnQ0FBZ0MsZ0JBQWdCLCtCQUErQixrQkFBa0Isa0NBQWtDLGdCQUFnQiw4QkFBOEIsZ0JBQWdCLGtDQUFrQyxnQkFBZ0IsK0JBQStCLGdCQUFnQiw4QkFBOEIsZ0JBQWdCLGdDQUFnQyxnQkFBZ0IsZ0NBQWdDLGtCQUFrQixnQ0FBZ0MsY0FBYyw4QkFBOEIsb0JBQW9CLHVDQUF1Qyx5QkFBeUIsMkNBQTJDLHNCQUFzQiwyQ0FBMkMsc0JBQXNCLG9EQUFvRCxzQkFBc0IsMENBQTBDLDJCQUEyQixlQUFlLG9DQUFvQyw4QkFBOEIsK0NBQStDLDZCQUE2Qix1QkFBdUIsOEJBQThCLDhCQUE4QiwyQkFBMkIsc0NBQXNDLDJCQUEyQixrREFBa0QsT0FBTyxnQkFBZ0IsaURBQUMseUJBQXlCLHNCQUFzQiw0Q0FBNEMsT0FBTyxnQkFBZ0IsaURBQUMseUJBQXlCLDBCQUEwQiw0REFBNEQsZ0JBQWdCLGlEQUFDLHdCQUF3QixJQUFJLGNBQWMscURBQXFELHdCQUF3Qix1QkFBdUIsMkJBQTJCLGlDQUFpQyw0REFBNEQsOEJBQThCLHNCQUFzQix1QkFBdUIsMkJBQTJCLGlDQUFpQyxrRUFBa0UsOEJBQThCLHNCQUFzQix1QkFBdUIsMkJBQTJCLGlDQUFpQyxnRUFBZ0UsOEJBQThCLDBCQUEwQiwrQ0FBK0Msd0JBQXdCLDBDQUEwQyw0QkFBNEIsb0RBQW9ELGdCQUFnQixrQ0FBa0MsZ0JBQWdCLG9DQUFvQyxrQkFBa0Isc0NBQXNDLGtCQUFrQix3Q0FBd0Msc0JBQXNCLHVEQUF1RCxzQkFBc0Isd0RBQXdELG9CQUFvQixxREFBcUQsc0JBQXNCLGNBQWMscUNBQWl1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2dlb21ldHJ5L2dlb21ldHJ5RW5naW5lQXN5bmMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydFwiLi4vZ2VvbWV0cnkuanNcIjtpbXBvcnR7b3BlbiBhcyBufWZyb21cIi4uL2NvcmUvd29ya2Vycy93b3JrZXJzLmpzXCI7aW1wb3J0IHQgZnJvbVwiLi9Qb2ludC5qc1wiO2ltcG9ydHtmcm9tSlNPTiBhcyBlfWZyb21cIi4vc3VwcG9ydC9qc29uVXRpbHMuanNcIjtmdW5jdGlvbiByKG4pe3JldHVybiBBcnJheS5pc0FycmF5KG4pP25bMF0/LnNwYXRpYWxSZWZlcmVuY2U6bj8uc3BhdGlhbFJlZmVyZW5jZX1mdW5jdGlvbiBhKG4pe3JldHVybiBuP0FycmF5LmlzQXJyYXkobik/bi5tYXAoYSk6bi50b0pTT04/bi50b0pTT04oKTpuOm59ZnVuY3Rpb24gaShuKXtyZXR1cm4gQXJyYXkuaXNBcnJheShuKT9uLm1hcCgobj0+ZShuKSkpOmUobil9ZnVuY3Rpb24gbyhuLHQpe2xldCBlO3JldHVybiBBcnJheS5pc0FycmF5KG4pP2U9bjooZT1bXSxlLnB1c2gobiksbnVsbCE9dCYmZS5wdXNoKHQpKSxlfWxldCBjO2FzeW5jIGZ1bmN0aW9uIHUoKXtyZXR1cm4gY3x8KGM9bihcImdlb21ldHJ5RW5naW5lV29ya2VyXCIse3N0cmF0ZWd5OlwiZGlzdHJpYnV0ZWRcIn0pKSxjfWFzeW5jIGZ1bmN0aW9uIHMobix0KXtyZXR1cm4oYXdhaXQgdSgpKS5pbnZva2UoXCJleGVjdXRlR0VPcGVyYXRpb25cIix7b3BlcmF0aW9uOm4scGFyYW1ldGVyczphKHQpfSl9YXN5bmMgZnVuY3Rpb24gZihuLHQpe2NvbnN0IGU9YXdhaXQgdSgpO3JldHVybiBQcm9taXNlLmFsbChlLmJyb2FkY2FzdChcImV4ZWN1dGVHRU9wZXJhdGlvblwiLHtvcGVyYXRpb246bixwYXJhbWV0ZXJzOmEodCl9KSl9ZnVuY3Rpb24gbChuKXtyZXR1cm4gcyhcImV4dGVuZGVkU3BhdGlhbFJlZmVyZW5jZUluZm9cIixbbl0pfWFzeW5jIGZ1bmN0aW9uIHkobix0KXtyZXR1cm4gaShhd2FpdCBzKFwiY2xpcFwiLFtyKG4pLG4sdF0pKX1hc3luYyBmdW5jdGlvbiB3KG4sdCl7cmV0dXJuIGkoYXdhaXQgcyhcImN1dFwiLFtyKG4pLG4sdF0pKX1mdW5jdGlvbiBwKG4sdCl7cmV0dXJuIHMoXCJjb250YWluc1wiLFtyKG4pLG4sdF0pfWZ1bmN0aW9uIG0obix0KXtyZXR1cm4gcyhcImNyb3NzZXNcIixbcihuKSxuLHRdKX1mdW5jdGlvbiBkKG4sdCxlKXtyZXR1cm4gcyhcImRpc3RhbmNlXCIsW3Iobiksbix0LGVdKX1mdW5jdGlvbiBnKG4sdCl7cmV0dXJuIHMoXCJlcXVhbHNcIixbcihuKSxuLHRdKX1mdW5jdGlvbiBoKG4sdCl7cmV0dXJuIHMoXCJpbnRlcnNlY3RzXCIsW3Iobiksbix0XSl9ZnVuY3Rpb24gUyhuLHQpe3JldHVybiBzKFwidG91Y2hlc1wiLFtyKG4pLG4sdF0pfWZ1bmN0aW9uIHgobix0KXtyZXR1cm4gcyhcIndpdGhpblwiLFtyKG4pLG4sdF0pfWZ1bmN0aW9uIEEobix0KXtyZXR1cm4gcyhcImRpc2pvaW50XCIsW3Iobiksbix0XSl9ZnVuY3Rpb24gTyhuLHQpe3JldHVybiBzKFwib3ZlcmxhcHNcIixbcihuKSxuLHRdKX1mdW5jdGlvbiBSKG4sdCxlKXtyZXR1cm4gcyhcInJlbGF0ZVwiLFtyKG4pLG4sdCxlXSl9ZnVuY3Rpb24gSihuKXtyZXR1cm4gcyhcImlzU2ltcGxlXCIsW3Iobiksbl0pfWFzeW5jIGZ1bmN0aW9uIE4obil7cmV0dXJuIGkoYXdhaXQgcyhcInNpbXBsaWZ5XCIsW3Iobiksbl0pKX1hc3luYyBmdW5jdGlvbiBqKG4sdD0hMSl7cmV0dXJuIGkoYXdhaXQgcyhcImNvbnZleEh1bGxcIixbcihuKSxuLHRdKSl9YXN5bmMgZnVuY3Rpb24gRShuLHQpe3JldHVybiBpKGF3YWl0IHMoXCJkaWZmZXJlbmNlXCIsW3Iobiksbix0XSkpfWFzeW5jIGZ1bmN0aW9uIGsobix0KXtyZXR1cm4gaShhd2FpdCBzKFwic3ltbWV0cmljRGlmZmVyZW5jZVwiLFtyKG4pLG4sdF0pKX1hc3luYyBmdW5jdGlvbiBEKG4sdCl7cmV0dXJuIGkoYXdhaXQgcyhcImludGVyc2VjdFwiLFtyKG4pLG4sdF0pKX1hc3luYyBmdW5jdGlvbiBiKG4sdD1udWxsKXtjb25zdCBlPW8obix0KTtyZXR1cm4gaShhd2FpdCBzKFwidW5pb25cIixbcihlKSxlXSkpfWFzeW5jIGZ1bmN0aW9uIHYobix0LGUsYSxvLGMpe3JldHVybiBpKGF3YWl0IHMoXCJvZmZzZXRcIixbcihuKSxuLHQsZSxhLG8sY10pKX1hc3luYyBmdW5jdGlvbiBMKG4sdCxlLGE9ITEpe2NvbnN0IG89W3Iobiksbix0LGUsYV07cmV0dXJuIGkoYXdhaXQgcyhcImJ1ZmZlclwiLG8pKX1hc3luYyBmdW5jdGlvbiBQKG4sdCxlLGEsbyxjKXtjb25zdCB1PVtyKG4pLG4sdCxlLGEsbyxjXTtyZXR1cm4gaShhd2FpdCBzKFwiZ2VvZGVzaWNCdWZmZXJcIix1KSl9YXN5bmMgZnVuY3Rpb24gVChuLGUsYT0hMCl7Y29uc3QgaT1hd2FpdCBzKFwibmVhcmVzdENvb3JkaW5hdGVcIixbcihuKSxuLGUsYV0pO3JldHVybnsuLi5pLGNvb3JkaW5hdGU6dC5mcm9tSlNPTihpLmNvb3JkaW5hdGUpfX1hc3luYyBmdW5jdGlvbiBWKG4sZSl7Y29uc3QgYT1hd2FpdCBzKFwibmVhcmVzdFZlcnRleFwiLFtyKG4pLG4sZV0pO3JldHVybnsuLi5hLGNvb3JkaW5hdGU6dC5mcm9tSlNPTihhLmNvb3JkaW5hdGUpfX1hc3luYyBmdW5jdGlvbiB6KG4sZSxhLGkpe3JldHVybihhd2FpdCBzKFwibmVhcmVzdFZlcnRpY2VzXCIsW3IobiksbixlLGEsaV0pKS5tYXAoKG49Pih7Li4ubixjb29yZGluYXRlOnQuZnJvbUpTT04obi5jb29yZGluYXRlKX0pKSl9ZnVuY3Rpb24gRyhuKXtyZXR1cm5cInhtaW5cImluIG4/bi5jZW50ZXI6XCJ4XCJpbiBuP246bi5leHRlbnQ/LmNlbnRlcn1hc3luYyBmdW5jdGlvbiBIKG4sdCxlKXtpZihudWxsPT1uKXRocm93IG5ldyBaO2NvbnN0IHI9bi5zcGF0aWFsUmVmZXJlbmNlO2lmKG51bGw9PShlPWU/P0cobikpKXRocm93IG5ldyBaO2NvbnN0IGE9bi5jb25zdHJ1Y3Rvci5mcm9tSlNPTihhd2FpdCBzKFwicm90YXRlXCIsW3Isbix0LGVdKSk7cmV0dXJuIGEuc3BhdGlhbFJlZmVyZW5jZT1yLGF9YXN5bmMgZnVuY3Rpb24gSShuLHQpe2lmKG51bGw9PW4pdGhyb3cgbmV3IFo7Y29uc3QgZT1uLnNwYXRpYWxSZWZlcmVuY2U7aWYobnVsbD09KHQ9dD8/RyhuKSkpdGhyb3cgbmV3IFo7Y29uc3Qgcj1uLmNvbnN0cnVjdG9yLmZyb21KU09OKGF3YWl0IHMoXCJmbGlwSG9yaXpvbnRhbFwiLFtlLG4sdF0pKTtyZXR1cm4gci5zcGF0aWFsUmVmZXJlbmNlPWUscn1hc3luYyBmdW5jdGlvbiBxKG4sdCl7aWYobnVsbD09bil0aHJvdyBuZXcgWjtjb25zdCBlPW4uc3BhdGlhbFJlZmVyZW5jZTtpZihudWxsPT0odD10Pz9HKG4pKSl0aHJvdyBuZXcgWjtjb25zdCByPW4uY29uc3RydWN0b3IuZnJvbUpTT04oYXdhaXQgcyhcImZsaXBWZXJ0aWNhbFwiLFtlLG4sdF0pKTtyZXR1cm4gci5zcGF0aWFsUmVmZXJlbmNlPWUscn1hc3luYyBmdW5jdGlvbiBCKG4sdCxlLGEpe3JldHVybiBpKGF3YWl0IHMoXCJnZW5lcmFsaXplXCIsW3Iobiksbix0LGUsYV0pKX1hc3luYyBmdW5jdGlvbiBDKG4sdCxlKXtyZXR1cm4gaShhd2FpdCBzKFwiZGVuc2lmeVwiLFtyKG4pLG4sdCxlXSkpfWFzeW5jIGZ1bmN0aW9uIFUobix0LGUsYT0wKXtyZXR1cm4gaShhd2FpdCBzKFwiZ2VvZGVzaWNEZW5zaWZ5XCIsW3Iobiksbix0LGUsYV0pKX1mdW5jdGlvbiBXKG4sdCl7cmV0dXJuIHMoXCJwbGFuYXJBcmVhXCIsW3Iobiksbix0XSl9ZnVuY3Rpb24gRihuLHQpe3JldHVybiBzKFwicGxhbmFyTGVuZ3RoXCIsW3Iobiksbix0XSl9ZnVuY3Rpb24gSyhuLHQsZSl7cmV0dXJuIHMoXCJnZW9kZXNpY0FyZWFcIixbcihuKSxuLHQsZV0pfWZ1bmN0aW9uIE0obix0LGUpe3JldHVybiBzKFwiZ2VvZGVzaWNMZW5ndGhcIixbcihuKSxuLHQsZV0pfWFzeW5jIGZ1bmN0aW9uIFEobix0KXtyZXR1cm4gaShhd2FpdCBzKFwiaW50ZXJzZWN0TGluZXNUb1BvaW50c1wiLFtyKG4pLG4sdF0pKX1hc3luYyBmdW5jdGlvbiBYKG4sdCl7YXdhaXQgZihcImNoYW5nZURlZmF1bHRTcGF0aWFsUmVmZXJlbmNlVG9sZXJhbmNlXCIsW24sdF0pfWFzeW5jIGZ1bmN0aW9uIFkobil7YXdhaXQgZihcImNsZWFyRGVmYXVsdFNwYXRpYWxSZWZlcmVuY2VUb2xlcmFuY2VcIixbbl0pfWNsYXNzIFogZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3Rvcigpe3N1cGVyKFwiSWxsZWdhbCBBcmd1bWVudCBFeGNlcHRpb25cIil9fWV4cG9ydHtMIGFzIGJ1ZmZlcixYIGFzIGNoYW5nZURlZmF1bHRTcGF0aWFsUmVmZXJlbmNlVG9sZXJhbmNlLFkgYXMgY2xlYXJEZWZhdWx0U3BhdGlhbFJlZmVyZW5jZVRvbGVyYW5jZSx5IGFzIGNsaXAscCBhcyBjb250YWlucyxqIGFzIGNvbnZleEh1bGwsbSBhcyBjcm9zc2VzLHcgYXMgY3V0LEMgYXMgZGVuc2lmeSxFIGFzIGRpZmZlcmVuY2UsQSBhcyBkaXNqb2ludCxkIGFzIGRpc3RhbmNlLGcgYXMgZXF1YWxzLGwgYXMgZXh0ZW5kZWRTcGF0aWFsUmVmZXJlbmNlSW5mbyxJIGFzIGZsaXBIb3Jpem9udGFsLHEgYXMgZmxpcFZlcnRpY2FsLEIgYXMgZ2VuZXJhbGl6ZSxLIGFzIGdlb2Rlc2ljQXJlYSxQIGFzIGdlb2Rlc2ljQnVmZmVyLFUgYXMgZ2VvZGVzaWNEZW5zaWZ5LE0gYXMgZ2VvZGVzaWNMZW5ndGgsRCBhcyBpbnRlcnNlY3QsUSBhcyBpbnRlcnNlY3RMaW5lc1RvUG9pbnRzLGggYXMgaW50ZXJzZWN0cyxKIGFzIGlzU2ltcGxlLFQgYXMgbmVhcmVzdENvb3JkaW5hdGUsViBhcyBuZWFyZXN0VmVydGV4LHogYXMgbmVhcmVzdFZlcnRpY2VzLHYgYXMgb2Zmc2V0LE8gYXMgb3ZlcmxhcHMsVyBhcyBwbGFuYXJBcmVhLEYgYXMgcGxhbmFyTGVuZ3RoLFIgYXMgcmVsYXRlLEggYXMgcm90YXRlLE4gYXMgc2ltcGxpZnksayBhcyBzeW1tZXRyaWNEaWZmZXJlbmNlLFMgYXMgdG91Y2hlcyxiIGFzIHVuaW9uLHggYXMgd2l0aGlufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==