"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_esri_calcite-components_dist_components_calcite-rating_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/components/calcite-rating.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-rating.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteRating: () => (/* binding */ CalciteRating),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form.js */ "./node_modules/@esri/calcite-components/dist/components/form.js");
/* harmony import */ var _guid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guid.js */ "./node_modules/@esri/calcite-components/dist/components/guid.js");
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interactive.js */ "./node_modules/@esri/calcite-components/dist/components/interactive.js");
/* harmony import */ var _label2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./label2.js */ "./node_modules/@esri/calcite-components/dist/components/label2.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _chip_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chip.js */ "./node_modules/@esri/calcite-components/dist/components/chip.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.7.0
 */












const StarIcon = ({ full, scale, partial }) => ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-icon", { ...{
    class: partial ? undefined : "icon",
    icon: full ? "star-f" : "star",
    scale,
  } }));

const ratingCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([read-only]) *,:host([disabled]) *,:host([read-only]) ::slotted(*),:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:flex;align-items:center;inline-size:-moz-fit-content;inline-size:fit-content}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([scale=s]){block-size:1.5rem;--calcite-rating-spacing-unit:0.25rem}:host([scale=m]){block-size:2rem;--calcite-rating-spacing-unit:0.5rem}:host([scale=l]){block-size:2.75rem;--calcite-rating-spacing-unit:0.75rem}.fieldset{margin:0;display:flex;border-width:0;padding:0;align-items:center;gap:var(--calcite-rating-spacing-unit)}.wrapper{display:inline-block}.star{transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;position:relative;display:flex;flex-direction:column;cursor:pointer;color:var(--calcite-ui-border-input)}.star:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.average,.fraction{color:var(--calcite-ui-warning)}.hovered,.selected{color:var(--calcite-ui-brand)}.fraction{transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;position:absolute;pointer-events:none;inset-block-start:0;overflow:hidden;inset-inline-start:0}calcite-chip{pointer-events:none;cursor:default}.number--average{font-weight:bold}.number--count{color:var(--calcite-ui-text-2);font-style:italic}.number--count:not(:first-child){margin-inline-start:var(--calcite-rating-spacing-unit)}.visually-hidden{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}:host([hidden]){display:none}[hidden]{display:none}";

const Rating = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteRatingChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteRatingChange", 6);
    this.handleRatingPointerOver = () => {
      this.isKeyboardInteraction = false;
    };
    this.handleRatingPointerOut = () => {
      this.isKeyboardInteraction = true;
      this.hoverValue = null;
    };
    this.handleHostKeyDown = () => {
      this.isKeyboardInteraction = true;
    };
    this.handleLabelKeyDown = (event) => {
      const inputValue = this.getValueFromLabelEvent(event);
      const key = event.key;
      const numberKey = key == " " ? undefined : Number(key);
      this.emit = true;
      if (isNaN(numberKey)) {
        switch (key) {
          case "Enter":
          case " ":
            this.value = !this.required && this.value === inputValue ? 0 : inputValue;
            break;
          case "ArrowLeft":
            this.value = this.getPreviousRatingValue(inputValue);
            this.updateFocus();
            event.preventDefault();
            break;
          case "ArrowRight":
            this.value = this.getNextRatingValue(inputValue);
            this.updateFocus();
            event.preventDefault();
            break;
          case "Tab":
            this.hoverValue = null;
        }
      }
      else {
        if (!this.required && numberKey >= 0 && numberKey <= this.max) {
          this.value = numberKey;
        }
        else if (this.required && numberKey > 0 && numberKey <= this.max) {
          this.value = numberKey;
        }
        this.updateFocus();
      }
    };
    this.handleInputChange = (event) => {
      if (this.isKeyboardInteraction === true) {
        const inputVal = Number(event.target["value"]);
        this.hoverValue = inputVal;
        this.value = inputVal;
      }
    };
    this.handleLabelPointerOver = (event) => {
      this.hoverValue = this.getValueFromLabelEvent(event);
    };
    this.handleLabelPointerDown = (event) => {
      const target = event.currentTarget;
      const inputValue = this.getValueFromLabelEvent(event);
      this.hoverValue = inputValue;
      this.emit = true;
      this.value = !this.required && this.value === inputValue ? 0 : inputValue;
      target.focus();
    };
    this.handleLabelClick = (event) => {
      //preventing pointerdown event will supress any compatability mouse events except for click event.
      event.preventDefault();
    };
    this.handleLabelFocus = (event) => {
      const inputValue = this.getValueFromLabelEvent(event);
      this.hoverValue = inputValue;
    };
    this.setLabelEl = (el) => {
      this.labelElements.push(el);
    };
    this.emit = false;
    this.guid = `calcite-ratings-${(0,_guid_js__WEBPACK_IMPORTED_MODULE_1__.g)()}`;
    this.isKeyboardInteraction = true;
    this.labelElements = [];
    this.max = 5;
    this.average = undefined;
    this.count = undefined;
    this.disabled = false;
    this.form = undefined;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.name = undefined;
    this.readOnly = false;
    this.required = false;
    this.scale = "m";
    this.showChip = false;
    this.value = 0;
    this.effectiveLocale = "";
    this.defaultMessages = undefined;
    this.hoverValue = undefined;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  handleValueUpdate(newValue) {
    this.hoverValue = newValue;
    if (this.emit) {
      this.calciteRatingChange.emit();
    }
    this.emit = false;
  }
  effectiveLocaleChange() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_6__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_6__.c)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
  }
  async componentWillLoad() {
    await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_6__.s)(this);
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.a)(this);
  }
  componentWillRender() {
    this.starsMap = Array.from({ length: this.max }, (_, i) => {
      const value = i + 1;
      const average = !this.hoverValue && this.average && !this.value && value <= this.average;
      const checked = value === this.value;
      const fraction = this.average && this.average + 1 - value;
      const hovered = value <= this.hoverValue;
      const id = `${this.guid}-${value}`;
      const partial = !this.hoverValue && !this.value && !hovered && fraction > 0 && fraction < 1;
      const selected = this.value >= value;
      const tabIndex = this.getTabIndex(value);
      return {
        average,
        checked,
        fraction,
        hovered,
        id,
        partial,
        selected,
        value,
        tabIndex,
      };
    });
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
  }
  disconnectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_5__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_6__.d)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_0__.d)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.u)(this);
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.Host, { onKeyDown: this.handleHostKeyDown, onPointerOut: this.handleRatingPointerOut, onPointerOver: this.handleRatingPointerOver }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("span", { class: "wrapper" }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("fieldset", { class: "fieldset", disabled: this.disabled }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("legend", { class: "visually-hidden" }, this.messages.rating), this.starsMap.map(({ average, checked, fraction, hovered, id, partial, selected, value, tabIndex }) => {
      return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("label", { class: {
          star: true,
          selected,
          hovered,
          average,
          partial,
        }, "data-value": value, htmlFor: id, onClick: this.handleLabelClick, onFocus: this.handleLabelFocus, onKeyDown: this.handleLabelKeyDown, onPointerDown: this.handleLabelPointerDown, onPointerOver: this.handleLabelPointerOver, tabIndex: tabIndex,
        // eslint-disable-next-line react/jsx-sort-props
        ref: this.setLabelEl }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("input", { checked: checked, class: "visually-hidden", disabled: this.disabled || this.readOnly, id: id, name: this.guid, onChange: this.handleInputChange, tabIndex: -1, type: "radio", value: value }), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(StarIcon, { full: selected || average, scale: this.scale }), partial && ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("div", { class: "fraction", style: { width: `${fraction * 100}%` } }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(StarIcon, { full: true, partial: true, scale: this.scale }))), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("span", { class: "visually-hidden" }, this.messages.stars.replace("{num}", `${value}`))));
    }), (this.count || this.average) && this.showChip ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-chip", { scale: this.scale, value: this.count?.toString() }, !!this.average && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("span", { class: "number--average" }, this.average.toString()), !!this.count && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("span", { class: "number--count" }, "(", this.count?.toString(), ")"))) : null), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(_form_js__WEBPACK_IMPORTED_MODULE_0__.H, { component: this }))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  updateFocus() {
    this.hoverValue = this.value;
    this.labelElements[this.value - 1].focus();
  }
  getTabIndex(value) {
    if (this.readOnly || (this.value !== value && (this.value || value !== 1))) {
      return -1;
    }
    return 0;
  }
  getValueFromLabelEvent(event) {
    const target = event.currentTarget;
    return Number(target.getAttribute("data-value"));
  }
  getNextRatingValue(currentValue) {
    return currentValue === 5 ? 1 : currentValue + 1;
  }
  getPreviousRatingValue(currentValue) {
    return currentValue === 1 ? 5 : currentValue - 1;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    (0,_dom_js__WEBPACK_IMPORTED_MODULE_7__.f)(this.el);
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return this; }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "value": ["handleValueUpdate"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
  static get style() { return ratingCss; }
}, [1, "calcite-rating", {
    "average": [514],
    "count": [514],
    "disabled": [516],
    "form": [513],
    "messages": [1040],
    "messageOverrides": [1040],
    "name": [513],
    "readOnly": [516, "read-only"],
    "required": [516],
    "scale": [513],
    "showChip": [516, "show-chip"],
    "value": [1538],
    "effectiveLocale": [32],
    "defaultMessages": [32],
    "hoverValue": [32],
    "setFocus": [64]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-rating", "calcite-chip", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-rating":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Rating);
      }
      break;
    case "calcite-chip":
      if (!customElements.get(tagName)) {
        (0,_chip_js__WEBPACK_IMPORTED_MODULE_8__.d)();
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_9__.d)();
      }
      break;
  } });
}
defineCustomElement$1();

const CalciteRating = Rating;
const defineCustomElement = defineCustomElement$1;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbnRzX2NhbGNpdGUtcmF0aW5nX2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrRztBQUNuQjtBQUN0RDtBQUM2RTtBQUM3QztBQUN3QztBQUNoQztBQUNvQztBQUMvRDtBQUNJO0FBQ0E7O0FBRXZELG9CQUFvQixzQkFBc0IsTUFBTSwwRUFBQyxtQkFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTCxxQ0FBcUMsZUFBZSx5QkFBeUIsaUJBQWlCLDJDQUEyQyx3R0FBd0csb0JBQW9CLE1BQU0sa0JBQWtCLGFBQWEsbUJBQW1CLDZCQUE2Qix3QkFBd0IseUdBQXlHLFVBQVUsaUJBQWlCLGtCQUFrQixzQ0FBc0MsaUJBQWlCLGdCQUFnQixxQ0FBcUMsaUJBQWlCLG1CQUFtQixzQ0FBc0MsVUFBVSxTQUFTLGFBQWEsZUFBZSxVQUFVLG1CQUFtQix1Q0FBdUMsU0FBUyxxQkFBcUIsTUFBTSw2RkFBNkYsa0JBQWtCLGFBQWEsc0JBQXNCLGVBQWUscUNBQXFDLFlBQVkseUVBQXlFLG9QQUFvUCxtQkFBbUIsZ0NBQWdDLG1CQUFtQiw4QkFBOEIsVUFBVSw2RkFBNkYsa0JBQWtCLG9CQUFvQixvQkFBb0IsZ0JBQWdCLHFCQUFxQixhQUFhLG9CQUFvQixlQUFlLGlCQUFpQixpQkFBaUIsZUFBZSwrQkFBK0Isa0JBQWtCLGlDQUFpQyx1REFBdUQsaUJBQWlCLGtCQUFrQixnQkFBZ0IsZUFBZSxVQUFVLFlBQVksZ0JBQWdCLHNCQUFzQixtQkFBbUIsZUFBZSx5Q0FBeUMsb0JBQW9CLHFCQUFxQix3QkFBd0IscUJBQXFCLDZCQUE2QixtQkFBbUIsMEJBQTBCLG1DQUFtQyxzQkFBc0IsZ0JBQWdCLGFBQWEsU0FBUyxhQUFhOztBQUU3MEUsNkJBQTZCLDJGQUFrQixlQUFl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dEI7QUFDQSw0QkFBNEI7QUFDNUIsYUFBYTtBQUNiLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkNBQXFCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyQ0FBcUI7QUFDN0I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtcmF0aW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2MS43LjBcbiAqL1xuaW1wb3J0IHsgaCwgcHJveHlDdXN0b21FbGVtZW50LCBIVE1MRWxlbWVudCwgY3JlYXRlRXZlbnQsIEhvc3QgfSBmcm9tICdAc3RlbmNpbC9jb3JlL2ludGVybmFsL2NsaWVudC9pbmRleC5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RGb3JtLCBkIGFzIGRpc2Nvbm5lY3RGb3JtLCBIIGFzIEhpZGRlbkZvcm1JbnB1dFNsb3QgfSBmcm9tICcuL2Zvcm0uanMnO1xuaW1wb3J0IHsgZyBhcyBndWlkIH0gZnJvbSAnLi9ndWlkLmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdEludGVyYWN0aXZlLCBkIGFzIGRpc2Nvbm5lY3RJbnRlcmFjdGl2ZSwgdSBhcyB1cGRhdGVIb3N0SW50ZXJhY3Rpb24gfSBmcm9tICcuL2ludGVyYWN0aXZlLmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdExhYmVsLCBkIGFzIGRpc2Nvbm5lY3RMYWJlbCB9IGZyb20gJy4vbGFiZWwyLmpzJztcbmltcG9ydCB7IGEgYXMgc2V0VXBMb2FkYWJsZUNvbXBvbmVudCwgcyBhcyBzZXRDb21wb25lbnRMb2FkZWQsIGMgYXMgY29tcG9uZW50Rm9jdXNhYmxlIH0gZnJvbSAnLi9sb2FkYWJsZS5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RMb2NhbGl6ZWQsIGQgYXMgZGlzY29ubmVjdExvY2FsaXplZCB9IGZyb20gJy4vbG9jYWxlLmpzJztcbmltcG9ydCB7IHUgYXMgdXBkYXRlTWVzc2FnZXMsIGMgYXMgY29ubmVjdE1lc3NhZ2VzLCBzIGFzIHNldFVwTWVzc2FnZXMsIGQgYXMgZGlzY29ubmVjdE1lc3NhZ2VzIH0gZnJvbSAnLi90OW4uanMnO1xuaW1wb3J0IHsgZiBhcyBmb2N1c0ZpcnN0VGFiYmFibGUgfSBmcm9tICcuL2RvbS5qcyc7XG5pbXBvcnQgeyBkIGFzIGRlZmluZUN1c3RvbUVsZW1lbnQkMyB9IGZyb20gJy4vY2hpcC5qcyc7XG5pbXBvcnQgeyBkIGFzIGRlZmluZUN1c3RvbUVsZW1lbnQkMiB9IGZyb20gJy4vaWNvbi5qcyc7XG5cbmNvbnN0IFN0YXJJY29uID0gKHsgZnVsbCwgc2NhbGUsIHBhcnRpYWwgfSkgPT4gKGgoXCJjYWxjaXRlLWljb25cIiwgeyAuLi57XG4gICAgY2xhc3M6IHBhcnRpYWwgPyB1bmRlZmluZWQgOiBcImljb25cIixcbiAgICBpY29uOiBmdWxsID8gXCJzdGFyLWZcIiA6IFwic3RhclwiLFxuICAgIHNjYWxlLFxuICB9IH0pKTtcblxuY29uc3QgcmF0aW5nQ3NzID0gXCI6aG9zdChbZGlzYWJsZWRdKXtjdXJzb3I6ZGVmYXVsdDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtvcGFjaXR5OnZhcigtLWNhbGNpdGUtdWktb3BhY2l0eS1kaXNhYmxlZCl9Omhvc3QoW3JlYWQtb25seV0pICosOmhvc3QoW2Rpc2FibGVkXSkgKiw6aG9zdChbcmVhZC1vbmx5XSkgOjpzbG90dGVkKCopLDpob3N0KFtkaXNhYmxlZF0pIDo6c2xvdHRlZCgqKXtwb2ludGVyLWV2ZW50czpub25lfTpob3N0e3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7aW5saW5lLXNpemU6LW1vei1maXQtY29udGVudDtpbmxpbmUtc2l6ZTpmaXQtY29udGVudH06aG9zdChbZGlzYWJsZWRdKSA6OnNsb3R0ZWQoW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXSksOmhvc3QoW2Rpc2FibGVkXSkgW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXXtvcGFjaXR5OjF9Omhvc3QoW3NjYWxlPXNdKXtibG9jay1zaXplOjEuNXJlbTstLWNhbGNpdGUtcmF0aW5nLXNwYWNpbmctdW5pdDowLjI1cmVtfTpob3N0KFtzY2FsZT1tXSl7YmxvY2stc2l6ZToycmVtOy0tY2FsY2l0ZS1yYXRpbmctc3BhY2luZy11bml0OjAuNXJlbX06aG9zdChbc2NhbGU9bF0pe2Jsb2NrLXNpemU6Mi43NXJlbTstLWNhbGNpdGUtcmF0aW5nLXNwYWNpbmctdW5pdDowLjc1cmVtfS5maWVsZHNldHttYXJnaW46MDtkaXNwbGF5OmZsZXg7Ym9yZGVyLXdpZHRoOjA7cGFkZGluZzowO2FsaWduLWl0ZW1zOmNlbnRlcjtnYXA6dmFyKC0tY2FsY2l0ZS1yYXRpbmctc3BhY2luZy11bml0KX0ud3JhcHBlcntkaXNwbGF5OmlubGluZS1ibG9ja30uc3Rhcnt0cmFuc2l0aW9uOmFsbCB2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpIGVhc2UtaW4tb3V0IDBzLCBvdXRsaW5lIDBzLCBvdXRsaW5lLW9mZnNldCAwcztwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2N1cnNvcjpwb2ludGVyO2NvbG9yOnZhcigtLWNhbGNpdGUtdWktYm9yZGVyLWlucHV0KX0uc3Rhcjpmb2N1c3tvdXRsaW5lOjJweCBzb2xpZCB2YXIoLS1jYWxjaXRlLXVpLWZvY3VzLWNvbG9yLCB2YXIoLS1jYWxjaXRlLXVpLWJyYW5kKSk7b3V0bGluZS1vZmZzZXQ6Y2FsYyhcXG4gICAgICAgICAgICAycHggKlxcbiAgICAgICAgICAgIGNhbGMoXFxuICAgICAgICAgICAgICAxIC1cXG4gICAgICAgICAgICAgIDIgKiBjbGFtcChcXG4gICAgICAgICAgICAgICAgMCxcXG4gICAgICAgICAgICAgICAgdmFyKC0tY2FsY2l0ZS11aS1mb2N1cy1vZmZzZXQtaW52ZXJ0KSxcXG4gICAgICAgICAgICAgICAgMVxcbiAgICAgICAgICAgICAgKVxcbiAgICAgICAgICAgIClcXG4gICAgICAgICAgKX0uYXZlcmFnZSwuZnJhY3Rpb257Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS13YXJuaW5nKX0uaG92ZXJlZCwuc2VsZWN0ZWR7Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS1icmFuZCl9LmZyYWN0aW9ue3RyYW5zaXRpb246YWxsIHZhcigtLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZykgZWFzZS1pbi1vdXQgMHMsIG91dGxpbmUgMHMsIG91dGxpbmUtb2Zmc2V0IDBzO3Bvc2l0aW9uOmFic29sdXRlO3BvaW50ZXItZXZlbnRzOm5vbmU7aW5zZXQtYmxvY2stc3RhcnQ6MDtvdmVyZmxvdzpoaWRkZW47aW5zZXQtaW5saW5lLXN0YXJ0OjB9Y2FsY2l0ZS1jaGlwe3BvaW50ZXItZXZlbnRzOm5vbmU7Y3Vyc29yOmRlZmF1bHR9Lm51bWJlci0tYXZlcmFnZXtmb250LXdlaWdodDpib2xkfS5udW1iZXItLWNvdW50e2NvbG9yOnZhcigtLWNhbGNpdGUtdWktdGV4dC0yKTtmb250LXN0eWxlOml0YWxpY30ubnVtYmVyLS1jb3VudDpub3QoOmZpcnN0LWNoaWxkKXttYXJnaW4taW5saW5lLXN0YXJ0OnZhcigtLWNhbGNpdGUtcmF0aW5nLXNwYWNpbmctdW5pdCl9LnZpc3VhbGx5LWhpZGRlbntwb3NpdGlvbjphYnNvbHV0ZTtpbmxpbmUtc2l6ZToxcHg7YmxvY2stc2l6ZToxcHg7cGFkZGluZzowO21hcmdpbjotMXB4O292ZXJmbG93OmhpZGRlbjtjbGlwOnJlY3QoMCwgMCwgMCwgMCk7d2hpdGUtc3BhY2U6bm93cmFwO2JvcmRlci13aWR0aDowfTo6c2xvdHRlZChpbnB1dFtzbG90PWhpZGRlbi1mb3JtLWlucHV0XSl7bWFyZ2luOjAgIWltcG9ydGFudDtvcGFjaXR5OjAgIWltcG9ydGFudDtvdXRsaW5lOm5vbmUgIWltcG9ydGFudDtwYWRkaW5nOjAgIWltcG9ydGFudDtwb3NpdGlvbjphYnNvbHV0ZSAhaW1wb3J0YW50O2luc2V0OjAgIWltcG9ydGFudDt0cmFuc2Zvcm06bm9uZSAhaW1wb3J0YW50Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lICFpbXBvcnRhbnQ7ei1pbmRleDotMSAhaW1wb3J0YW50fTpob3N0KFtoaWRkZW5dKXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lfVwiO1xuXG5jb25zdCBSYXRpbmcgPSAvKkBfX1BVUkVfXyovIHByb3h5Q3VzdG9tRWxlbWVudChjbGFzcyBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9fcmVnaXN0ZXJIb3N0KCk7XG4gICAgdGhpcy5fX2F0dGFjaFNoYWRvdygpO1xuICAgIHRoaXMuY2FsY2l0ZVJhdGluZ0NoYW5nZSA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZVJhdGluZ0NoYW5nZVwiLCA2KTtcbiAgICB0aGlzLmhhbmRsZVJhdGluZ1BvaW50ZXJPdmVyID0gKCkgPT4ge1xuICAgICAgdGhpcy5pc0tleWJvYXJkSW50ZXJhY3Rpb24gPSBmYWxzZTtcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlUmF0aW5nUG9pbnRlck91dCA9ICgpID0+IHtcbiAgICAgIHRoaXMuaXNLZXlib2FyZEludGVyYWN0aW9uID0gdHJ1ZTtcbiAgICAgIHRoaXMuaG92ZXJWYWx1ZSA9IG51bGw7XG4gICAgfTtcbiAgICB0aGlzLmhhbmRsZUhvc3RLZXlEb3duID0gKCkgPT4ge1xuICAgICAgdGhpcy5pc0tleWJvYXJkSW50ZXJhY3Rpb24gPSB0cnVlO1xuICAgIH07XG4gICAgdGhpcy5oYW5kbGVMYWJlbEtleURvd24gPSAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0aGlzLmdldFZhbHVlRnJvbUxhYmVsRXZlbnQoZXZlbnQpO1xuICAgICAgY29uc3Qga2V5ID0gZXZlbnQua2V5O1xuICAgICAgY29uc3QgbnVtYmVyS2V5ID0ga2V5ID09IFwiIFwiID8gdW5kZWZpbmVkIDogTnVtYmVyKGtleSk7XG4gICAgICB0aGlzLmVtaXQgPSB0cnVlO1xuICAgICAgaWYgKGlzTmFOKG51bWJlcktleSkpIHtcbiAgICAgICAgc3dpdGNoIChrZXkpIHtcbiAgICAgICAgICBjYXNlIFwiRW50ZXJcIjpcbiAgICAgICAgICBjYXNlIFwiIFwiOlxuICAgICAgICAgICAgdGhpcy52YWx1ZSA9ICF0aGlzLnJlcXVpcmVkICYmIHRoaXMudmFsdWUgPT09IGlucHV0VmFsdWUgPyAwIDogaW5wdXRWYWx1ZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJBcnJvd0xlZnRcIjpcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmdldFByZXZpb3VzUmF0aW5nVmFsdWUoaW5wdXRWYWx1ZSk7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUZvY3VzKCk7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkFycm93UmlnaHRcIjpcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmdldE5leHRSYXRpbmdWYWx1ZShpbnB1dFZhbHVlKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRm9jdXMoKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiVGFiXCI6XG4gICAgICAgICAgICB0aGlzLmhvdmVyVmFsdWUgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgaWYgKCF0aGlzLnJlcXVpcmVkICYmIG51bWJlcktleSA+PSAwICYmIG51bWJlcktleSA8PSB0aGlzLm1heCkge1xuICAgICAgICAgIHRoaXMudmFsdWUgPSBudW1iZXJLZXk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5yZXF1aXJlZCAmJiBudW1iZXJLZXkgPiAwICYmIG51bWJlcktleSA8PSB0aGlzLm1heCkge1xuICAgICAgICAgIHRoaXMudmFsdWUgPSBudW1iZXJLZXk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVGb2N1cygpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5oYW5kbGVJbnB1dENoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgaWYgKHRoaXMuaXNLZXlib2FyZEludGVyYWN0aW9uID09PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IGlucHV0VmFsID0gTnVtYmVyKGV2ZW50LnRhcmdldFtcInZhbHVlXCJdKTtcbiAgICAgICAgdGhpcy5ob3ZlclZhbHVlID0gaW5wdXRWYWw7XG4gICAgICAgIHRoaXMudmFsdWUgPSBpbnB1dFZhbDtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlTGFiZWxQb2ludGVyT3ZlciA9IChldmVudCkgPT4ge1xuICAgICAgdGhpcy5ob3ZlclZhbHVlID0gdGhpcy5nZXRWYWx1ZUZyb21MYWJlbEV2ZW50KGV2ZW50KTtcbiAgICB9O1xuICAgIHRoaXMuaGFuZGxlTGFiZWxQb2ludGVyRG93biA9IChldmVudCkgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0aGlzLmdldFZhbHVlRnJvbUxhYmVsRXZlbnQoZXZlbnQpO1xuICAgICAgdGhpcy5ob3ZlclZhbHVlID0gaW5wdXRWYWx1ZTtcbiAgICAgIHRoaXMuZW1pdCA9IHRydWU7XG4gICAgICB0aGlzLnZhbHVlID0gIXRoaXMucmVxdWlyZWQgJiYgdGhpcy52YWx1ZSA9PT0gaW5wdXRWYWx1ZSA/IDAgOiBpbnB1dFZhbHVlO1xuICAgICAgdGFyZ2V0LmZvY3VzKCk7XG4gICAgfTtcbiAgICB0aGlzLmhhbmRsZUxhYmVsQ2xpY2sgPSAoZXZlbnQpID0+IHtcbiAgICAgIC8vcHJldmVudGluZyBwb2ludGVyZG93biBldmVudCB3aWxsIHN1cHJlc3MgYW55IGNvbXBhdGFiaWxpdHkgbW91c2UgZXZlbnRzIGV4Y2VwdCBmb3IgY2xpY2sgZXZlbnQuXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG4gICAgdGhpcy5oYW5kbGVMYWJlbEZvY3VzID0gKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBpbnB1dFZhbHVlID0gdGhpcy5nZXRWYWx1ZUZyb21MYWJlbEV2ZW50KGV2ZW50KTtcbiAgICAgIHRoaXMuaG92ZXJWYWx1ZSA9IGlucHV0VmFsdWU7XG4gICAgfTtcbiAgICB0aGlzLnNldExhYmVsRWwgPSAoZWwpID0+IHtcbiAgICAgIHRoaXMubGFiZWxFbGVtZW50cy5wdXNoKGVsKTtcbiAgICB9O1xuICAgIHRoaXMuZW1pdCA9IGZhbHNlO1xuICAgIHRoaXMuZ3VpZCA9IGBjYWxjaXRlLXJhdGluZ3MtJHtndWlkKCl9YDtcbiAgICB0aGlzLmlzS2V5Ym9hcmRJbnRlcmFjdGlvbiA9IHRydWU7XG4gICAgdGhpcy5sYWJlbEVsZW1lbnRzID0gW107XG4gICAgdGhpcy5tYXggPSA1O1xuICAgIHRoaXMuYXZlcmFnZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmNvdW50ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmZvcm0gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5tZXNzYWdlcyA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLm1lc3NhZ2VPdmVycmlkZXMgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5uYW1lID0gdW5kZWZpbmVkO1xuICAgIHRoaXMucmVhZE9ubHkgPSBmYWxzZTtcbiAgICB0aGlzLnJlcXVpcmVkID0gZmFsc2U7XG4gICAgdGhpcy5zY2FsZSA9IFwibVwiO1xuICAgIHRoaXMuc2hvd0NoaXAgPSBmYWxzZTtcbiAgICB0aGlzLnZhbHVlID0gMDtcbiAgICB0aGlzLmVmZmVjdGl2ZUxvY2FsZSA9IFwiXCI7XG4gICAgdGhpcy5kZWZhdWx0TWVzc2FnZXMgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5ob3ZlclZhbHVlID0gdW5kZWZpbmVkO1xuICB9XG4gIG9uTWVzc2FnZXNDaGFuZ2UoKSB7XG4gICAgLyogd2lyZWQgdXAgYnkgdDluIHV0aWwgKi9cbiAgfVxuICBoYW5kbGVWYWx1ZVVwZGF0ZShuZXdWYWx1ZSkge1xuICAgIHRoaXMuaG92ZXJWYWx1ZSA9IG5ld1ZhbHVlO1xuICAgIGlmICh0aGlzLmVtaXQpIHtcbiAgICAgIHRoaXMuY2FsY2l0ZVJhdGluZ0NoYW5nZS5lbWl0KCk7XG4gICAgfVxuICAgIHRoaXMuZW1pdCA9IGZhbHNlO1xuICB9XG4gIGVmZmVjdGl2ZUxvY2FsZUNoYW5nZSgpIHtcbiAgICB1cGRhdGVNZXNzYWdlcyh0aGlzLCB0aGlzLmVmZmVjdGl2ZUxvY2FsZSk7XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgTGlmZWN5Y2xlXG4gIC8vXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29ubmVjdEludGVyYWN0aXZlKHRoaXMpO1xuICAgIGNvbm5lY3RMb2NhbGl6ZWQodGhpcyk7XG4gICAgY29ubmVjdE1lc3NhZ2VzKHRoaXMpO1xuICAgIGNvbm5lY3RMYWJlbCh0aGlzKTtcbiAgICBjb25uZWN0Rm9ybSh0aGlzKTtcbiAgfVxuICBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICBhd2FpdCBzZXRVcE1lc3NhZ2VzKHRoaXMpO1xuICAgIHNldFVwTG9hZGFibGVDb21wb25lbnQodGhpcyk7XG4gIH1cbiAgY29tcG9uZW50V2lsbFJlbmRlcigpIHtcbiAgICB0aGlzLnN0YXJzTWFwID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogdGhpcy5tYXggfSwgKF8sIGkpID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gaSArIDE7XG4gICAgICBjb25zdCBhdmVyYWdlID0gIXRoaXMuaG92ZXJWYWx1ZSAmJiB0aGlzLmF2ZXJhZ2UgJiYgIXRoaXMudmFsdWUgJiYgdmFsdWUgPD0gdGhpcy5hdmVyYWdlO1xuICAgICAgY29uc3QgY2hlY2tlZCA9IHZhbHVlID09PSB0aGlzLnZhbHVlO1xuICAgICAgY29uc3QgZnJhY3Rpb24gPSB0aGlzLmF2ZXJhZ2UgJiYgdGhpcy5hdmVyYWdlICsgMSAtIHZhbHVlO1xuICAgICAgY29uc3QgaG92ZXJlZCA9IHZhbHVlIDw9IHRoaXMuaG92ZXJWYWx1ZTtcbiAgICAgIGNvbnN0IGlkID0gYCR7dGhpcy5ndWlkfS0ke3ZhbHVlfWA7XG4gICAgICBjb25zdCBwYXJ0aWFsID0gIXRoaXMuaG92ZXJWYWx1ZSAmJiAhdGhpcy52YWx1ZSAmJiAhaG92ZXJlZCAmJiBmcmFjdGlvbiA+IDAgJiYgZnJhY3Rpb24gPCAxO1xuICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB0aGlzLnZhbHVlID49IHZhbHVlO1xuICAgICAgY29uc3QgdGFiSW5kZXggPSB0aGlzLmdldFRhYkluZGV4KHZhbHVlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGF2ZXJhZ2UsXG4gICAgICAgIGNoZWNrZWQsXG4gICAgICAgIGZyYWN0aW9uLFxuICAgICAgICBob3ZlcmVkLFxuICAgICAgICBpZCxcbiAgICAgICAgcGFydGlhbCxcbiAgICAgICAgc2VsZWN0ZWQsXG4gICAgICAgIHZhbHVlLFxuICAgICAgICB0YWJJbmRleCxcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICBzZXRDb21wb25lbnRMb2FkZWQodGhpcyk7XG4gIH1cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgZGlzY29ubmVjdEludGVyYWN0aXZlKHRoaXMpO1xuICAgIGRpc2Nvbm5lY3RMb2NhbGl6ZWQodGhpcyk7XG4gICAgZGlzY29ubmVjdE1lc3NhZ2VzKHRoaXMpO1xuICAgIGRpc2Nvbm5lY3RMYWJlbCh0aGlzKTtcbiAgICBkaXNjb25uZWN0Rm9ybSh0aGlzKTtcbiAgfVxuICBjb21wb25lbnREaWRSZW5kZXIoKSB7XG4gICAgdXBkYXRlSG9zdEludGVyYWN0aW9uKHRoaXMpO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKGgoSG9zdCwgeyBvbktleURvd246IHRoaXMuaGFuZGxlSG9zdEtleURvd24sIG9uUG9pbnRlck91dDogdGhpcy5oYW5kbGVSYXRpbmdQb2ludGVyT3V0LCBvblBvaW50ZXJPdmVyOiB0aGlzLmhhbmRsZVJhdGluZ1BvaW50ZXJPdmVyIH0sIGgoXCJzcGFuXCIsIHsgY2xhc3M6IFwid3JhcHBlclwiIH0sIGgoXCJmaWVsZHNldFwiLCB7IGNsYXNzOiBcImZpZWxkc2V0XCIsIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkIH0sIGgoXCJsZWdlbmRcIiwgeyBjbGFzczogXCJ2aXN1YWxseS1oaWRkZW5cIiB9LCB0aGlzLm1lc3NhZ2VzLnJhdGluZyksIHRoaXMuc3RhcnNNYXAubWFwKCh7IGF2ZXJhZ2UsIGNoZWNrZWQsIGZyYWN0aW9uLCBob3ZlcmVkLCBpZCwgcGFydGlhbCwgc2VsZWN0ZWQsIHZhbHVlLCB0YWJJbmRleCB9KSA9PiB7XG4gICAgICByZXR1cm4gKGgoXCJsYWJlbFwiLCB7IGNsYXNzOiB7XG4gICAgICAgICAgc3RhcjogdHJ1ZSxcbiAgICAgICAgICBzZWxlY3RlZCxcbiAgICAgICAgICBob3ZlcmVkLFxuICAgICAgICAgIGF2ZXJhZ2UsXG4gICAgICAgICAgcGFydGlhbCxcbiAgICAgICAgfSwgXCJkYXRhLXZhbHVlXCI6IHZhbHVlLCBodG1sRm9yOiBpZCwgb25DbGljazogdGhpcy5oYW5kbGVMYWJlbENsaWNrLCBvbkZvY3VzOiB0aGlzLmhhbmRsZUxhYmVsRm9jdXMsIG9uS2V5RG93bjogdGhpcy5oYW5kbGVMYWJlbEtleURvd24sIG9uUG9pbnRlckRvd246IHRoaXMuaGFuZGxlTGFiZWxQb2ludGVyRG93biwgb25Qb2ludGVyT3ZlcjogdGhpcy5oYW5kbGVMYWJlbFBvaW50ZXJPdmVyLCB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9qc3gtc29ydC1wcm9wc1xuICAgICAgICByZWY6IHRoaXMuc2V0TGFiZWxFbCB9LCBoKFwiaW5wdXRcIiwgeyBjaGVja2VkOiBjaGVja2VkLCBjbGFzczogXCJ2aXN1YWxseS1oaWRkZW5cIiwgZGlzYWJsZWQ6IHRoaXMuZGlzYWJsZWQgfHwgdGhpcy5yZWFkT25seSwgaWQ6IGlkLCBuYW1lOiB0aGlzLmd1aWQsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlLCB0YWJJbmRleDogLTEsIHR5cGU6IFwicmFkaW9cIiwgdmFsdWU6IHZhbHVlIH0pLCBoKFN0YXJJY29uLCB7IGZ1bGw6IHNlbGVjdGVkIHx8IGF2ZXJhZ2UsIHNjYWxlOiB0aGlzLnNjYWxlIH0pLCBwYXJ0aWFsICYmIChoKFwiZGl2XCIsIHsgY2xhc3M6IFwiZnJhY3Rpb25cIiwgc3R5bGU6IHsgd2lkdGg6IGAke2ZyYWN0aW9uICogMTAwfSVgIH0gfSwgaChTdGFySWNvbiwgeyBmdWxsOiB0cnVlLCBwYXJ0aWFsOiB0cnVlLCBzY2FsZTogdGhpcy5zY2FsZSB9KSkpLCBoKFwic3BhblwiLCB7IGNsYXNzOiBcInZpc3VhbGx5LWhpZGRlblwiIH0sIHRoaXMubWVzc2FnZXMuc3RhcnMucmVwbGFjZShcIntudW19XCIsIGAke3ZhbHVlfWApKSkpO1xuICAgIH0pLCAodGhpcy5jb3VudCB8fCB0aGlzLmF2ZXJhZ2UpICYmIHRoaXMuc2hvd0NoaXAgPyAoaChcImNhbGNpdGUtY2hpcFwiLCB7IHNjYWxlOiB0aGlzLnNjYWxlLCB2YWx1ZTogdGhpcy5jb3VudD8udG9TdHJpbmcoKSB9LCAhIXRoaXMuYXZlcmFnZSAmJiBoKFwic3BhblwiLCB7IGNsYXNzOiBcIm51bWJlci0tYXZlcmFnZVwiIH0sIHRoaXMuYXZlcmFnZS50b1N0cmluZygpKSwgISF0aGlzLmNvdW50ICYmIGgoXCJzcGFuXCIsIHsgY2xhc3M6IFwibnVtYmVyLS1jb3VudFwiIH0sIFwiKFwiLCB0aGlzLmNvdW50Py50b1N0cmluZygpLCBcIilcIikpKSA6IG51bGwpLCBoKEhpZGRlbkZvcm1JbnB1dFNsb3QsIHsgY29tcG9uZW50OiB0aGlzIH0pKSkpO1xuICB9XG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy9cbiAgLy8gIFByaXZhdGUgTWV0aG9kc1xuICAvL1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIG9uTGFiZWxDbGljaygpIHtcbiAgICB0aGlzLnNldEZvY3VzKCk7XG4gIH1cbiAgdXBkYXRlRm9jdXMoKSB7XG4gICAgdGhpcy5ob3ZlclZhbHVlID0gdGhpcy52YWx1ZTtcbiAgICB0aGlzLmxhYmVsRWxlbWVudHNbdGhpcy52YWx1ZSAtIDFdLmZvY3VzKCk7XG4gIH1cbiAgZ2V0VGFiSW5kZXgodmFsdWUpIHtcbiAgICBpZiAodGhpcy5yZWFkT25seSB8fCAodGhpcy52YWx1ZSAhPT0gdmFsdWUgJiYgKHRoaXMudmFsdWUgfHwgdmFsdWUgIT09IDEpKSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuICBnZXRWYWx1ZUZyb21MYWJlbEV2ZW50KGV2ZW50KSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICByZXR1cm4gTnVtYmVyKHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXZhbHVlXCIpKTtcbiAgfVxuICBnZXROZXh0UmF0aW5nVmFsdWUoY3VycmVudFZhbHVlKSB7XG4gICAgcmV0dXJuIGN1cnJlbnRWYWx1ZSA9PT0gNSA/IDEgOiBjdXJyZW50VmFsdWUgKyAxO1xuICB9XG4gIGdldFByZXZpb3VzUmF0aW5nVmFsdWUoY3VycmVudFZhbHVlKSB7XG4gICAgcmV0dXJuIGN1cnJlbnRWYWx1ZSA9PT0gMSA/IDUgOiBjdXJyZW50VmFsdWUgLSAxO1xuICB9XG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy9cbiAgLy8gIFB1YmxpYyBNZXRob2RzXG4gIC8vXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqIFNldHMgZm9jdXMgb24gdGhlIGNvbXBvbmVudC4gKi9cbiAgYXN5bmMgc2V0Rm9jdXMoKSB7XG4gICAgYXdhaXQgY29tcG9uZW50Rm9jdXNhYmxlKHRoaXMpO1xuICAgIGZvY3VzRmlyc3RUYWJiYWJsZSh0aGlzLmVsKTtcbiAgfVxuICBzdGF0aWMgZ2V0IGFzc2V0c0RpcnMoKSB7IHJldHVybiBbXCJhc3NldHNcIl07IH1cbiAgZ2V0IGVsKCkgeyByZXR1cm4gdGhpczsgfVxuICBzdGF0aWMgZ2V0IHdhdGNoZXJzKCkgeyByZXR1cm4ge1xuICAgIFwibWVzc2FnZU92ZXJyaWRlc1wiOiBbXCJvbk1lc3NhZ2VzQ2hhbmdlXCJdLFxuICAgIFwidmFsdWVcIjogW1wiaGFuZGxlVmFsdWVVcGRhdGVcIl0sXG4gICAgXCJlZmZlY3RpdmVMb2NhbGVcIjogW1wiZWZmZWN0aXZlTG9jYWxlQ2hhbmdlXCJdXG4gIH07IH1cbiAgc3RhdGljIGdldCBzdHlsZSgpIHsgcmV0dXJuIHJhdGluZ0NzczsgfVxufSwgWzEsIFwiY2FsY2l0ZS1yYXRpbmdcIiwge1xuICAgIFwiYXZlcmFnZVwiOiBbNTE0XSxcbiAgICBcImNvdW50XCI6IFs1MTRdLFxuICAgIFwiZGlzYWJsZWRcIjogWzUxNl0sXG4gICAgXCJmb3JtXCI6IFs1MTNdLFxuICAgIFwibWVzc2FnZXNcIjogWzEwNDBdLFxuICAgIFwibWVzc2FnZU92ZXJyaWRlc1wiOiBbMTA0MF0sXG4gICAgXCJuYW1lXCI6IFs1MTNdLFxuICAgIFwicmVhZE9ubHlcIjogWzUxNiwgXCJyZWFkLW9ubHlcIl0sXG4gICAgXCJyZXF1aXJlZFwiOiBbNTE2XSxcbiAgICBcInNjYWxlXCI6IFs1MTNdLFxuICAgIFwic2hvd0NoaXBcIjogWzUxNiwgXCJzaG93LWNoaXBcIl0sXG4gICAgXCJ2YWx1ZVwiOiBbMTUzOF0sXG4gICAgXCJlZmZlY3RpdmVMb2NhbGVcIjogWzMyXSxcbiAgICBcImRlZmF1bHRNZXNzYWdlc1wiOiBbMzJdLFxuICAgIFwiaG92ZXJWYWx1ZVwiOiBbMzJdLFxuICAgIFwic2V0Rm9jdXNcIjogWzY0XVxuICB9XSk7XG5mdW5jdGlvbiBkZWZpbmVDdXN0b21FbGVtZW50JDEoKSB7XG4gIGlmICh0eXBlb2YgY3VzdG9tRWxlbWVudHMgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgY29tcG9uZW50cyA9IFtcImNhbGNpdGUtcmF0aW5nXCIsIFwiY2FsY2l0ZS1jaGlwXCIsIFwiY2FsY2l0ZS1pY29uXCJdO1xuICBjb21wb25lbnRzLmZvckVhY2godGFnTmFtZSA9PiB7IHN3aXRjaCAodGFnTmFtZSkge1xuICAgIGNhc2UgXCJjYWxjaXRlLXJhdGluZ1wiOlxuICAgICAgaWYgKCFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKHRhZ05hbWUsIFJhdGluZyk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiY2FsY2l0ZS1jaGlwXCI6XG4gICAgICBpZiAoIWN1c3RvbUVsZW1lbnRzLmdldCh0YWdOYW1lKSkge1xuICAgICAgICBkZWZpbmVDdXN0b21FbGVtZW50JDMoKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJjYWxjaXRlLWljb25cIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGRlZmluZUN1c3RvbUVsZW1lbnQkMigpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gIH0gfSk7XG59XG5kZWZpbmVDdXN0b21FbGVtZW50JDEoKTtcblxuY29uc3QgQ2FsY2l0ZVJhdGluZyA9IFJhdGluZztcbmNvbnN0IGRlZmluZUN1c3RvbUVsZW1lbnQgPSBkZWZpbmVDdXN0b21FbGVtZW50JDE7XG5cbmV4cG9ydCB7IENhbGNpdGVSYXRpbmcsIGRlZmluZUN1c3RvbUVsZW1lbnQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==