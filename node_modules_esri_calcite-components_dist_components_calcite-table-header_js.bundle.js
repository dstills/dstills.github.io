"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["node_modules_esri_calcite-components_dist_components_calcite-table-header_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/components/calcite-table-header.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-table-header.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteTableHeader: () => (/* binding */ CalciteTableHeader),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _table_header_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./table-header.js */ "./node_modules/@esri/calcite-components/dist/components/table-header.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.7.0
 */


const CalciteTableHeader = _table_header_js__WEBPACK_IMPORTED_MODULE_0__.T;
const defineCustomElement = _table_header_js__WEBPACK_IMPORTED_MODULE_0__.d;




/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/table-header.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/table-header.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   T: () => (/* binding */ TableHeader),
/* harmony export */   d: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.7.0
 */






const CSS = {
  numberCell: "number-cell",
  selectionCell: "selection-cell",
  bodyRow: "body-row",
  footerRow: "footer-row",
  heading: "heading",
  description: "description",
  multipleSelectionCell: "cell--multiple-selection",
  assistiveText: "assistive-text",
  active: "active",
};

const tableHeaderCss = ":host{--calcite-internal-table-header-background:var(--calcite-table-header-background, var(--calcite-ui-foreground-2));--calcite-internal-table-header-border-color:var(--calcite-table-border-color, var(--calcite-ui-border-3));display:contents}:host([alignment=center]) th{text-align:center}:host([alignment=end]) th{text-align:end}.assistive-text{position:absolute;inline-size:1px;block-size:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}th{text-align:start;vertical-align:top;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);outline-color:transparent;font-size:var(--calcite-internal-table-cell-font-size);border-inline-end:1px solid var(--calcite-internal-table-header-border-color);border-block-end:1px solid var(--calcite-internal-table-header-border-color);padding-block:calc(var(--calcite-internal-table-cell-padding) * 1.5);padding-inline:var(--calcite-internal-table-cell-padding);background-color:var(--calcite-internal-table-header-background)}th:focus-within{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}th.body-row,th.footer-row{vertical-align:middle;border-block-end:0}th.footer-row{border-block-start:1px solid var(--calcite-internal-table-header-border-color)}.cell--multiple-selection{cursor:pointer;vertical-align:middle;color:var(--calcite-ui-text-3)}.number-cell,.selection-cell{color:var(--calcite-ui-text-2);inline-size:2rem;min-inline-size:2rem}.selection-cell calcite-icon.active{color:var(--calcite-ui-brand)}.number-cell calcite-icon,.selection-cell calcite-icon{margin-inline-start:auto;margin-inline-end:auto;vertical-align:middle}.heading{color:var(--calcite-ui-text-1)}.description{color:var(--calcite-ui-text-3);font-size:var(--calcite-internal-table-cell-font-size-secondary)}";

const TableHeader = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.alignment = "start";
    this.colSpan = undefined;
    this.description = undefined;
    this.heading = undefined;
    this.rowSpan = undefined;
    this.numberCell = false;
    this.parentRowPosition = undefined;
    this.parentRowType = undefined;
    this.positionInRow = undefined;
    this.scale = undefined;
    this.selectedRowCount = undefined;
    this.selectedRowCountLocalized = undefined;
    this.selectionCell = false;
    this.selectionMode = undefined;
    this.bodyRowCount = undefined;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.defaultMessages = undefined;
    this.screenReaderText = "";
    this.effectiveLocale = "";
  }
  onSelectedChange() {
    this.updateScreenReaderText();
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  async componentWillLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.a)(this);
    await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_1__.s)(this);
    this.updateScreenReaderText();
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.s)(this);
  }
  connectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
  }
  disconnectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
  }
  effectiveLocaleChange() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_1__.u)(this, this.effectiveLocale);
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
    this.containerEl.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  updateScreenReaderText() {
    let text = "";
    const sharedText = `${this.selectedRowCountLocalized} ${this.messages?.selected}`;
    if (this.numberCell) {
      text = this.messages?.rowNumber;
    }
    else if (this.selectionMode === "single") {
      text = `${this.messages?.selectionColumn}. ${sharedText}`;
    }
    else if (this.bodyRowCount === this.selectedRowCount) {
      text = `${this.messages?.selectionColumn}. ${this.messages?.all} ${sharedText} ${this.messages?.keyboardDeselectAll}`;
    }
    else {
      text = `${this.messages?.selectionColumn}. ${sharedText} ${this.messages?.keyboardSelectAll}`;
    }
    this.screenReaderText = text;
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  render() {
    const scope = this.rowSpan
      ? "rowgroup"
      : this.colSpan
        ? "colgroup"
        : this.parentRowType === "body"
          ? "row"
          : "col";
    const allSelected = this.selectedRowCount === this.bodyRowCount;
    const selectionIcon = allSelected ? "check-square-f" : "check-square";
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.Host, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)("th", { "aria-colindex": this.parentRowType !== "body" ? this.positionInRow : "", class: {
        [CSS.bodyRow]: this.parentRowType === "body",
        [CSS.footerRow]: this.parentRowType === "foot",
        [CSS.numberCell]: this.numberCell,
        [CSS.selectionCell]: this.selectionCell,
        [CSS.multipleSelectionCell]: this.selectionMode === "multiple",
      }, colSpan: this.colSpan, role: "columnheader", rowSpan: this.rowSpan, scope: scope, tabIndex: 0,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: (el) => (this.containerEl = el) }, this.heading && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)("div", { class: CSS.heading }, this.heading), this.description && (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)("div", { class: CSS.description }, this.description), this.selectionCell && this.selectionMode === "multiple" && ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)("calcite-icon", { class: { [CSS.active]: allSelected }, icon: selectionIcon, scale: this.scale === "l" ? "m" : "s" })), (this.selectionCell || this.numberCell) && ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_4__.h)("span", { "aria-hidden": true, "aria-live": "polite", class: CSS.assistiveText }, this.screenReaderText)))));
  }
  static get assetsDirs() { return ["assets"]; }
  get el() { return this; }
  static get watchers() { return {
    "selectedRowCount": ["onSelectedChange"],
    "selectedRowCountLocalized": ["onSelectedChange"],
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
  static get style() { return tableHeaderCss; }
}, [1, "calcite-table-header", {
    "alignment": [513],
    "colSpan": [514, "col-span"],
    "description": [513],
    "heading": [513],
    "rowSpan": [514, "row-span"],
    "numberCell": [4, "number-cell"],
    "parentRowPosition": [2, "parent-row-position"],
    "parentRowType": [1, "parent-row-type"],
    "positionInRow": [2, "position-in-row"],
    "scale": [1],
    "selectedRowCount": [2, "selected-row-count"],
    "selectedRowCountLocalized": [1, "selected-row-count-localized"],
    "selectionCell": [4, "selection-cell"],
    "selectionMode": [1, "selection-mode"],
    "bodyRowCount": [2, "body-row-count"],
    "messages": [1040],
    "messageOverrides": [1040],
    "defaultMessages": [32],
    "screenReaderText": [32],
    "effectiveLocale": [32],
    "setFocus": [64]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-table-header", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-table-header":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, TableHeader);
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_3__.d)();
      }
      break;
  } });
}
defineCustomElement();




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,