"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["node_modules_arcgis_core_layers_graphics_sources_support_MemorySourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/objectIdUtils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/objectIdUtils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   findLastObjectIdFromFeatures: () => (/* binding */ n),
/* harmony export */   initialObjectId: () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const t=1;function n(t,n){let o=0;for(const e of n){const n=e.attributes?.[t];"number"==typeof n&&isFinite(n)&&(o=Math.max(o,n))}return o}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/MemorySourceWorker.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/MemorySourceWorker.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ S)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _objectIdUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../objectIdUtils.js */ "./node_modules/@arcgis/core/layers/graphics/objectIdUtils.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sourceUtils.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../support/fieldType.js */ "./node_modules/@arcgis/core/layers/support/fieldType.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../time/timeZoneUtils.js */ "./node_modules/@arcgis/core/time/timeZoneUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const R=_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__.WGS84,q={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__.WGS84},D={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function O(e){return (0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.isPoint)(e)?null!=e.z:!!e.hasZ}function w(e){return (0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.isPoint)(e)?null!=e.m:!!e.hasM}class S{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(t){const i=[],{features:s}=t,n=this._inferLayerProperties(s,t.fields),r=t.fields||[],a=null!=t.hasM?t.hasM:!!n.hasM,p=null!=t.hasZ?t.hasZ:!!n.hasZ,h=!t.spatialReference&&!n.spatialReference,g=h?R:t.spatialReference||n.spatialReference,I=h?q:null,F=t.geometryType||n.geometryType,b=!F;let O=t.objectIdField||n.objectIdField,w=t.timeInfo;const S=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_10__["default"](r);if(!b&&(h&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!F))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!O)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&O!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${O}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),O=n.objectIdField),O&&!n.objectIdField){const e=S.get(O);e?(O=e.name,e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):r.unshift({alias:O,name:O,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const o of r){if(null==o.name&&(o.name=o.alias),null==o.alias&&(o.alias=o.name),!o.name)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("feature-layer:invalid-field-name","field name is missing",{field:o});if(o.name===O&&(o.type="esriFieldTypeOID"),!_support_fieldType_js__WEBPACK_IMPORTED_MODULE_11__.kebabDict.jsonValues.includes(o.type))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("feature-layer:invalid-field-type",`invalid type for field "${o.name}"`,{field:o});null==o.length&&(o.length=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_12__.getFieldDefaultLength)(o))}const v={};for(const e of r)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){const t=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_12__.getFieldDefaultValue)(e);void 0!==t&&(v[e.name]=t)}if(w){if(w.startTimeField){const e=S.get(w.startTimeField);e?(w.startTimeField=e.name,e.type="esriFieldTypeDate"):w.startTimeField=null}if(w.endTimeField){const e=S.get(w.endTimeField);e?(w.endTimeField=e.name,e.type="esriFieldTypeDate"):w.endTimeField=null}if(w.trackIdField){const e=S.get(w.trackIdField);e?w.trackIdField=e.name:(w.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:w}}))}w.startTimeField||w.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:w}}),w=null)}const Q=S.dateFields.length?{timeZoneIANA:t.dateFieldsTimeZone??_time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_13__.utc}:null;this._createDefaultAttributes=(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_8__.createDefaultAttributesFunction)(v,O);const M={warnings:i,featureErrors:[],layerDefinition:{...D,drawingInfo:(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_8__.createDrawingInfo)(F),templates:(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_8__.createDefaultTemplate)(v),extent:I,geometryType:F,objectIdField:O,fields:r,hasZ:p,hasM:a,timeInfo:w,dateFieldsTimeReference:Q},assignedObjectIds:{}};if(this._queryEngine=new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_7__.QueryEngine({fieldsIndex:_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_10__["default"].fromLayerJSON({fields:r,timeInfo:w,dateFieldsTimeReference:Q}),geometryType:F,hasM:a,hasZ:p,objectIdField:O,spatialReference:g,featureStore:new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_5__["default"]({geometryType:F,hasM:a,hasZ:p}),timeInfo:w,cacheSpatialQueries:!0}),!s?.length)return this._nextObjectId=_objectIdUtils_js__WEBPACK_IMPORTED_MODULE_4__.initialObjectId,M;const Z=(0,_objectIdUtils_js__WEBPACK_IMPORTED_MODULE_4__.findLastObjectIdFromFeatures)(O,s);return this._nextObjectId=Z+1,await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.checkProjectionSupport)(s,g),this._loadInitialFeatures(M,s)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([(0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.loadGeometryEngineForSimplify)(t,i),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.checkProjectionSupport)(e.adds,t),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.checkProjectionSupport)(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,i){let s,n,r=null,a=null,o=null;for(const l of e){const e=l.geometry;if(null!=e&&(r||(r=(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.getJsonType)(e)),a||(a=e.spatialReference),null==s&&(s=O(e)),null==n&&(n=w(e)),r&&a&&null!=s&&null!=n))break}if(i&&i.length){let e=null;i.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(o=e.name)}return{geometryType:r,spatialReference:a,objectIdField:o,hasM:n,hasZ:s}}async _loadInitialFeatures(e,i){const{geometryType:s,hasM:r,hasZ:a,objectIdField:o,spatialReference:l,featureStore:u,fieldsIndex:d}=this._queryEngine,f=[];for(const n of i){if(null!=n.uid&&(e.assignedObjectIds[n.uid]=-1),n.geometry&&s!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.getJsonType)(n.geometry)){e.featureErrors.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),r=(0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.mixAttributes)(d,i,n.attributes,!0);r?e.featureErrors.push(r):(this._assignObjectId(i,n.attributes,!0),n.attributes=i,null!=n.uid&&(e.assignedObjectIds[n.uid]=n.attributes[o]),null!=n.geometry&&(n.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.project)(n.geometry,n.geometry.spatialReference,l)),f.push(n))}u.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertFromFeatures)([],f,s,a,r,o));const{fullExtent:c,timeExtent:m}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=c,m){const{start:t,end:i}=m;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}async _applyEdits(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(n,t),i?.length&&this._applyUpdateEdits(n,i),s?.length){for(const e of s)n.deleteResults.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditSuccessResult)(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:r,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:a,featureEditResults:n}}_applyAddEdits(e,i){const{addResults:s}=e,{geometryType:r,hasM:a,hasZ:o,objectIdField:l,spatialReference:u,featureStore:d,fieldsIndex:f}=this._queryEngine,c=[];for(const n of i){if(n.geometry&&r!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.getJsonType)(n.geometry)){s.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),a=(0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.mixAttributes)(f,i,n.attributes);if(a)s.push(a);else{if(this._assignObjectId(i,n.attributes),n.attributes=i,null!=n.uid){const t=n.attributes[l];e.uidToObjectId[n.uid]=t}if(null!=n.geometry){const e=n.geometry.spatialReference??u;n.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.project)((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.simplify)(n.geometry,e),e,u)}c.push(n),s.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditSuccessResult)(n.attributes[l]))}}d.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertFromFeatures)([],c,r,o,a,l))}_applyUpdateEdits({updateResults:e},i){const{geometryType:s,hasM:n,hasZ:o,objectIdField:l,spatialReference:u,featureStore:d,fieldsIndex:f}=this._queryEngine;for(const c of i){const{attributes:i,geometry:m}=c,y=i?.[l];if(null==y){e.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditErrorResult)(`Identifier field ${l} missing`));continue}if(!d.has(y)){e.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditErrorResult)(`Feature with object id ${y} missing`));continue}const h=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertToFeature)(d.getFeature(y),s,o,n);if(null!=m){if(s!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_1__.getJsonType)(m)){e.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const i=m.spatialReference??u;h.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_6__.project)((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.simplify)(m,i),i,u)}if(i){const t=(0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.mixAttributes)(f,h.attributes,i);if(t){e.push(t);continue}}d.add((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_3__.convertFromFeature)(h,s,o,n,l)),e.push((0,_sourceUtils_js__WEBPACK_IMPORTED_MODULE_9__.createFeatureEditSuccessResult)(y))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,