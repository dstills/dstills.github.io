"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_arcgis_core_core_floatRGBA_js-node_modules_arcgis_core_core_fontUtils_js-9b2b5a"],{

/***/ "./node_modules/@arcgis/core/core/floatRGBA.js":
/*!*****************************************************!*\
  !*** ./node_modules/@arcgis/core/core/floatRGBA.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   packFloatRGBA: () => (/* binding */ o),
/* harmony export */   unpackFloatRGBA: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _mathUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mathUtils.js */ "./node_modules/@arcgis/core/core/mathUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function o(o,r,e=0){const i=(0,_mathUtils_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(o,0,f);for(let t=0;t<4;t++)r[e+t]=Math.floor(256*l(i*n[t]))}function r(t,o=0){let r=0;for(let n=0;n<4;n++)r+=t[o+n]*e[n];return r}const n=[1,256,65536,16777216],e=[1/256,1/65536,1/16777216,1/4294967296],f=r(new Uint8ClampedArray([255,255,255,255]));function l(t){return t-Math.floor(t)}


/***/ }),

/***/ "./node_modules/@arcgis/core/core/fontUtils.js":
/*!*****************************************************!*\
  !*** ./node_modules/@arcgis/core/core/fontUtils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clearFonts: () => (/* binding */ a),
/* harmony export */   defaultFontFamily: () => (/* binding */ t),
/* harmony export */   getFontFamily: () => (/* binding */ u),
/* harmony export */   getFullyQualifiedFontName: () => (/* binding */ f),
/* harmony export */   isCachedFontFace: () => (/* binding */ i),
/* harmony export */   loadFont: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config.js */ "./node_modules/@arcgis/core/config.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const t="arial-unicode-ms",n="woff2",r=new Map,s=new Set;class o{constructor(e,t){this.fontFace=e,this.promise=t}}async function c(t){const c=f(t),a=r.get(c);if(a)return a.promise;const i=new FontFace(t.family,`url('${_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].fontsUrl}/woff2/${c}.${n}') format('${n}')`,{style:t.style,weight:t.weight}),u=document.fonts;if(u.has(i)&&"loading"===i.status)return i.loaded;const l=i.load().then((()=>(u.add(i),i)));return r.set(c,new o(i,l)),s.add(i),l}function a(){const e=document.fonts;r.forEach((t=>{e.delete(t.fontFace)})),r.clear(),s.clear()}function i(e){return s.has(e)}function u(e){if(!e)return t;const n=e.toLowerCase().split(" ").join("-");switch(n){case"serif":return"noto-serif";case"sans-serif":return"arial-unicode-ms";case"monospace":return"ubuntu-mono";case"fantasy":return"cabin-sketch";case"cursive":return"redressed";default:return n}}function f(e){const t=l(e)+d(e);return u(e.family)+(t.length>0?t:"-regular")}function l(e){if(!e.weight)return"";switch(e.weight.toLowerCase()){case"bold":case"bolder":return"-bold"}return""}function d(e){if(!e.style)return"";switch(e.style.toLowerCase()){case"italic":case"oblique":return"-italic"}return""}


/***/ }),

/***/ "./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExpandedCIM: () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../views/2d/engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _views_2d_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../views/2d/engine/webgl/materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s={marker:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.MARKER,fill:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.FILL,line:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.LINE,text:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.TEXT};class l{constructor(e,l,n,r){const c={minScale:l?.minScale,maxScale:l?.maxScale},m=i(c);this.layers=e,this.data=l,this.hash=this._createHash()+m,this.rendererKey=n;const o={isOutline:!1,placement:null,symbologyType:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLSymbologyType.DEFAULT,vvFlags:n};for(const t of e){const e=s[t.type];o.isOutline="line"===t.type&&t.isOutline,t.materialKey=(0,_views_2d_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__.createMaterialKey)(e,o),t.maxVVSize=r,t.scaleInfo=c,t.templateHash+=m}}get type(){return"expanded-cim"}_createHash(){let e="";for(const t of this.layers)e+=t.templateHash;return e}}function i(e){return e.minScale||e.maxScale?e.minScale+"-"+e.maxScale:""}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/arcade/callExpressionWithFeature.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/arcade/callExpressionWithFeature.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../geometry/support/quantizationUtils.js */ "./node_modules/@arcgis/core/geometry/support/quantizationUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function s(e,t,o,n,a){if(null==e)return null;const s=e.referencesGeometry()&&a?i(t,n,a):t,u=e.repurposeFeature(s);try{return e.evaluate({...o,$feature:u},e.services)}catch(c){return _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function i(e,r,t){const{transform:o,hasZ:n,hasM:a}=t;u.has(r)||u.set(r,c(r));const s=u.get(r)(e.geometry,o,n,a);return{...e,geometry:s}}function c(s){const u={};switch(s){case"esriGeometryPoint":return(e,r,t,o)=>(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_2__.unquantizePoint)(r,u,e,t,o);case"esriGeometryPolygon":return(e,r,t,o)=>(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_2__.unquantizePolygon)(r,u,e,t,o);case"esriGeometryPolyline":return(e,r,t,n)=>(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_2__.unquantizePolyline)(r,u,e,t,n);case"esriGeometryMultipoint":return(e,r,o,n)=>(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_2__.unquantizeMultipoint)(r,u,e,o,n);default:return _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.support.arcadeOnDemand").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-arcade",`Unable to handle geometryType: ${s}`)),e=>e}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AttributeStoreView: () => (/* binding */ j)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _DisplayId_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DisplayId.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _util_debug_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/debug.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/debug.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../webgl/FramebufferObject.js */ "./node_modules/@arcgis/core/views/webgl/FramebufferObject.js");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../webgl/Texture.js */ "./node_modules/@arcgis/core/views/webgl/Texture.js");
/* harmony import */ var _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../webgl/TextureDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/TextureDescriptor.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const E=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),S=(0,_util_debug_js__WEBPACK_IMPORTED_MODULE_7__.createDebugLogger)(_util_debug_js__WEBPACK_IMPORTED_MODULE_7__.debugAttrUpdates,E);class A{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,n=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(r);this.shared=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&("0"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__.TextureDescriptor;return t.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,t.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=(0,_DisplayId_js__WEBPACK_IMPORTED_MODULE_5__.getDisplayIdTexel)(t),r=this.data,a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(null==this.data)return null;const i=(0,_DisplayId_js__WEBPACK_IMPORTED_MODULE_5__.getDisplayIdTexel)(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__.FramebufferObject(t,i)}return this._fbos[e]}get locked(){return!(this.pixelType!==_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PixelType.UNSIGNED_BYTE||!this.shared||this.textureOnly||!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){if(!this.locked){try{const i=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=this.data.buffer,a=this.getTexture(e),n=4,d=(i-i%this.size)/this.size,h=(s-s%this.size)/this.size,u=d,o=this.size,l=h,p=d*this.size*n,x=(o+l*this.size)*n-p,_=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(this.pixelType),c=new _(r,p*_.BYTES_PER_ELEMENT,x),f=this.size,T=l-u+1;if(T>this.size)return void E.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-webgl","Out-of-bounds index when updating AttributeData"));a.updateData(0,0,u,f,T,c)}catch(s){}i()}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),d=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelBytes)(r),h=new((0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(r))(new ArrayBuffer(i*s*d*this.texelSize)),u=t.getBoundFramebufferObject(),{x:o,y:l,width:p,height:x}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,i,s,a,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(o,l,p,x),t.bindFramebuffer(u)}return this.destroy(),this._texture=e,this._texture}}class j{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:i,size:s}=t;if(this.shared=i,this.size=s,S("Initializing AttributeStoreView",t),null==this._data)this._data=e.map((t=>null!=t?new A(t,s,i):null));else for(let r=0;r<this._data.length;r++){const t=this._data[r],a=e[r];null!=a&&(null==t?this._data[r]=new A(a,s,i):t.resize(a,s))}this._initialized=!0}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose()}isEmpty(){return null==this._data}isUpdating(){const t=null!=this._pendingAttributeUpdate,e=t;return (0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${e}\n  -> hasPendingUpdate ${t}`),e}getBlock(t){if(null==this._data)return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataVv,0,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const a=r.getData(t,i);return null!=a?a:s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void E.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-webgl","Tried to update attribute data with a pending update"));const s=(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.createResolver)();return S("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:s},this._onUpdate(),s.promise}update(){if(this._initialized&&null!=this._pendingAttributeUpdate){(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:t,resolver:e}=this._pendingAttributeUpdate,i=this._data;for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],r=i[s];null!=r&&null!=e&&(S(`Updating block ${s}`,e),r.update(e))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){const i=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData0),void(e&&(t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData1),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData2),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData3),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingGpgpu)));const c=this._data;if(!this._locked||this._forceNextUpload){for(const e of c)e?.updateTexture(t,(()=>this._onUpdate()));this._forceNextUpload=!1}t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataFilterFlags]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData0),e&&(t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataGpgpu]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingGpgpu),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataAnimation]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData1),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataVv]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData2),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataDd1]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData3),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5))}_getDefaultTexture(t){if(null==this._defaultTexture){const e=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__.TextureDescriptor;e.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,e.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.NEAREST,e.width=1,e.height=1,this._defaultTexture=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(t,e,new Uint8Array(4))}return this._defaultTexture}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FeatureDisplayList: () => (/* binding */ n),
/* harmony export */   FeatureDisplayListInfo: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cpuMapped/FreeList.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class e{constructor(t,e,n,i,a){this.target=t,this.geometryType=e,this.materialKey=n,this.indexFrom=i,this.indexCount=a}get indexEnd(){return this.indexFrom+this.indexCount}extend(t){this.indexCount+=t}}class n{constructor(t,e){this.geometryType=0,this._target=t,this.geometryType=e}static from(t,e,i,a){const d=new n(t,e);if(null!=a)for(const n of a)i.seekIndex(n),d.addRecord(i);else for(;i.next();)d.addRecord(i);return d}addRecord(n){const i=this._target,a=this.geometryType,d=n.materialKey;let s=n.indexFrom,r=n.indexCount;const o=n.vertexFrom,l=n.vertexCount;if(r||(s=o,r=l),null==this._head){const n=new e(i,a,d,s,r);return void(this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(n))}let h=null,x=this._head;for(;x;){if(s<x.data.indexFrom)return this._insert(d,s,r,h,x);h=x,x=x.next}this._insert(d,s,r,h,null)}forEach(t){null!=this._head&&this._head.forEach(t)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(n,i,a,d,s){if(null==d&&null==s){const d=new e(this._target,this.geometryType,n,i,a);this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(d)}return null==d&&null!=s?this._insertAtHead(n,i,a,s):null!=d&&null==s?this._insertAtEnd(n,i,a,d):null!=d&&null!=s?this._insertAtMiddle(n,i,a,d,s):void 0}_insertAtHead(n,i,a,d){const s=i+a;if(n===d.data.materialKey&&s===d.data.indexFrom)d.data.indexFrom=i,d.data.indexCount+=a;else{const s=new e(this._target,this.geometryType,n,i,a);this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(s),this._head.next=d}}_insertAtEnd(n,i,a,d){if(d.data.materialKey===n&&d.data.indexEnd===i)d.data.indexCount+=a;else{const s=new e(this._target,this.geometryType,n,i,a),r=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(s);d.next=r}}_insertAtMiddle(n,i,a,d,s){const r=i+a;if(d.data.materialKey===n&&d.data.indexEnd===i)d.data.indexCount+=a,d.data.materialKey===s.data.materialKey&&d.data.indexEnd===s.data.indexFrom&&(d.data.indexCount+=s.data.indexCount,d.next=s.next);else if(n===s.data.materialKey&&r===s.data.indexFrom)s.data.indexFrom=i,s.data.indexCount+=a;else{const r=new e(this._target,this.geometryType,n,i,a),o=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(r);d.next=o,o.next=s}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TiledDisplayObject: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../chunks/mat3.js */ "./node_modules/@arcgis/core/chunks/mat3.js");
/* harmony import */ var _DisplayObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DisplayObject.js */ "./node_modules/@arcgis/core/views/2d/engine/DisplayObject.js");
/* harmony import */ var _tiling_TileKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tiling/TileKey.js */ "./node_modules/@arcgis/core/views/2d/tiling/TileKey.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class r extends _DisplayObject_js__WEBPACK_IMPORTED_MODULE_1__.DisplayObject{constructor(t,s,i,r,h,o,n=h,a=o){super(),this.triangleCountReportedInDebug=0,this.triangleCount=0,this.texture=null,this.key=new _tiling_TileKey_js__WEBPACK_IMPORTED_MODULE_2__["default"](t),this.resolution=s,this.x=i,this.y=r,this.width=h,this.height=o,this.rangeX=n,this.rangeY=a}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}setTransform(i){const e=this.resolution/(i.resolution*i.pixelRatio),r=this.transforms.tileMat3,[h,o]=i.toScreenNoRotation([0,0],[this.x,this.y]),n=this.width/this.rangeX*e,a=this.height/this.rangeY*e;(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.s)(r,n,0,0,0,a,0,h,o,1),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_0__.m)(this.transforms.dvs,i.displayViewMat3,r)}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/WGLTile.js":
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/WGLTile.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WGLTile: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../chunks/mat2d.js */ "./node_modules/@arcgis/core/chunks/mat2d.js");
/* harmony import */ var _chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../chunks/mat2df32.js */ "./node_modules/@arcgis/core/chunks/mat2df32.js");
/* harmony import */ var _chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chunks/mat3.js */ "./node_modules/@arcgis/core/chunks/mat3.js");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chunks/mat3f32.js */ "./node_modules/@arcgis/core/chunks/mat3f32.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _TiledDisplayObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TiledDisplayObject.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class h{acquire(s){return{refCount:1,version:-1,labelMat2d:(0,_chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__.c)(),tileMat3:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__.c)(),dvs:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__.c)()}}release(s){}}class m extends _TiledDisplayObject_js__WEBPACK_IMPORTED_MODULE_5__.TiledDisplayObject{constructor(s,t,r,e){super(s,t,r,e,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.tileSize,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.tileSize)}destroy(){super.destroy(),this._transforms&&m.TransformCache.release(this.key.hash)}setTransform(i){const o=this.resolution/i.resolution,n=this.transforms.tileMat3,[h,m]=i.toScreenNoRotation([0,0],[this.x,this.y]),c=this.width/this.rangeX*o,f=this.height/this.rangeY*o;(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__.s)(n,c,0,0,0,f,0,h,m,1),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__.m)(this.transforms.dvs,i.displayViewMat3,n);const d=this.transforms.labelMat2d,l=window.devicePixelRatio,u=(0,_chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__.d)((0,_chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__.c)(),c*l,0,0,f*l,h*l,m*l);(0,_chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__.m)(d,i.viewMat2d,u)}_createTransforms(){return m.TransformCache.acquire(this.key.hash)}}m.TransformCache=new h;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DisplayRecordReader: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _FeatureDisplayList_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FeatureDisplayList.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s=2147483647;class r{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/i.BYTES_PER_RECORD-e){const _=new i(new Int32Array(t,e*i.BYTES_PER_RECORD,s*i.ELEMENTS_PER_RECORD));return new r(_)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}getDrawInfo(t,s){return new _FeatureDisplayList_js__WEBPACK_IMPORTED_MODULE_1__.FeatureDisplayListInfo(t,s,this.materialKey,this.indexFrom,this.indexCount)}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){const t=new r(this._head?.copy());if(!t._head)return t;let e=t._head,s=t._head._link;for(;s;)e._link=s.copy(),e=s,s=e._link;return t}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(null!=s&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}r.ELEMENTS_PER_RECORD=_definitions_js__WEBPACK_IMPORTED_MODULE_0__.displayRecordIntPerElement,r.BYTES_PER_RECORD=r.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class i{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new i(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,r=this.lookup(t);if(r)for(this.id=s,++this._deletedCount;this.next()&&this.id===t;)this.id=s,++this._deletedCount;return this._index=e,r}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(null==this._offsets.instance){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==s||(this._index=e,!1)}get id(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*i.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*i.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/i.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===s;);return this._index<this.size()}peekId(){const t=(this._index+1)*i.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new i(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}i.ELEMENTS_PER_RECORD=_definitions_js__WEBPACK_IMPORTED_MODULE_0__.displayRecordIntPerElement,i.BYTES_PER_RECORD=i.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FreeList: () => (/* binding */ a),
/* harmony export */   List: () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}find(t){return t(this.data)?this:this.next?.find(t)}max(t,a=this){const e=t(this.data)>t(a.data)?this:a;return this.next?this.next.max(t,e):e}remove(t,a=null){return this===t?a?(a.next=this.next,a):this.next:this.next?.remove(t,this)??null}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;const t=this._head.max((t=>t.end-t.start));return t.data.end-t.data.start}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,s=r.next;for(;s;){if(s.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===s.data.start){const t=s.data.end-s.data.start;return r.data.end+=t,void(r.next=s.next)}return}if(s.data.start===n)return void(s.data.start-=e);const d=new t({start:a,end:n});return d.next=r.next,void(r.next=d)}r=s,s=s.next}if(a===r.data.end)return void(r.data.end+=e);const d=new t({start:a,end:n});r.next=d}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getVVFlags: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../visualVariablesUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function e(e){if(!e)return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.NONE;let r=0;for(const i of e)if("size"===i.type){const t=(0,_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_1__.getTypeOfSizeVisualVariable)(i);r|=t,"outline"===i.target&&(r|=t<<4)}else"color"===i.type?r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.COLOR:"opacity"===i.type?r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.OPACITY:"rotation"===i.type&&(r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.ROTATION);return r}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSymbolSchema: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../symbols/cim/CIMSymbolHelper.js */ "./node_modules/@arcgis/core/symbols/cim/CIMSymbolHelper.js");
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../engine/webgl/materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function s(e){if("line-marker"===e.type){return{type:"line-marker",color:e.color?.toJSON(),placement:e.placement,style:e.style}}return e.constructor.fromJSON(e.toJSON()).toJSON()}function o(e){return (0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.hydrateMaterialKey)(e)}function i(e,t,r=!1){if(!e)return null;switch(e.type){case"simple-fill":case"picture-fill":return c(e,t,r);case"simple-marker":case"picture-marker":return h(e,t,r);case"simple-line":return y(e,t,r);case"text":return u(e,t,r);case"label":return m(e,t,r);case"cim":return{type:"cim",rendererKey:t.vvFlags,data:e.data,maxVVSize:t.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:t.vvFlags,data:e,maxVVSize:t.maxVVSize};case"web-style":return{...s(e),type:"web-style",hash:e.hash(),rendererKey:t.vvFlags,maxVVSize:t.maxVVSize};default:throw new Error(`symbol not supported ${e.type}`)}}function m(e,r,l){const n=e.toJSON(),s=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LABEL,{...r,placement:n.labelPlacement});return{materialKey:l?o(s):s,hash:e.hash(),...n,labelPlacement:n.labelPlacement}}function c(e,r,n){const i=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.FILL,r),m=n?o(i):i,c=e.clone(),y=c.outline,h=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.isOutlineFillSymbology)(r.symbologyType);h||(c.outline=null);const u={materialKey:m,hash:c.hash(),...s(c)};if(h)return u;const p=[];if(p.push(u),y){const e=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LINE,{...r,isOutline:!0}),l={materialKey:n?o(e):e,hash:y.hash(),...s(y)};p.push(l)}return{type:"composite-symbol",layers:p,hash:p.reduce(((e,t)=>t.hash+e),"")}}function y(e,n,i){const m=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.isOutlineFillSymbology)(n.symbologyType)?_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.DEFAULT:n.symbologyType,c=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LINE,{...n,symbologyType:m}),y=i?o(c):c,h=e.clone(),u=h.marker;h.marker=null;const p=[];if(p.push({materialKey:y,hash:h.hash(),...s(h)}),u){const e=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.MARKER,n),r=i?o(e):e;u.color=u.color??h.color,p.push({materialKey:r,hash:u.hash(),lineWidth:h.width,...s(u)})}return{type:"composite-symbol",layers:p,hash:p.reduce(((e,t)=>t.hash+e),"")}}function h(r,l,n){if("simple-marker"===r.type&&("path"===r.style||r.outline&&"solid"!==r.outline.style&&"none"!==r.outline.style)){return i({type:"CIMSymbolReference",symbol:_symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_0__.CIMSymbolHelper.fromSimpleMarker(r)},l,n)}const m=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.MARKER,l),c=n?o(m):m,y=s(r);return{materialKey:c,hash:r.hash(),...y,angle:r.angle,maxVVSize:l.maxVVSize}}function u(e,r,l){const n=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.TEXT,r),i=l?o(n):n,m=s(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addAggregateFields: () => (/* binding */ k),
/* harmony export */   createMatcherSchema: () => (/* binding */ _),
/* harmony export */   createRendererAttributeSchema: () => (/* binding */ M),
/* harmony export */   createSchema: () => (/* binding */ w),
/* harmony export */   createSymbolSchema: () => (/* reexport safe */ _createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema),
/* harmony export */   createSymbolSchemaOptions: () => (/* binding */ T)
/* harmony export */ });
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _core_sql_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/sql.js */ "./node_modules/@arcgis/core/core/sql.js");
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/accessorSupport/diffUtils.js */ "./node_modules/@arcgis/core/core/accessorSupport/diffUtils.js");
/* harmony import */ var _layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../layers/support/labelingInfo.js */ "./node_modules/@arcgis/core/layers/support/labelingInfo.js");
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _engine_webgl_Utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../engine/webgl/Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _engine_webgl_techniques_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../engine/webgl/techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../engine/webgl/util/vvFlagUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js");
/* harmony import */ var _createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./createSymbolSchema.js */ "./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js");
/* harmony import */ var _support_pixelBuffering_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./support/pixelBuffering.js */ "./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js");
/* harmony import */ var _support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./support/rendererUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js");
/* harmony import */ var _support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../support/clusterUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/clusterUtils.js");
/* harmony import */ var _support_util_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../support/util.js */ "./node_modules/@arcgis/core/views/2d/layers/support/util.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const x=_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.views.2d.layers.features.schemaUtils"),h="ValidationError";function v(e){return e}function T(e,t){let r=0,i=0,n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT;if(null!=e){if(i=(0,_support_pixelBuffering_js__WEBPACK_IMPORTED_MODULE_13__.getPtMaxVVSize)(e,t),"visualVariables"in e&&(r=(0,_engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__.getVVFlags)(e.visualVariables||[]),"dot-density"===e.type&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DOT_DENSITY)),"heatmap"===e.type&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.HEATMAP),"dictionary"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT};if("pie-chart"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.PIE_CHART};if(n!==_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DOT_DENSITY&&n!==_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.HEATMAP){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);let r=!0,i=!0;for(const e of t)if("cim"!==e.type&&"web-style"!==e.type||(i=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline,n=t&&"none"!==t.style&&"solid"!==t.style,s="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;n&&(r=!1),("picture-fill"===e.type||s||n)&&(i=!1)}r?n=i?_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.OUTLINE_FILL_SIMPLE:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.OUTLINE_FILL:i&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.SIMPLE)}}return{vvFlags:r,maxVVSize:i,symbologyType:n}}let S=null;function w(e){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_2__["default"])("esri-2d-update-debug")){const t=E(e,!0);console.debug("Created new schema",t),console.debug("Schema diff",(0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_6__.diff)(S,t)),S=t}return E(e)}function E(e,t=!1){try{const r=R(e,t),i=D(e),s={};r.map((t=>F(s,e,t)));const l=null!=e.subtypeCode?`${e.subtypeField} = ${e.subtypeCode}`:null,o=(0,_core_sql_js__WEBPACK_IMPORTED_MODULE_5__.sqlAnd)(e.definitionExpression,l);return{source:{definitionExpression:o,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:e.timeExtent?.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:r,tileRenderer:i,targets:s}}catch(r){if(r.fieldName===h)return x.error(r),null;throw r}}function F(e,r,i){switch(i.target){case"feature":return void O(e,V(r),i);case"aggregate":{if(!("featureReduction"in r))return;const n=r.featureReduction;switch(n?.type){case"selection":throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Mapview does not support `selection` reduction type",n);case"binning":return O(e,V(r),i),void N(e,n,r.fields.map((e=>e.toJSON())),i);case"cluster":return O(e,V(r),i),void L(e,n,r.fields.map((e=>e.toJSON())),i)}}}}function I(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const n=e.attributes[r];if(n?.context){const e=n.context;e.mesh=e.mesh||i.context?.mesh,e.storage=e.storage||i.context?.storage}else e.attributes[r]=i}return e}function V(e){return[e.filter?.toJSON()??null,e.featureEffect?.filter?.toJSON()??null]}function O(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),I(e.feature,r.attributes.fields),e}function z(e,r){const{onStatisticExpression:i,onStatisticField:n,statisticType:s}=e;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:r}=i;return r?"string"===r?"esriFieldTypeString":"esriFieldTypeDouble":(x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}const s=r.find((e=>e.name===n));return s?s.type:(x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}}}function N(e,t,r,i){return e.aggregate||(e.aggregate={name:"aggregate",type:"bin",filters:null,input:"feature",params:{fixedBinLevel:t.fixedBinLevel,fields:(t.fields??[]).map((e=>({...e.toJSON(),type:z(e,r)})))},attributes:{}}),I(e.aggregate,i.attributes.fields),e}function L(e,t,r,n){const s=n.aggregateFields??[],l=new Set;for(const i of s)l.add(i.name);for(const i of t?.fields??[])l.has(i.name)||s.push(i);return e.aggregate||(e.aggregate={name:"aggregate",type:"cluster",input:"feature",filters:null,attributes:{},params:{clusterRadius:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__.pt2px)(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__.pt2px)(t.clusterMaxSize)/64),fields:s.map((e=>({...e.toJSON(),type:z(e,r)})))}}),I(e.aggregate,n.attributes.fields),e}function M(e,t){return t.field?j(e,{...t,type:"field",field:t.field}):t.valueExpression?j(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:void 0,fieldIndex:void 0}}function j(e,t){switch(t.type){case"expression":{const r=v(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=v(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function R(e,t=!1){const r=new Array;let i=0;return r.push(A(e,i++,t)),r}function U(e,t,r,i,n,s=!1){const l=j(e,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:t.labelExpression,labelExpressionInfo:t.labelExpressionInfo?{expression:t.labelExpressionInfo.expression}:null,symbol:!!t.symbol,where:t.where}}),{fieldIndex:o}=l;return{...(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(t,n,s),fieldIndex:o,target:r,index:i}}function B(e,r,i){const n="featureReduction"in r&&r.featureReduction;if(!n)return{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};const s="aggregate",o=[];let a=null,u=(0,_support_util_js__WEBPACK_IMPORTED_MODULE_16__.toJSONGeometryType)(r.geometryType),d=[],p=null;if(n)switch(n.type){case"selection":return x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Mapview does not support `selection` reduction type",n)),{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};case"cluster":case"binning":if(o.push(...n.fields??[]),"cluster"===n.type?u="esriGeometryPoint":"binning"===n.type&&(u="esriGeometryPolygon"),n.renderer&&!n.renderer.authoringInfo?.isAutoGenerated){if("cluster"===n.type){const{renderer:e}=(0,_support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__.injectDynamicLevelDependentSizeVisualVariable)(n.renderer,n,null);p=e}else p=n.renderer;const t=T(n.renderer,n);a=_(e,s,n.renderer,t,i),d=n&&n.labelsVisible&&n.labelingInfo||[]}else if("cluster"===n.type){if(p=(0,_support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__.createClusterRenderer)(o,r.renderer,n,null,!0),n.symbol){const e=T(p,n);a={type:"simple",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(n.symbol,e,i),symbologyType:e.symbologyType}}d=n&&n.labelsVisible&&n.labelingInfo||[]}}k(e,o);return{labels:(0,_layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__.validateLabelingInfo)(d,"binning"===n.type?"esriGeometryPolygon":u),matcher:a,fields:o,rendererOverride:p}}function A(e,r,i=!1){const n={indexCount:0,fields:{}},s="featureReduction"in e?e.featureReduction??void 0:void 0,a=s?"aggregate":"feature";if("sublayers"in e){const r={type:"subtype",subtypeField:e.subtypeField,renderers:{},symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT},s={type:"subtype",mapping:{},target:"feature",subtypeField:e.subtypeField},l={type:"subtype",classes:{}},u={type:"symbol",target:"feature",aggregateFields:[],attributes:n,storage:s,mesh:{matcher:r,aggregateMatcher:null,labels:l,sortKey:null}},f=new Set;let p=0;for(const{renderer:c,subtypeCode:y,labelingInfo:m,labelsVisible:g}of e.sublayers){let e=0;"visualVariables"in c&&c.visualVariables&&(c.visualVariables.some((e=>"rotation"!==e.type))&&x.warnOnce("SubtypeGroupLayer currently only supports rotation visualVariables. All other visualVariable types will be ignored."),e=(0,_engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__.getVVFlags)(c.visualVariables.filter((e=>"size"!==e.type))));const u={symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT,vvFlags:e,maxVVSize:0},b=_(n,a,c,u,i),v=C(n,a,c),T=g&&m;if("dictionary"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Dictionary renderer is not supported in subtype layers");if("subtype"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Nested subtype renderers is not supported");if(null!=v&&"subtype"===v.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Nested subtype storage is not supported");if(null!=v?.attributeMapping)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Non-visual-variable attributes are not supported in subtype layers");if("heatmap"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Heatmaps are not supported in subtype layers");if("pie-chart"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Pie-charts are not supported in subtype layers");if(f.has(y))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Subtype codes for sublayers must be unique");f.add(y),r.renderers[y]=b,s.mapping[y]=v,T&&(l.classes[y]=T.map((e=>U(n,e,"feature",p++,u,i))))}return u}if("heatmap"===e.renderer?.type&&"raster"===(0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.getSupportedHeatmapRenderer)()){const{radius:t,fieldOffset:r,field:i}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:n,target:a,storage:null,mesh:{radius:t,fieldOffset:r,field:M(n,{target:a,field:i,resultType:"numeric"}).field}}}const u=B(n,e,i),f=(0,_support_util_js__WEBPACK_IMPORTED_MODULE_16__.toJSONGeometryType)(e.geometryType),p=u.rendererOverride??e.renderer,y=T(p,s),m=_(n,a,p,y,i),g=C(n,a,p),v=P(n,e.orderBy,e.renderer,s),S=e.labelsVisible&&e.labelingInfo||[],w=(0,_layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__.validateLabelingInfo)(S,f);let E=0;const F=[...w.map((e=>U(n,e,"feature",E++,y,i))),...u.labels.map((e=>U(n,e,"aggregate",E++,y,i)))];return{type:"symbol",target:a,attributes:n,aggregateFields:u.fields,storage:g,mesh:{matcher:m,labels:{type:"simple",classes:F},aggregateMatcher:u.matcher,sortKey:v}}}function D(e){return"heatmap"===e.renderer?.type&&"raster"===(0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.getSupportedHeatmapRenderer)()?{type:"heatmap"}:{type:"symbol"}}function P(e,r,i,n){if(null!=n)return null;if(null!=r&&r.length){r.length>1&&x.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${r.length}. All but the first will be discarded`);const i=r[0],n="ascending"===i.order?"asc":"desc";if(i.field)return{field:i.field,order:n};if(i.valueExpression){return{fieldIndex:j(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:n}}return x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Expected to find a field or valueExpression for OrderByInfo",i)),null}if(null!=i&&"unique-value"===i.type&&i.orderByClassesEnabled){return{byRenderer:!0,order:"asc"}}return null}function k(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,onStatisticField:n,onStatisticExpression:s,statisticType:l}=i;let o,a;const u="numeric",d="feature";if(s){a=j(e,{type:"expression",target:d,valueExpression:s.expression,resultType:u}).fieldIndex}else{o=j(e,{type:"field",target:d,field:n}).field}j(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:o,inFieldIndex:a,statisticType:l})}}function C(e,t,r){let i;switch(r.type){case"simple":case"class-breaks":case"unique-value":case"dictionary":i={visualVariables:!0,attributes:null};break;default:i=(0,_engine_webgl_techniques_utils_js__WEBPACK_IMPORTED_MODULE_10__.getTechniqueFromRenderer)(r).getStorageSpec(r)}return J(e,t,i,r)}function J(e,t,r,i){if(null==r)return null;const{visualVariables:n,attributes:s}=r;let l=null;n&&"visualVariables"in i&&(l=q(e,t,i.visualVariables));const o=null!=l?4:0;let a=null;return null!=s&&(a=s.map(((r,i)=>{const{field:n,fieldIndex:s}=M(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i+o,field:n,fieldIndex:s}}))),{type:"simple",target:t,attributeMapping:a,vvMapping:l}}function q(t,r,i){if(!i?.length)return[];const n={storage:!0},s="numeric";return (0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.simplifyVisualVariables)(i).map((e=>{const i=(0,_engine_webgl_Utils_js__WEBPACK_IMPORTED_MODULE_9__.getVVType)(e.type),{field:l,fieldIndex:o}=M(t,{target:r,valueExpression:e.valueExpression,field:e.field,context:n,resultType:s});switch(e.type){case"size":return"$view.scale"===e.valueExpression?null:{type:"size",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field,valueRepresentation:e.valueRepresentation??null};case"color":return{type:"color",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field};case"opacity":return{type:"opacity",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field};case"rotation":return{type:"rotation",binding:i,field:l,fieldIndex:o}}})).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.isSome)}function _(e,t,r,i,n=!1){const s=e??{indexCount:0,fields:{}};switch(r.type){case"simple":case"dot-density":return G(s,r,i,n);case"class-breaks":return $(s,t,r,i,n);case"unique-value":return K(s,t,r,i,n);case"dictionary":return Y(s,r,i,n);case"heatmap":return Q(s,r,i,n);case"pie-chart":return H(s,r,i,n)}}function G(e,t,r,i=!1){const n=t.getSymbols(),s=n.length?n[0]:null;return{type:"simple",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),symbologyType:r.symbologyType}}function H(e,t,r,i=!1){const n=t.getSymbols(),s=n[0],l=n.length>1?n[1]:null;return{type:"pie-chart",markerSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),fillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(l,r,i),symbologyType:r.symbologyType}}function $(e,t,r,i,n=!1){const s={mesh:!0,use:"renderer.field"},l=r.backgroundFillSymbol,{field:o,fieldIndex:a}=M(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:s}),u=r.normalizationType,d="log"===u?"esriNormalizeByLog":"percent-of-total"===u?"esriNormalizeByPercentOfTotal":"field"===u?"esriNormalizeByField":null,p=r.classBreakInfos.map((e=>({symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(e.symbol,i,n),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:o,fieldIndex:a,backgroundFillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(l,i,n),defaultSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(r.defaultSymbol,i,n),intervals:p,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:d,isMaxInclusive:r.isMaxInclusive,symbologyType:i.symbologyType}}function K(e,r,i,n,s=!1){const l=[],o=i.backgroundFillSymbol,a={target:r,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Expected renderer.field to be a string",i);const{field:u,fieldIndex:d}=M(e,{...a,field:i.field,valueExpression:i.valueExpression});for(const t of i.uniqueValueInfos??[])l.push({value:""+t.value,symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(t.symbol,n,s)});return{type:"map",attributes:e.fields,field:u,fieldIndex:d,field2:M(e,{...a,field:i.field2}).field,field3:M(e,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter??void 0,backgroundFillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(o,n),defaultSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(i.defaultSymbol,n),map:l,symbologyType:n.symbologyType}}function Y(e,t,r,i=!1){return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,symbologyType:r.symbologyType}}function Q(e,t,r,i=!1){const n=t.getSymbols(),s=n.length?n[0]:null;return{type:"heatmap",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),symbologyType:r.symbologyType}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   computePxBuffer: () => (/* binding */ c),
/* harmony export */   getPtMaxVVSize: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../symbols/cim/CIMSymbolHelper.js */ "./node_modules/@arcgis/core/symbols/cim/CIMSymbolHelper.js");
/* harmony import */ var _symbols_cim_Rect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../symbols/cim/Rect.js */ "./node_modules/@arcgis/core/symbols/cim/Rect.js");
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../engine/webgl/definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _graphics_graphicsUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../graphics/graphicsUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js");
/* harmony import */ var _support_cimSymbolUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../support/cimSymbolUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const a={"simple-marker":1,"picture-marker":1,text:0,"simple-line":0,"simple-fill":0,"picture-fill":0,cim:1,"web-style":1},o=.707;function m(t,e){if(!("visualVariables"in t))return 0;if(!t.hasVisualVariables("size"))return 0;const r=t.getVisualVariablesForType("size");if(!r[0])return 0;const i=r[0];if(e&&"cluster_count"===i.field&&"cluster"===e.type)return e.clusterMaxSize;if("outline"===i.target)return 0;if("stops"===i.transformationType)return i.stops.map((t=>t.size)).reduce(g,0);if("clamped-linear"===i.transformationType){let t=-1/0,e=-1/0;return t="number"==typeof i.maxSize?i.maxSize:i.maxSize.stops.map((t=>t.size)).reduce(g,0),e="number"==typeof i.minSize?i.minSize:i.minSize.stops.map((t=>t.size)).reduce(g,0),Math.max(t,e)}return"real-world-size"===i.transformationType?30:void 0}function u(t){return t.type in a}async function c(e,r,i,n,s,a){if(!e||a&&"cluster"===a.type)return 0;if("heatmap"===e.type)return Math.round((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(e.radius));if("dot-density"===e.type)return 0;if("dictionary"===e.type)return"esriGeometryPoint"===r||"esriGeometryMultipoint"===r?100:200;const o=e.getSymbols(),u=m(e),c=[];for(const t of o)c.push(x(t,u,i,r,n,s));const l=await Promise.all(c);return (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(l.reduce(g,0))}const l=[0,0,0,0];function p(t,e){return t??e}function f(t,e){return null==t.outline?e:p(t.outline.width,e)}const y={sdf:!0,code:99,metrics:_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_3__.averageGlyphMosaicItem.metrics,rect:new _symbols_cim_Rect_js__WEBPACK_IMPORTED_MODULE_2__["default"](0,0,24,24),page:0,textureBinding:2};function h(t){const e=t.text&&t.text.length;if(!e)return{glyphMosaicItems:[y]};const r=[];for(let i=0;i<e;i++)r.push({...y,code:t.text.charCodeAt(i)});return{glyphMosaicItems:r}}async function d(t,r,i,a,m,u){if("simple-marker"===t.type){const e=Math.max(p(t.size,12),r);return M(t)+e*o}if("picture-marker"===t.type){const e=Math.max(p(t.height,12),r),i=p(t.width,12)*(e/p(t.height,12))/2,n=e/2;return M(t)+Math.sqrt(i*i+n*n)}if("text"===t.type){const e=h(t);(0,_graphics_graphicsUtils_js__WEBPACK_IMPORTED_MODULE_4__.getTextSymbolSize)(l,t.toJSON(),e);const r=Math.abs(l[0]),i=Math.abs(l[1]),s=l[2],a=l[3];return Math.max(r,i)+Math.max(s,a)}if("simple-line"===t.type){const e=t,i=Math.max(p(e.width,.75),r)/2;return e.marker?Math.max(6*e.width,2*r):i}if("simple-fill"===t.type||"picture-fill"===t.type)return Math.max(f(t,0),r)/2;if("cim"===t.type){const n={geometryType:a,fields:m,spatialReference:u},o={type:"cim",rendererKey:0,data:t.data,maxVVSize:r};await (0,_support_cimSymbolUtils_js__WEBPACK_IMPORTED_MODULE_5__.expandSymbol)(o,n,i);const c=_symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_1__.CIMSymbolHelper.getEnvelope(t.data,null,i);return c?Math.sqrt(c.width*c.width+c.height*c.height):0}return"web-style"===t.type?d(await t.fetchCIMSymbol(),r,i,a,m,u):0}async function x(t,e,r,i,n,s){return u(t)?Math.min(await d(t,e,r,i,n,s),75):0}function M(t){const e=p(t.xoffset,0),r=p(t.yoffset,0);return Math.sqrt(e*e+r*r)}function g(t,e){return Math.max(t,e)}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSupportedHeatmapRenderer: () => (/* binding */ g),
/* harmony export */   isRendererSupported: () => (/* binding */ h),
/* harmony export */   simplifyVVRenderer: () => (/* binding */ n),
/* harmony export */   simplifyVisualVariables: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/capabilities.js */ "./node_modules/@arcgis/core/views/webgl/capabilities.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s=8,l=s-2,a=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.2d.layers.features.support.rendererUtils"),n=e=>{if(!("visualVariables"in e)||!e.visualVariables?.length)return e;const r=e.clone(),t=r.visualVariables.map((e=>u(e)?p(e):e));return r.visualVariables=t,r};function i(e){return e.map((e=>u(e)?p(e.clone()):e))}function u(e){return("size"===e.type||"color"===e.type||"opacity"===e.type)&&null!=e.stops}function p(e){return e.stops=m(e.type,e.stops??[]),e}function c(e,r,t){return(1-t)*e+t*r}function f(e,r){const[o,...s]=r,a=s.pop(),n=s[0].value,i=s[s.length-1].value,u=(i-n)/l,p=[];for(let l=n;l<i;l+=u){let o=0;for(;l>=s[o].value;)o++;const a=s[o],n=r[o-1],i=l-n.value,u=a.value===n.value?1:i/(a.value-n.value);if("color"===e){const e=s[o],t=r[o-1],a=e.color.clone();a.r=c(t.color.r,a.r,u),a.g=c(t.color.g,a.g,u),a.b=c(t.color.b,a.b,u),a.a=c(t.color.a,a.a,u),p.push({value:l,color:a,label:e.label})}else if("size"===e){const e=s[o],a=r[o-1],n=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__.toPt)(e.size),i=c((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__.toPt)(a.size),n,u);p.push({value:l,size:i,label:e.label})}else{const e=s[o],t=c(r[o-1].opacity,e.opacity,u);p.push({value:l,opacity:t,label:e.label})}}return[o,...p,a]}function b(e){const[r,...t]=e,o=t.pop();for(;t.length>l;){let e=0,r=0;for(let o=1;o<t.length;o++){const s=t[o-1],l=t[o],a=Math.abs(l.value-s.value);a>r&&(r=a,e=o)}t.splice(e,1)}return[r,...t,o]}function m(e,r){return r.length<=s?r:(a.warn(`Found ${r.length} Visual Variable stops, but MapView only supports ${s}. Displayed stops will be simplified.`),r.length>2*s?f(e,r):b(r))}function g(){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-force-raster"))return"raster";const{supportsTextureFloat:e,supportsTextureHalfFloat:r,supportsColorBufferFloat:t,supportsColorBufferFloatBlend:s,supportsColorBufferHalfFloat:l}=(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d");return e&&t&&s||r&&l?"symbol":(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-allow-raster-fallback")?"raster":"none"}function h(r){if(!r)return!0;switch(r.type){case"dot-density":if(!(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d").supportsTextureFloat)return a.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1;break;case"heatmap":{const r=g();if("none"===r||"raster"===r&&!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-force-raster")){const t=(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d"),s=["supportsTextureFloat","supportsTextureHalfFloat","supportsColorBufferFloat","supportsColorBufferFloatBlend","supportsColorBufferHalfFloat"].filter((e=>!t[e])).join(", ");if("none"===r)return a.errorOnce(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("webgl-missing-extension",`Missing WebGL${t.type} requirements for Heatmap: ${s}`)),!1;"raster"===r&&a.warnOnce(`Missing WebGL${t.type} requirements for accelerated Heatmap: ${s}. Feature support may be limited.`)}break}}return!0}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTextSymbolSize: () => (/* binding */ d),
/* harmony export */   graphicGeometryToNumber: () => (/* binding */ h),
/* harmony export */   intersectingInternationalDateline: () => (/* binding */ g),
/* harmony export */   isMarkerSymbol: () => (/* binding */ p),
/* harmony export */   isTextSymbol: () => (/* binding */ u),
/* harmony export */   pixelBuffer: () => (/* binding */ f),
/* harmony export */   polygonFromExtent: () => (/* binding */ x),
/* harmony export */   tileSize: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _core_BidiText_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/BidiText.js */ "./node_modules/@arcgis/core/core/BidiText.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../geometry/Polygon.js */ "./node_modules/@arcgis/core/geometry/Polygon.js");
/* harmony import */ var _geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../geometry/support/aaBoundingRect.js */ "./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../engine/webgl/alignmentUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/alignmentUtils.js");
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../engine/webgl/definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _engine_webgl_mesh_templates_shapingUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../engine/webgl/mesh/templates/shapingUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/mesh/templates/shapingUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const c=512,f=50;function g(e,t){const n=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.getInfo)(t);if(!n)return null;const[o,s]=n.valid;return e[2]>s?[(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([e[0],e[1],s,e[3]]),(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([o,e[1],o+e[2]-s,e[3]])]:e[0]<o?[(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([o,e[1],e[2],e[3]]),(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([s-(o-e[0]),e[1],s,e[3]])]:null}function u(e){return"text"===e||"esriTS"===e}function p(e){return"simple-marker"===e||"picture-marker"===e||"esriSMS"===e||"esriPMS"===e}function h(e){switch(e.geometry.type){case"point":case"multipoint":return 0;case"polyline":return 1;case"polygon":case"extent":return 2}return 0}function d(n,i,r){if(!r?.glyphMosaicItems?.length)return n;const c=(0,_core_BidiText_js__WEBPACK_IMPORTED_MODULE_0__.bidiText)(i.text)[1],f=r.glyphMosaicItems,g=(0,_engine_webgl_mesh_templates_shapingUtils_js__WEBPACK_IMPORTED_MODULE_7__.shapeGlyphs)(f,c,{scale:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(i.font.size)/_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__.glyphSize,angle:i.angle??0,xOffset:i.xoffset??0,yOffset:i.yoffset??0,hAlign:(0,_engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__.getXAnchorDirection)(i.horizontalAlignment||"center"),vAlign:(0,_engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__.getYAnchorDirection)(i.verticalAlignment||"baseline"),maxLineWidth:Math.max(32,Math.min(i.lineWidth||512,512)),lineHeight:_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__.magicLabelLineHeight*Math.max(.25,Math.min(i.lineHeight||1,4)),decoration:i.font.decoration||"none",isCIM:!1,hasBackground:!!i.backgroundColor,borderLineSize:i.borderLineSize}).bounds;return n[0]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.x-g.halfWidth),n[1]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.y-g.halfHeight),n[2]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.width),n[3]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.height),n}function x(e){if(!e)return null;const{xmin:t,ymin:i,xmax:r,ymax:o,spatialReference:s}=e;return new _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_2__["default"]({rings:[[[t,i],[t,o],[r,o],[r,i],[t,i]]],spatialReference:s})}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cimLayerToRasterizationInfo: () => (/* binding */ r),
/* harmony export */   expandSymbol: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _symbols_cim_cimAnalyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../symbols/cim/cimAnalyzer.js */ "./node_modules/@arcgis/core/symbols/cim/cimAnalyzer.js");
/* harmony import */ var _symbols_cim_ExpandedCIM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../symbols/cim/ExpandedCIM.js */ "./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const a=async(a,i,r)=>{const n=new _symbols_cim_cimAnalyzer_js__WEBPACK_IMPORTED_MODULE_0__.CIMAnalyzer(r,i);return new _symbols_cim_ExpandedCIM_js__WEBPACK_IMPORTED_MODULE_1__.ExpandedCIM(await n.analyzeSymbolReference(a.data,!1),a.data,a.rendererKey,a.maxVVSize)};async function i(e,t,i,r){if(!e)return null;if("cim"===e.type)return a(e,t,i);if("web-style"===e.type){const{fetchCIMSymbolReference:n}=await __webpack_require__.e(/*! import() */ "node_modules_arcgis_core_views_2d_layers_support_webStyleUtils_js").then(__webpack_require__.bind(__webpack_require__, /*! ./webStyleUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/webStyleUtils.js")),l={type:"cim",data:await n(e,null,r)??void 0,rendererKey:e.rendererKey,maxVVSize:e.maxVVSize};return a(l,t,i)}return e}function r(e){if(!e)return null;const{avoidSDFRasterization:t,type:a,cim:i,url:r,materialHash:n,maxVVSize:l}=e,m={cim:i,type:a,mosaicHash:n,url:r,size:null,dashTemplate:null,path:null,text:null,fontName:null,animatedSymbolProperties:null,avoidSDFRasterization:t};switch(a){case"marker":l&&"size"in i&&(i.size=Math.max(l,i.size)),m.size=e.size,m.path=e.path,m.animatedSymbolProperties=e.animatedSymbolProperties;break;case"line":m.dashTemplate=e.dashTemplate;break;case"text":m.text=e.text,m.fontName=e.fontName}return m}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/support/util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/support/util.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   analyzeRings: () => (/* binding */ n),
/* harmony export */   canUseMajorityInterpolationOnDataSource: () => (/* binding */ r),
/* harmony export */   toJSONGeometryType: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/jsonMap.js */ "./node_modules/@arcgis/core/core/jsonMap.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const o=new _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_0__.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch",mesh:"mesh"});function e(t){return o.toJSON(t)}function n(t,o,e){const n=[],r=[];let l=0,i=0;for(const s of t){const t=i;let u=s[0][0],c=s[0][1];n[i++]=u,n[i++]=c;let p=0;for(let o=1;o<s.length;++o){const t=u,e=c;u=s[o][0],c=s[o][1],p+=c*t-u*e,n[i++]=u,n[i++]=c}o(p/2),p>0?(t-l>0&&(e(l,t,n,r),l=t),r.length=0):p<0&&t-l>0?r.push(.5*(t-l)):i=t}i-l>0&&e(l,i,n,r)}function r(t){const{bandCount:o,attributeTable:e,colormap:n,pixelType:r}=t.raster.rasterInfo;return 1===o&&(null!=e||null!=n||"u8"===r||"s8"===r)}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfYXJjZ2lzX2NvcmVfY29yZV9mbG9hdFJHQkFfanMtbm9kZV9tb2R1bGVzX2FyY2dpc19jb3JlX2NvcmVfZm9udFV0aWxzX2pzLTliMmI1YS5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDdUMsb0JBQW9CLFFBQVEsb0RBQUMsUUFBUSxZQUFZLElBQUkscUNBQXFDLGtCQUFrQixRQUFRLFlBQVksSUFBSSxtQkFBbUIsU0FBUyx1SEFBdUgsY0FBYyx1QkFBdUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0puWjtBQUNBO0FBQ0E7QUFDQTtBQUM0Qix5REFBeUQsUUFBUSxpQkFBaUIsZ0NBQWdDLG9CQUFvQix3QkFBd0Isc0JBQXNCLHNDQUFzQyxrREFBQyxVQUFVLFNBQVMsRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFFLEtBQUssOEJBQThCLG1CQUFtQixrREFBa0QsMENBQTBDLHNDQUFzQyxhQUFhLHVCQUF1QixlQUFlLHFCQUFxQix1QkFBdUIsY0FBYyxnQkFBZ0IsY0FBYyxlQUFlLDZDQUE2QyxVQUFVLCtCQUErQiwwQ0FBMEMsb0NBQW9DLG1DQUFtQyxnQ0FBZ0Msa0JBQWtCLGNBQWMsa0JBQWtCLDZDQUE2QyxjQUFjLHNCQUFzQiwrQkFBK0Isc0NBQXNDLFNBQVMsY0FBYyxxQkFBcUIsOEJBQThCLDJDQUEyQyxTQUE4STs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNKcHlDO0FBQ0E7QUFDQTtBQUNBO0FBQ3dMLFNBQVMsT0FBTyw0RUFBQyxhQUFhLDRFQUFDLFdBQVcsNEVBQUMsV0FBVyw0RUFBQyxPQUFPLFFBQVEscUJBQXFCLFNBQVMsMENBQTBDLFFBQVEsNEVBQTRFLFNBQVMsMENBQTBDLDZFQUFDLG9CQUFvQixrQkFBa0Isa0JBQWtCLHVEQUF1RCxvR0FBQyxxREFBcUQsV0FBVyxxQkFBcUIsY0FBYyxTQUFTLDZDQUE2QyxVQUFVLGNBQWMsMkRBQW9GOzs7Ozs7Ozs7Ozs7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Y0FBYyxNQUFNLG9EQUFvRCxxQkFBcUIscURBQW9KIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvY29yZS9mbG9hdFJHQkEuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvY29yZS9mb250VXRpbHMuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvc3ltYm9scy9jaW0vRXhwYW5kZWRDSU0uanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvYXJjYWRlL2NhbGxFeHByZXNzaW9uV2l0aEZlYXR1cmUuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvZW5naW5lL3dlYmdsL0F0dHJpYnV0ZVN0b3JlVmlldy5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS92aWV3cy8yZC9lbmdpbmUvd2ViZ2wvRmVhdHVyZURpc3BsYXlMaXN0LmpzIiwid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL3ZpZXdzLzJkL2VuZ2luZS93ZWJnbC9UaWxlZERpc3BsYXlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvZW5naW5lL3dlYmdsL1dHTFRpbGUuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvZW5naW5lL3dlYmdsL2NwdU1hcHBlZC9EaXNwbGF5UmVjb3JkUmVhZGVyLmpzIiwid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL3ZpZXdzLzJkL2VuZ2luZS93ZWJnbC9jcHVNYXBwZWQvRnJlZUxpc3QuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvZW5naW5lL3dlYmdsL3V0aWwvdnZGbGFnVXRpbHMuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvbGF5ZXJzL2ZlYXR1cmVzL2NyZWF0ZVN5bWJvbFNjaGVtYS5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS92aWV3cy8yZC9sYXllcnMvZmVhdHVyZXMvc2NoZW1hVXRpbHMuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvbGF5ZXJzL2ZlYXR1cmVzL3N1cHBvcnQvcGl4ZWxCdWZmZXJpbmcuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvdmlld3MvMmQvbGF5ZXJzL2ZlYXR1cmVzL3N1cHBvcnQvcmVuZGVyZXJVdGlscy5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS92aWV3cy8yZC9sYXllcnMvZ3JhcGhpY3MvZ3JhcGhpY3NVdGlscy5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS92aWV3cy8yZC9sYXllcnMvc3VwcG9ydC9jaW1TeW1ib2xVdGlscy5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS92aWV3cy8yZC9sYXllcnMvc3VwcG9ydC91dGlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7Y2xhbXAgYXMgdH1mcm9tXCIuL21hdGhVdGlscy5qc1wiO2Z1bmN0aW9uIG8obyxyLGU9MCl7Y29uc3QgaT10KG8sMCxmKTtmb3IobGV0IHQ9MDt0PDQ7dCsrKXJbZSt0XT1NYXRoLmZsb29yKDI1NipsKGkqblt0XSkpfWZ1bmN0aW9uIHIodCxvPTApe2xldCByPTA7Zm9yKGxldCBuPTA7bjw0O24rKylyKz10W28rbl0qZVtuXTtyZXR1cm4gcn1jb25zdCBuPVsxLDI1Niw2NTUzNiwxNjc3NzIxNl0sZT1bMS8yNTYsMS82NTUzNiwxLzE2Nzc3MjE2LDEvNDI5NDk2NzI5Nl0sZj1yKG5ldyBVaW50OENsYW1wZWRBcnJheShbMjU1LDI1NSwyNTUsMjU1XSkpO2Z1bmN0aW9uIGwodCl7cmV0dXJuIHQtTWF0aC5mbG9vcih0KX1leHBvcnR7byBhcyBwYWNrRmxvYXRSR0JBLHIgYXMgdW5wYWNrRmxvYXRSR0JBfTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgZSBmcm9tXCIuLi9jb25maWcuanNcIjtjb25zdCB0PVwiYXJpYWwtdW5pY29kZS1tc1wiLG49XCJ3b2ZmMlwiLHI9bmV3IE1hcCxzPW5ldyBTZXQ7Y2xhc3Mgb3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMuZm9udEZhY2U9ZSx0aGlzLnByb21pc2U9dH19YXN5bmMgZnVuY3Rpb24gYyh0KXtjb25zdCBjPWYodCksYT1yLmdldChjKTtpZihhKXJldHVybiBhLnByb21pc2U7Y29uc3QgaT1uZXcgRm9udEZhY2UodC5mYW1pbHksYHVybCgnJHtlLmZvbnRzVXJsfS93b2ZmMi8ke2N9LiR7bn0nKSBmb3JtYXQoJyR7bn0nKWAse3N0eWxlOnQuc3R5bGUsd2VpZ2h0OnQud2VpZ2h0fSksdT1kb2N1bWVudC5mb250cztpZih1LmhhcyhpKSYmXCJsb2FkaW5nXCI9PT1pLnN0YXR1cylyZXR1cm4gaS5sb2FkZWQ7Y29uc3QgbD1pLmxvYWQoKS50aGVuKCgoKT0+KHUuYWRkKGkpLGkpKSk7cmV0dXJuIHIuc2V0KGMsbmV3IG8oaSxsKSkscy5hZGQoaSksbH1mdW5jdGlvbiBhKCl7Y29uc3QgZT1kb2N1bWVudC5mb250cztyLmZvckVhY2goKHQ9PntlLmRlbGV0ZSh0LmZvbnRGYWNlKX0pKSxyLmNsZWFyKCkscy5jbGVhcigpfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIHMuaGFzKGUpfWZ1bmN0aW9uIHUoZSl7aWYoIWUpcmV0dXJuIHQ7Y29uc3Qgbj1lLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCIgXCIpLmpvaW4oXCItXCIpO3N3aXRjaChuKXtjYXNlXCJzZXJpZlwiOnJldHVyblwibm90by1zZXJpZlwiO2Nhc2VcInNhbnMtc2VyaWZcIjpyZXR1cm5cImFyaWFsLXVuaWNvZGUtbXNcIjtjYXNlXCJtb25vc3BhY2VcIjpyZXR1cm5cInVidW50dS1tb25vXCI7Y2FzZVwiZmFudGFzeVwiOnJldHVyblwiY2FiaW4tc2tldGNoXCI7Y2FzZVwiY3Vyc2l2ZVwiOnJldHVyblwicmVkcmVzc2VkXCI7ZGVmYXVsdDpyZXR1cm4gbn19ZnVuY3Rpb24gZihlKXtjb25zdCB0PWwoZSkrZChlKTtyZXR1cm4gdShlLmZhbWlseSkrKHQubGVuZ3RoPjA/dDpcIi1yZWd1bGFyXCIpfWZ1bmN0aW9uIGwoZSl7aWYoIWUud2VpZ2h0KXJldHVyblwiXCI7c3dpdGNoKGUud2VpZ2h0LnRvTG93ZXJDYXNlKCkpe2Nhc2VcImJvbGRcIjpjYXNlXCJib2xkZXJcIjpyZXR1cm5cIi1ib2xkXCJ9cmV0dXJuXCJcIn1mdW5jdGlvbiBkKGUpe2lmKCFlLnN0eWxlKXJldHVyblwiXCI7c3dpdGNoKGUuc3R5bGUudG9Mb3dlckNhc2UoKSl7Y2FzZVwiaXRhbGljXCI6Y2FzZVwib2JsaXF1ZVwiOnJldHVyblwiLWl0YWxpY1wifXJldHVyblwiXCJ9ZXhwb3J0e2EgYXMgY2xlYXJGb250cyx0IGFzIGRlZmF1bHRGb250RmFtaWx5LHUgYXMgZ2V0Rm9udEZhbWlseSxmIGFzIGdldEZ1bGx5UXVhbGlmaWVkRm9udE5hbWUsaSBhcyBpc0NhY2hlZEZvbnRGYWNlLGMgYXMgbG9hZEZvbnR9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtXR0xHZW9tZXRyeVR5cGUgYXMgZSxXR0xTeW1ib2xvZ3lUeXBlIGFzIHR9ZnJvbVwiLi4vLi4vdmlld3MvMmQvZW5naW5lL3dlYmdsL2VudW1zLmpzXCI7aW1wb3J0e2NyZWF0ZU1hdGVyaWFsS2V5IGFzIGF9ZnJvbVwiLi4vLi4vdmlld3MvMmQvZW5naW5lL3dlYmdsL21hdGVyaWFsS2V5L01hdGVyaWFsS2V5LmpzXCI7Y29uc3Qgcz17bWFya2VyOmUuTUFSS0VSLGZpbGw6ZS5GSUxMLGxpbmU6ZS5MSU5FLHRleHQ6ZS5URVhUfTtjbGFzcyBse2NvbnN0cnVjdG9yKGUsbCxuLHIpe2NvbnN0IGM9e21pblNjYWxlOmw/Lm1pblNjYWxlLG1heFNjYWxlOmw/Lm1heFNjYWxlfSxtPWkoYyk7dGhpcy5sYXllcnM9ZSx0aGlzLmRhdGE9bCx0aGlzLmhhc2g9dGhpcy5fY3JlYXRlSGFzaCgpK20sdGhpcy5yZW5kZXJlcktleT1uO2NvbnN0IG89e2lzT3V0bGluZTohMSxwbGFjZW1lbnQ6bnVsbCxzeW1ib2xvZ3lUeXBlOnQuREVGQVVMVCx2dkZsYWdzOm59O2Zvcihjb25zdCB0IG9mIGUpe2NvbnN0IGU9c1t0LnR5cGVdO28uaXNPdXRsaW5lPVwibGluZVwiPT09dC50eXBlJiZ0LmlzT3V0bGluZSx0Lm1hdGVyaWFsS2V5PWEoZSxvKSx0Lm1heFZWU2l6ZT1yLHQuc2NhbGVJbmZvPWMsdC50ZW1wbGF0ZUhhc2grPW19fWdldCB0eXBlKCl7cmV0dXJuXCJleHBhbmRlZC1jaW1cIn1fY3JlYXRlSGFzaCgpe2xldCBlPVwiXCI7Zm9yKGNvbnN0IHQgb2YgdGhpcy5sYXllcnMpZSs9dC50ZW1wbGF0ZUhhc2g7cmV0dXJuIGV9fWZ1bmN0aW9uIGkoZSl7cmV0dXJuIGUubWluU2NhbGV8fGUubWF4U2NhbGU/ZS5taW5TY2FsZStcIi1cIitlLm1heFNjYWxlOlwiXCJ9ZXhwb3J0e2wgYXMgRXhwYW5kZWRDSU19O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydCBlIGZyb21cIi4uLy4uLy4uL2NvcmUvRXJyb3IuanNcIjtpbXBvcnQgciBmcm9tXCIuLi8uLi8uLi9jb3JlL0xvZ2dlci5qc1wiO2ltcG9ydHt1bnF1YW50aXplTXVsdGlwb2ludCBhcyB0LHVucXVhbnRpemVQb2x5bGluZSBhcyBvLHVucXVhbnRpemVQb2x5Z29uIGFzIG4sdW5xdWFudGl6ZVBvaW50IGFzIGF9ZnJvbVwiLi4vLi4vLi4vZ2VvbWV0cnkvc3VwcG9ydC9xdWFudGl6YXRpb25VdGlscy5qc1wiO2Z1bmN0aW9uIHMoZSx0LG8sbixhKXtpZihudWxsPT1lKXJldHVybiBudWxsO2NvbnN0IHM9ZS5yZWZlcmVuY2VzR2VvbWV0cnkoKSYmYT9pKHQsbixhKTp0LHU9ZS5yZXB1cnBvc2VGZWF0dXJlKHMpO3RyeXtyZXR1cm4gZS5ldmFsdWF0ZSh7Li4ubywkZmVhdHVyZTp1fSxlLnNlcnZpY2VzKX1jYXRjaChjKXtyZXR1cm4gci5nZXRMb2dnZXIoXCJlc3JpLnZpZXdzLjJkLnN1cHBvcnQuYXJjYWRlT25EZW1hbmRcIikud2FybihcIkZlYXR1cmUgYXJjYWRlIGV2YWx1YXRpb24gZmFpbGVkOlwiLGMpLG51bGx9fWNvbnN0IHU9bmV3IE1hcDtmdW5jdGlvbiBpKGUscix0KXtjb25zdHt0cmFuc2Zvcm06byxoYXNaOm4saGFzTTphfT10O3UuaGFzKHIpfHx1LnNldChyLGMocikpO2NvbnN0IHM9dS5nZXQocikoZS5nZW9tZXRyeSxvLG4sYSk7cmV0dXJuey4uLmUsZ2VvbWV0cnk6c319ZnVuY3Rpb24gYyhzKXtjb25zdCB1PXt9O3N3aXRjaChzKXtjYXNlXCJlc3JpR2VvbWV0cnlQb2ludFwiOnJldHVybihlLHIsdCxvKT0+YShyLHUsZSx0LG8pO2Nhc2VcImVzcmlHZW9tZXRyeVBvbHlnb25cIjpyZXR1cm4oZSxyLHQsbyk9Pm4ocix1LGUsdCxvKTtjYXNlXCJlc3JpR2VvbWV0cnlQb2x5bGluZVwiOnJldHVybihlLHIsdCxuKT0+byhyLHUsZSx0LG4pO2Nhc2VcImVzcmlHZW9tZXRyeU11bHRpcG9pbnRcIjpyZXR1cm4oZSxyLG8sbik9PnQocix1LGUsbyxuKTtkZWZhdWx0OnJldHVybiByLmdldExvZ2dlcihcImVzcmkudmlld3MuMmQuc3VwcG9ydC5hcmNhZGVPbkRlbWFuZFwiKS5lcnJvcihuZXcgZShcIm1hcHZpZXctYXJjYWRlXCIsYFVuYWJsZSB0byBoYW5kbGUgZ2VvbWV0cnlUeXBlOiAke3N9YCkpLGU9PmV9fWV4cG9ydHtzIGFzIGRlZmF1bHR9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydCB0IGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvRXJyb3IuanNcIjtpbXBvcnQgaGFzIGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvaGFzLmpzXCI7aW1wb3J0IGUgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9Mb2dnZXIuanNcIjtpbXBvcnR7Y3JlYXRlUmVzb2x2ZXIgYXMgaX1mcm9tXCIuLi8uLi8uLi8uLi9jb3JlL3Byb21pc2VVdGlscy5qc1wiO2ltcG9ydHthdHRyaWJ1dGVEYXRhVnYgYXMgcyx0ZXh0dXJlQmluZGluZ0F0dHJpYnV0ZURhdGEwIGFzIHIsdGV4dHVyZUJpbmRpbmdBdHRyaWJ1dGVEYXRhMSBhcyBhLHRleHR1cmVCaW5kaW5nQXR0cmlidXRlRGF0YTIgYXMgbix0ZXh0dXJlQmluZGluZ0F0dHJpYnV0ZURhdGEzIGFzIGQsdGV4dHVyZUJpbmRpbmdBdHRyaWJ1dGVEYXRhNCBhcyBoLHRleHR1cmVCaW5kaW5nQXR0cmlidXRlRGF0YTUgYXMgdSx0ZXh0dXJlQmluZGluZ0dwZ3B1IGFzIG8sYXR0cmlidXRlRGF0YUZpbHRlckZsYWdzIGFzIGwsYXR0cmlidXRlRGF0YUdwZ3B1IGFzIHAsYXR0cmlidXRlRGF0YUFuaW1hdGlvbiBhcyB4LGF0dHJpYnV0ZURhdGFEZDEgYXMgX31mcm9tXCIuL2RlZmluaXRpb25zLmpzXCI7aW1wb3J0e2dldERpc3BsYXlJZFRleGVsIGFzIGN9ZnJvbVwiLi9EaXNwbGF5SWQuanNcIjtpbXBvcnR7Z2V0UGl4ZWxBcnJheUN0b3IgYXMgZyxnZXRQaXhlbEJ5dGVzIGFzIGZ9ZnJvbVwiLi9VdGlscy5qc1wiO2ltcG9ydHtjcmVhdGVEZWJ1Z0xvZ2dlciBhcyBULGRlYnVnQXR0clVwZGF0ZXMgYXMgYn1mcm9tXCIuL3V0aWwvZGVidWcuanNcIjtpbXBvcnR7VGV4dHVyZVdyYXBNb2RlIGFzIG0sVGV4dHVyZVNhbXBsaW5nTW9kZSBhcyB5LFBpeGVsVHlwZSBhcyB3fWZyb21cIi4uLy4uLy4uL3dlYmdsL2VudW1zLmpzXCI7aW1wb3J0e0ZyYW1lYnVmZmVyT2JqZWN0IGFzIHp9ZnJvbVwiLi4vLi4vLi4vd2ViZ2wvRnJhbWVidWZmZXJPYmplY3QuanNcIjtpbXBvcnR7VGV4dHVyZSBhcyBVfWZyb21cIi4uLy4uLy4uL3dlYmdsL1RleHR1cmUuanNcIjtpbXBvcnR7VGV4dHVyZURlc2NyaXB0b3IgYXMgRH1mcm9tXCIuLi8uLi8uLi93ZWJnbC9UZXh0dXJlRGVzY3JpcHRvci5qc1wiO2NvbnN0IEU9ZS5nZXRMb2dnZXIoXCJlc3JpLnZpZXdzLjJkLmVuZ2luZS53ZWJnbC5BdHRyaWJ1dGVTdG9yZVZpZXdcIiksUz1UKGIsRSk7Y2xhc3MgQXtjb25zdHJ1Y3Rvcih0LGUsaSl7dGhpcy5fdGV4dHVyZT1udWxsLHRoaXMuX2xhc3RUZXh0dXJlPW51bGwsdGhpcy5fZmJvcz17fSx0aGlzLnRleGVsU2l6ZT00O2NvbnN0e2J1ZmZlcjpzLHBpeGVsVHlwZTpyLHRleHR1cmVPbmx5OmF9PXQsbj1nKHIpO3RoaXMuc2hhcmVkPWksdGhpcy5waXhlbFR5cGU9cix0aGlzLnNpemU9ZSx0aGlzLnRleHR1cmVPbmx5PWEsYXx8KHRoaXMuZGF0YT1uZXcgbihzKSksdGhpcy5fcmVzZXRSYW5nZSgpfWRlc3Ryb3koKXt0aGlzLl90ZXh0dXJlPy5kaXNwb3NlKCk7Zm9yKGNvbnN0IHQgaW4gdGhpcy5fZmJvcyl7Y29uc3QgZT10aGlzLl9mYm9zW3RdO2UmJihcIjBcIj09PXQmJmUuZGV0YWNoQ29sb3JUZXh0dXJlKCksZS5kaXNwb3NlKCkpLHRoaXMuX2Zib3NbdF09bnVsbH10aGlzLl90ZXh0dXJlPW51bGx9Z2V0IF90ZXh0dXJlRGVzYygpe2NvbnN0IHQ9bmV3IEQ7cmV0dXJuIHQud3JhcE1vZGU9bS5DTEFNUF9UT19FREdFLHQuc2FtcGxpbmdNb2RlPXkuTkVBUkVTVCx0LmRhdGFUeXBlPXRoaXMucGl4ZWxUeXBlLHQud2lkdGg9dGhpcy5zaXplLHQuaGVpZ2h0PXRoaXMuc2l6ZSx0fXNldERhdGEodCxlLGkpe2NvbnN0IHM9Yyh0KSxyPXRoaXMuZGF0YSxhPXMqdGhpcy50ZXhlbFNpemUrZTshcnx8YT49ci5sZW5ndGh8fChyW2FdPWksdGhpcy5kaXJ0eVN0YXJ0PU1hdGgubWluKHRoaXMuZGlydHlTdGFydCxzKSx0aGlzLmRpcnR5RW5kPU1hdGgubWF4KHRoaXMuZGlydHlFbmQscykpfWdldERhdGEodCxlKXtpZihudWxsPT10aGlzLmRhdGEpcmV0dXJuIG51bGw7Y29uc3QgaT1jKHQpKnRoaXMudGV4ZWxTaXplK2U7cmV0dXJuIXRoaXMuZGF0YXx8aT49dGhpcy5kYXRhLmxlbmd0aD9udWxsOnRoaXMuZGF0YVtpXX1nZXRUZXh0dXJlKHQpe3JldHVybiB0aGlzLl90ZXh0dXJlPz90aGlzLl9pbml0VGV4dHVyZSh0KX1nZXRGQk8odCxlPTApe2lmKCF0aGlzLl9mYm9zW2VdKXtjb25zdCBpPTA9PT1lP3RoaXMuZ2V0VGV4dHVyZSh0KTp0aGlzLl90ZXh0dXJlRGVzYzt0aGlzLl9mYm9zW2VdPW5ldyB6KHQsaSl9cmV0dXJuIHRoaXMuX2Zib3NbZV19Z2V0IGxvY2tlZCgpe3JldHVybiEodGhpcy5waXhlbFR5cGUhPT13LlVOU0lHTkVEX0JZVEV8fCF0aGlzLnNoYXJlZHx8dGhpcy50ZXh0dXJlT25seXx8IWhhcyhcImVzcmktYXRvbWljc1wiKXx8IXRoaXMuZGF0YSkmJjE9PT1BdG9taWNzLmxvYWQodGhpcy5kYXRhLDApfWdldCBoYXNEaXJ0eSgpe2NvbnN0IHQ9dGhpcy5kaXJ0eVN0YXJ0O3JldHVybiB0aGlzLmRpcnR5RW5kPj10fXVwZGF0ZVRleHR1cmUoZSxpKXtpZighdGhpcy5sb2NrZWQpe3RyeXtjb25zdCBpPXRoaXMuZGlydHlTdGFydCxzPXRoaXMuZGlydHlFbmQ7aWYoIXRoaXMuaGFzRGlydHkpcmV0dXJuO3RoaXMuX3Jlc2V0UmFuZ2UoKTtjb25zdCByPXRoaXMuZGF0YS5idWZmZXIsYT10aGlzLmdldFRleHR1cmUoZSksbj00LGQ9KGktaSV0aGlzLnNpemUpL3RoaXMuc2l6ZSxoPShzLXMldGhpcy5zaXplKS90aGlzLnNpemUsdT1kLG89dGhpcy5zaXplLGw9aCxwPWQqdGhpcy5zaXplKm4seD0obytsKnRoaXMuc2l6ZSkqbi1wLF89Zyh0aGlzLnBpeGVsVHlwZSksYz1uZXcgXyhyLHAqXy5CWVRFU19QRVJfRUxFTUVOVCx4KSxmPXRoaXMuc2l6ZSxUPWwtdSsxO2lmKFQ+dGhpcy5zaXplKXJldHVybiB2b2lkIEUuZXJyb3IobmV3IHQoXCJtYXB2aWV3LXdlYmdsXCIsXCJPdXQtb2YtYm91bmRzIGluZGV4IHdoZW4gdXBkYXRpbmcgQXR0cmlidXRlRGF0YVwiKSk7YS51cGRhdGVEYXRhKDAsMCx1LGYsVCxjKX1jYXRjaChzKXt9aSgpfX11cGRhdGUodCl7Y29uc3R7ZGF0YTplLHN0YXJ0OmksZW5kOnN9PXQ7aWYobnVsbCE9ZSYmbnVsbCE9dGhpcy5kYXRhKXtjb25zdCBzPXRoaXMuZGF0YSxyPWkqdGhpcy50ZXhlbFNpemU7Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspe2NvbnN0IGE9MTw8aSV0aGlzLnRleGVsU2l6ZTt0LmxheW91dCZhJiYoc1tyK2ldPWVbaV0pfX10aGlzLmRpcnR5U3RhcnQ9TWF0aC5taW4odGhpcy5kaXJ0eVN0YXJ0LGkpLHRoaXMuZGlydHlFbmQ9TWF0aC5tYXgodGhpcy5kaXJ0eUVuZCxzKX1yZXNpemUodCxlKXtjb25zdCBpPXRoaXMuc2l6ZTtpZih0aGlzLnNpemU9ZSx0aGlzLnRleHR1cmVPbmx5KXJldHVybiB2b2lkKGkhPT10aGlzLnNpemUmJih0aGlzLl9sYXN0VGV4dHVyZT10aGlzLl90ZXh0dXJlLHRoaXMuX3RleHR1cmU9bnVsbCkpO2NvbnN0IHM9Zyh0aGlzLnBpeGVsVHlwZSk7dGhpcy5kZXN0cm95KCksdGhpcy5kYXRhPW5ldyBzKHQuYnVmZmVyKX1fcmVzZXRSYW5nZSgpe3RoaXMuZGlydHlTdGFydD0yMTQ3NDgzNjQ3LHRoaXMuZGlydHlFbmQ9MH1faW5pdFRleHR1cmUodCl7Y29uc3QgZT1uZXcgVSh0LHRoaXMuX3RleHR1cmVEZXNjLHRoaXMuZGF0YT8/dm9pZCAwKTtpZihudWxsIT10aGlzLl9sYXN0VGV4dHVyZSYmdGhpcy5fZmJvc1swXSl7Y29uc3QgaT10aGlzLl9sYXN0VGV4dHVyZS5kZXNjcmlwdG9yLndpZHRoLHM9dGhpcy5fbGFzdFRleHR1cmUuZGVzY3JpcHRvci5oZWlnaHQscj10aGlzLl9sYXN0VGV4dHVyZS5kZXNjcmlwdG9yLmRhdGFUeXBlLGE9dGhpcy5fbGFzdFRleHR1cmUuZGVzY3JpcHRvci5waXhlbEZvcm1hdCxuPXRoaXMuZ2V0RkJPKHQpLGQ9ZihyKSxoPW5ldyhnKHIpKShuZXcgQXJyYXlCdWZmZXIoaSpzKmQqdGhpcy50ZXhlbFNpemUpKSx1PXQuZ2V0Qm91bmRGcmFtZWJ1ZmZlck9iamVjdCgpLHt4Om8seTpsLHdpZHRoOnAsaGVpZ2h0Onh9PXQuZ2V0Vmlld3BvcnQoKTt0LmJpbmRGcmFtZWJ1ZmZlcihuKSxuLnJlYWRQaXhlbHMoMCwwLGkscyxhLHIsaCksZS51cGRhdGVEYXRhKDAsMCwwLDIqaSxzLzIsaCksdC5zZXRWaWV3cG9ydChvLGwscCx4KSx0LmJpbmRGcmFtZWJ1ZmZlcih1KX1yZXR1cm4gdGhpcy5kZXN0cm95KCksdGhpcy5fdGV4dHVyZT1lLHRoaXMuX3RleHR1cmV9fWNsYXNzIGp7Y29uc3RydWN0b3IodCl7dGhpcy5fb25VcGRhdGU9dCx0aGlzLl9pbml0aWFsaXplZD0hMSx0aGlzLl9mb3JjZU5leHRVcGxvYWQ9ITEsdGhpcy5fbG9ja2VkPSExfWluaXRpYWxpemUodCl7Y29uc3R7YmxvY2tzOmUsc2hhcmVkOmksc2l6ZTpzfT10O2lmKHRoaXMuc2hhcmVkPWksdGhpcy5zaXplPXMsUyhcIkluaXRpYWxpemluZyBBdHRyaWJ1dGVTdG9yZVZpZXdcIix0KSxudWxsPT10aGlzLl9kYXRhKXRoaXMuX2RhdGE9ZS5tYXAoKHQ9Pm51bGwhPXQ/bmV3IEEodCxzLGkpOm51bGwpKTtlbHNlIGZvcihsZXQgcj0wO3I8dGhpcy5fZGF0YS5sZW5ndGg7cisrKXtjb25zdCB0PXRoaXMuX2RhdGFbcl0sYT1lW3JdO251bGwhPWEmJihudWxsPT10P3RoaXMuX2RhdGFbcl09bmV3IEEoYSxzLGkpOnQucmVzaXplKGEscykpfXRoaXMuX2luaXRpYWxpemVkPSEwfWRlc3Ryb3koKXtmb3IoY29uc3QgdCBvZiB0aGlzLl9kYXRhPz9bXSl0Py5kZXN0cm95KCk7dGhpcy5fZGVmYXVsdFRleHR1cmU/LmRpc3Bvc2UoKX1pc0VtcHR5KCl7cmV0dXJuIG51bGw9PXRoaXMuX2RhdGF9aXNVcGRhdGluZygpe2NvbnN0IHQ9bnVsbCE9dGhpcy5fcGVuZGluZ0F0dHJpYnV0ZVVwZGF0ZSxlPXQ7cmV0dXJuIGhhcyhcImVzcmktMmQtbG9nLXVwZGF0aW5nXCIpJiZjb25zb2xlLmxvZyhgVXBkYXRpbmcgQXR0cmlidXRlU3RvcmVWaWV3ICR7ZX1cXG4gIC0+IGhhc1BlbmRpbmdVcGRhdGUgJHt0fWApLGV9Z2V0QmxvY2sodCl7aWYobnVsbD09dGhpcy5fZGF0YSlyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy5fZGF0YVt0XX1zZXRMYWJlbE1pblpvb20odCxlKXt0aGlzLnNldERhdGEodCwwLDEsZSl9Z2V0TGFiZWxNaW5ab29tKHQpe3JldHVybiB0aGlzLmdldERhdGEodCwwLDEsMjU1KX1nZXRGaWx0ZXJGbGFncyh0KXtyZXR1cm4gdGhpcy5nZXREYXRhKHQsMCwwLDApfWdldFZWU2l6ZSh0KXtyZXR1cm4gdGhpcy5nZXREYXRhKHQscywwLDApfWdldERhdGEodCxlLGkscyl7aWYoIXRoaXMuX2RhdGEpcmV0dXJuIDA7Y29uc3Qgcj10aGlzLl9kYXRhW2VdO2lmKG51bGw9PXIpcmV0dXJuIDA7Y29uc3QgYT1yLmdldERhdGEodCxpKTtyZXR1cm4gbnVsbCE9YT9hOnN9c2V0RGF0YSh0LGUsaSxzKXt0aGlzLl9kYXRhW2VdLnNldERhdGEodCxpLHMpfWxvY2tUZXh0dXJlVXBsb2FkKCl7dGhpcy5fbG9ja2VkPSEwfXVubG9ja1RleHR1cmVVcGxvYWQoKXt0aGlzLl9sb2NrZWQ9ITF9Zm9yY2VUZXh0dXJlVXBsb2FkKCl7dGhpcy5fZm9yY2VOZXh0VXBsb2FkPSEwfWFzeW5jIHJlcXVlc3RVcGRhdGUoZSl7aWYodGhpcy5fcGVuZGluZ0F0dHJpYnV0ZVVwZGF0ZSlyZXR1cm4gdm9pZCBFLmVycm9yKG5ldyB0KFwibWFwdmlldy13ZWJnbFwiLFwiVHJpZWQgdG8gdXBkYXRlIGF0dHJpYnV0ZSBkYXRhIHdpdGggYSBwZW5kaW5nIHVwZGF0ZVwiKSk7Y29uc3Qgcz1pKCk7cmV0dXJuIFMoXCJBdHRyaWJ1dGVTdG9yZVZpZXcgVXBkYXRlIFJlcXVlc3RlZFwiLGUpLHRoaXMuX3BlbmRpbmdBdHRyaWJ1dGVVcGRhdGU9e2RhdGE6ZSxyZXNvbHZlcjpzfSx0aGlzLl9vblVwZGF0ZSgpLHMucHJvbWlzZX11cGRhdGUoKXtpZih0aGlzLl9pbml0aWFsaXplZCYmbnVsbCE9dGhpcy5fcGVuZGluZ0F0dHJpYnV0ZVVwZGF0ZSl7aGFzKFwiZXNyaS0yZC11cGRhdGUtZGVidWdcIikmJmNvbnNvbGUuZGVidWcoXCJBdHRyaWJ1dGVTdG9yZVZpZXc6OnVwZGF0ZVwiKTtjb25zdHtkYXRhOnQscmVzb2x2ZXI6ZX09dGhpcy5fcGVuZGluZ0F0dHJpYnV0ZVVwZGF0ZSxpPXRoaXMuX2RhdGE7Zm9yKGxldCBzPTA7czx0LmJsb2Nrcy5sZW5ndGg7cysrKXtjb25zdCBlPXQuYmxvY2tzW3NdLHI9aVtzXTtudWxsIT1yJiZudWxsIT1lJiYoUyhgVXBkYXRpbmcgYmxvY2sgJHtzfWAsZSksci51cGRhdGUoZSkpfXRoaXMuX3BlbmRpbmdBdHRyaWJ1dGVVcGRhdGU9bnVsbCxlKCksdGhpcy5fb25VcGRhdGUoKX19YmluZFRleHR1cmVzKHQsZT0hMCl7Y29uc3QgaT10aGlzLl9nZXREZWZhdWx0VGV4dHVyZSh0KTtpZighdGhpcy5faW5pdGlhbGl6ZWQpcmV0dXJuIHQuYmluZFRleHR1cmUoaSxyKSx2b2lkKGUmJih0LmJpbmRUZXh0dXJlKGksYSksdC5iaW5kVGV4dHVyZShpLG4pLHQuYmluZFRleHR1cmUoaSxkKSx0LmJpbmRUZXh0dXJlKGksaCksdC5iaW5kVGV4dHVyZShpLHUpLHQuYmluZFRleHR1cmUoaSxvKSkpO2NvbnN0IGM9dGhpcy5fZGF0YTtpZighdGhpcy5fbG9ja2VkfHx0aGlzLl9mb3JjZU5leHRVcGxvYWQpe2Zvcihjb25zdCBlIG9mIGMpZT8udXBkYXRlVGV4dHVyZSh0LCgoKT0+dGhpcy5fb25VcGRhdGUoKSkpO3RoaXMuX2ZvcmNlTmV4dFVwbG9hZD0hMX10LmJpbmRUZXh0dXJlKGNbbF0/LmdldFRleHR1cmUodCk/P2ksciksZSYmKHQuYmluZFRleHR1cmUoY1twXT8uZ2V0VGV4dHVyZSh0KT8/aSxvKSx0LmJpbmRUZXh0dXJlKGNbeF0/LmdldFRleHR1cmUodCk/P2ksYSksdC5iaW5kVGV4dHVyZShjW3NdPy5nZXRUZXh0dXJlKHQpPz9pLG4pLHQuYmluZFRleHR1cmUoY1tfXT8uZ2V0VGV4dHVyZSh0KT8/aSxkKSx0LmJpbmRUZXh0dXJlKGNbaF0/LmdldFRleHR1cmUodCk/P2ksaCksdC5iaW5kVGV4dHVyZShjW3VdPy5nZXRUZXh0dXJlKHQpPz9pLHUpKX1fZ2V0RGVmYXVsdFRleHR1cmUodCl7aWYobnVsbD09dGhpcy5fZGVmYXVsdFRleHR1cmUpe2NvbnN0IGU9bmV3IEQ7ZS53cmFwTW9kZT1tLkNMQU1QX1RPX0VER0UsZS5zYW1wbGluZ01vZGU9eS5ORUFSRVNULGUud2lkdGg9MSxlLmhlaWdodD0xLHRoaXMuX2RlZmF1bHRUZXh0dXJlPW5ldyBVKHQsZSxuZXcgVWludDhBcnJheSg0KSl9cmV0dXJuIHRoaXMuX2RlZmF1bHRUZXh0dXJlfX1leHBvcnR7aiBhcyBBdHRyaWJ1dGVTdG9yZVZpZXd9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtMaXN0IGFzIHR9ZnJvbVwiLi9jcHVNYXBwZWQvRnJlZUxpc3QuanNcIjtjbGFzcyBle2NvbnN0cnVjdG9yKHQsZSxuLGksYSl7dGhpcy50YXJnZXQ9dCx0aGlzLmdlb21ldHJ5VHlwZT1lLHRoaXMubWF0ZXJpYWxLZXk9bix0aGlzLmluZGV4RnJvbT1pLHRoaXMuaW5kZXhDb3VudD1hfWdldCBpbmRleEVuZCgpe3JldHVybiB0aGlzLmluZGV4RnJvbSt0aGlzLmluZGV4Q291bnR9ZXh0ZW5kKHQpe3RoaXMuaW5kZXhDb3VudCs9dH19Y2xhc3Mgbntjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuZ2VvbWV0cnlUeXBlPTAsdGhpcy5fdGFyZ2V0PXQsdGhpcy5nZW9tZXRyeVR5cGU9ZX1zdGF0aWMgZnJvbSh0LGUsaSxhKXtjb25zdCBkPW5ldyBuKHQsZSk7aWYobnVsbCE9YSlmb3IoY29uc3QgbiBvZiBhKWkuc2Vla0luZGV4KG4pLGQuYWRkUmVjb3JkKGkpO2Vsc2UgZm9yKDtpLm5leHQoKTspZC5hZGRSZWNvcmQoaSk7cmV0dXJuIGR9YWRkUmVjb3JkKG4pe2NvbnN0IGk9dGhpcy5fdGFyZ2V0LGE9dGhpcy5nZW9tZXRyeVR5cGUsZD1uLm1hdGVyaWFsS2V5O2xldCBzPW4uaW5kZXhGcm9tLHI9bi5pbmRleENvdW50O2NvbnN0IG89bi52ZXJ0ZXhGcm9tLGw9bi52ZXJ0ZXhDb3VudDtpZihyfHwocz1vLHI9bCksbnVsbD09dGhpcy5faGVhZCl7Y29uc3Qgbj1uZXcgZShpLGEsZCxzLHIpO3JldHVybiB2b2lkKHRoaXMuX2hlYWQ9bmV3IHQobikpfWxldCBoPW51bGwseD10aGlzLl9oZWFkO2Zvcig7eDspe2lmKHM8eC5kYXRhLmluZGV4RnJvbSlyZXR1cm4gdGhpcy5faW5zZXJ0KGQscyxyLGgseCk7aD14LHg9eC5uZXh0fXRoaXMuX2luc2VydChkLHMscixoLG51bGwpfWZvckVhY2godCl7bnVsbCE9dGhpcy5faGVhZCYmdGhpcy5faGVhZC5mb3JFYWNoKHQpfSppbmZvcygpe2lmKG51bGwhPXRoaXMuX2hlYWQpZm9yKGNvbnN0IHQgb2YgdGhpcy5faGVhZC52YWx1ZXMoKSl5aWVsZCB0fV9pbnNlcnQobixpLGEsZCxzKXtpZihudWxsPT1kJiZudWxsPT1zKXtjb25zdCBkPW5ldyBlKHRoaXMuX3RhcmdldCx0aGlzLmdlb21ldHJ5VHlwZSxuLGksYSk7dGhpcy5faGVhZD1uZXcgdChkKX1yZXR1cm4gbnVsbD09ZCYmbnVsbCE9cz90aGlzLl9pbnNlcnRBdEhlYWQobixpLGEscyk6bnVsbCE9ZCYmbnVsbD09cz90aGlzLl9pbnNlcnRBdEVuZChuLGksYSxkKTpudWxsIT1kJiZudWxsIT1zP3RoaXMuX2luc2VydEF0TWlkZGxlKG4saSxhLGQscyk6dm9pZCAwfV9pbnNlcnRBdEhlYWQobixpLGEsZCl7Y29uc3Qgcz1pK2E7aWYobj09PWQuZGF0YS5tYXRlcmlhbEtleSYmcz09PWQuZGF0YS5pbmRleEZyb20pZC5kYXRhLmluZGV4RnJvbT1pLGQuZGF0YS5pbmRleENvdW50Kz1hO2Vsc2V7Y29uc3Qgcz1uZXcgZSh0aGlzLl90YXJnZXQsdGhpcy5nZW9tZXRyeVR5cGUsbixpLGEpO3RoaXMuX2hlYWQ9bmV3IHQocyksdGhpcy5faGVhZC5uZXh0PWR9fV9pbnNlcnRBdEVuZChuLGksYSxkKXtpZihkLmRhdGEubWF0ZXJpYWxLZXk9PT1uJiZkLmRhdGEuaW5kZXhFbmQ9PT1pKWQuZGF0YS5pbmRleENvdW50Kz1hO2Vsc2V7Y29uc3Qgcz1uZXcgZSh0aGlzLl90YXJnZXQsdGhpcy5nZW9tZXRyeVR5cGUsbixpLGEpLHI9bmV3IHQocyk7ZC5uZXh0PXJ9fV9pbnNlcnRBdE1pZGRsZShuLGksYSxkLHMpe2NvbnN0IHI9aSthO2lmKGQuZGF0YS5tYXRlcmlhbEtleT09PW4mJmQuZGF0YS5pbmRleEVuZD09PWkpZC5kYXRhLmluZGV4Q291bnQrPWEsZC5kYXRhLm1hdGVyaWFsS2V5PT09cy5kYXRhLm1hdGVyaWFsS2V5JiZkLmRhdGEuaW5kZXhFbmQ9PT1zLmRhdGEuaW5kZXhGcm9tJiYoZC5kYXRhLmluZGV4Q291bnQrPXMuZGF0YS5pbmRleENvdW50LGQubmV4dD1zLm5leHQpO2Vsc2UgaWYobj09PXMuZGF0YS5tYXRlcmlhbEtleSYmcj09PXMuZGF0YS5pbmRleEZyb20pcy5kYXRhLmluZGV4RnJvbT1pLHMuZGF0YS5pbmRleENvdW50Kz1hO2Vsc2V7Y29uc3Qgcj1uZXcgZSh0aGlzLl90YXJnZXQsdGhpcy5nZW9tZXRyeVR5cGUsbixpLGEpLG89bmV3IHQocik7ZC5uZXh0PW8sby5uZXh0PXN9fX1leHBvcnR7biBhcyBGZWF0dXJlRGlzcGxheUxpc3QsZSBhcyBGZWF0dXJlRGlzcGxheUxpc3RJbmZvfTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7cyBhcyB0LG0gYXMgc31mcm9tXCIuLi8uLi8uLi8uLi9jaHVua3MvbWF0My5qc1wiO2ltcG9ydHtEaXNwbGF5T2JqZWN0IGFzIGl9ZnJvbVwiLi4vRGlzcGxheU9iamVjdC5qc1wiO2ltcG9ydCBlIGZyb21cIi4uLy4uL3RpbGluZy9UaWxlS2V5LmpzXCI7Y2xhc3MgciBleHRlbmRzIGl7Y29uc3RydWN0b3IodCxzLGkscixoLG8sbj1oLGE9byl7c3VwZXIoKSx0aGlzLnRyaWFuZ2xlQ291bnRSZXBvcnRlZEluRGVidWc9MCx0aGlzLnRyaWFuZ2xlQ291bnQ9MCx0aGlzLnRleHR1cmU9bnVsbCx0aGlzLmtleT1uZXcgZSh0KSx0aGlzLnJlc29sdXRpb249cyx0aGlzLng9aSx0aGlzLnk9cix0aGlzLndpZHRoPWgsdGhpcy5oZWlnaHQ9byx0aGlzLnJhbmdlWD1uLHRoaXMucmFuZ2VZPWF9ZGVzdHJveSgpe3RoaXMudGV4dHVyZSYmKHRoaXMudGV4dHVyZS5kaXNwb3NlKCksdGhpcy50ZXh0dXJlPW51bGwpfXNldFRyYW5zZm9ybShpKXtjb25zdCBlPXRoaXMucmVzb2x1dGlvbi8oaS5yZXNvbHV0aW9uKmkucGl4ZWxSYXRpbykscj10aGlzLnRyYW5zZm9ybXMudGlsZU1hdDMsW2gsb109aS50b1NjcmVlbk5vUm90YXRpb24oWzAsMF0sW3RoaXMueCx0aGlzLnldKSxuPXRoaXMud2lkdGgvdGhpcy5yYW5nZVgqZSxhPXRoaXMuaGVpZ2h0L3RoaXMucmFuZ2VZKmU7dChyLG4sMCwwLDAsYSwwLGgsbywxKSxzKHRoaXMudHJhbnNmb3Jtcy5kdnMsaS5kaXNwbGF5Vmlld01hdDMscil9fWV4cG9ydHtyIGFzIFRpbGVkRGlzcGxheU9iamVjdH07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e2QgYXMgcyxtIGFzIHR9ZnJvbVwiLi4vLi4vLi4vLi4vY2h1bmtzL21hdDJkLmpzXCI7aW1wb3J0e2MgYXMgcn1mcm9tXCIuLi8uLi8uLi8uLi9jaHVua3MvbWF0MmRmMzIuanNcIjtpbXBvcnR7cyBhcyBlLG0gYXMgYX1mcm9tXCIuLi8uLi8uLi8uLi9jaHVua3MvbWF0My5qc1wiO2ltcG9ydHtjIGFzIGl9ZnJvbVwiLi4vLi4vLi4vLi4vY2h1bmtzL21hdDNmMzIuanNcIjtpbXBvcnR7dGlsZVNpemUgYXMgb31mcm9tXCIuL2RlZmluaXRpb25zLmpzXCI7aW1wb3J0e1RpbGVkRGlzcGxheU9iamVjdCBhcyBufWZyb21cIi4vVGlsZWREaXNwbGF5T2JqZWN0LmpzXCI7Y2xhc3MgaHthY3F1aXJlKHMpe3JldHVybntyZWZDb3VudDoxLHZlcnNpb246LTEsbGFiZWxNYXQyZDpyKCksdGlsZU1hdDM6aSgpLGR2czppKCl9fXJlbGVhc2Uocyl7fX1jbGFzcyBtIGV4dGVuZHMgbntjb25zdHJ1Y3RvcihzLHQscixlKXtzdXBlcihzLHQscixlLG8sbyl9ZGVzdHJveSgpe3N1cGVyLmRlc3Ryb3koKSx0aGlzLl90cmFuc2Zvcm1zJiZtLlRyYW5zZm9ybUNhY2hlLnJlbGVhc2UodGhpcy5rZXkuaGFzaCl9c2V0VHJhbnNmb3JtKGkpe2NvbnN0IG89dGhpcy5yZXNvbHV0aW9uL2kucmVzb2x1dGlvbixuPXRoaXMudHJhbnNmb3Jtcy50aWxlTWF0MyxbaCxtXT1pLnRvU2NyZWVuTm9Sb3RhdGlvbihbMCwwXSxbdGhpcy54LHRoaXMueV0pLGM9dGhpcy53aWR0aC90aGlzLnJhbmdlWCpvLGY9dGhpcy5oZWlnaHQvdGhpcy5yYW5nZVkqbztlKG4sYywwLDAsMCxmLDAsaCxtLDEpLGEodGhpcy50cmFuc2Zvcm1zLmR2cyxpLmRpc3BsYXlWaWV3TWF0MyxuKTtjb25zdCBkPXRoaXMudHJhbnNmb3Jtcy5sYWJlbE1hdDJkLGw9d2luZG93LmRldmljZVBpeGVsUmF0aW8sdT1zKHIoKSxjKmwsMCwwLGYqbCxoKmwsbSpsKTt0KGQsaS52aWV3TWF0MmQsdSl9X2NyZWF0ZVRyYW5zZm9ybXMoKXtyZXR1cm4gbS5UcmFuc2Zvcm1DYWNoZS5hY3F1aXJlKHRoaXMua2V5Lmhhc2gpfX1tLlRyYW5zZm9ybUNhY2hlPW5ldyBoO2V4cG9ydHttIGFzIFdHTFRpbGV9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtkaXNwbGF5UmVjb3JkSW50UGVyRWxlbWVudCBhcyB0fWZyb21cIi4uL2RlZmluaXRpb25zLmpzXCI7aW1wb3J0e0ZlYXR1cmVEaXNwbGF5TGlzdEluZm8gYXMgZX1mcm9tXCIuLi9GZWF0dXJlRGlzcGxheUxpc3QuanNcIjtjb25zdCBzPTIxNDc0ODM2NDc7Y2xhc3Mgcntjb25zdHJ1Y3Rvcih0KXt0aGlzLl9oZWFkPXQsdGhpcy5fY3Vyc29yPXR9c3RhdGljIGZyb20odCxlPTAscz10LmJ5dGVMZW5ndGgvaS5CWVRFU19QRVJfUkVDT1JELWUpe2NvbnN0IF89bmV3IGkobmV3IEludDMyQXJyYXkodCxlKmkuQllURVNfUEVSX1JFQ09SRCxzKmkuRUxFTUVOVFNfUEVSX1JFQ09SRCkpO3JldHVybiBuZXcgcihfKX1zaXplKCl7bGV0IHQ9dGhpcy5fY3Vyc29yLGU9MDtmb3IoO3Q7KWUrPXQuc2l6ZSgpLHQ9dC5fbGluaztyZXR1cm4gZX1nZXQgaWQoKXtyZXR1cm4gdGhpcy5fY3Vyc29yLmlkfXNldCBpZCh0KXt0aGlzLl9jdXJzb3IuaWQ9dH1nZXQgbWF0ZXJpYWxLZXkoKXtyZXR1cm4gdGhpcy5fY3Vyc29yLm1hdGVyaWFsS2V5fXNldCBtYXRlcmlhbEtleSh0KXt0aGlzLl9jdXJzb3IubWF0ZXJpYWxLZXk9dH1nZXQgaW5zZXJ0QWZ0ZXIoKXtyZXR1cm4gdGhpcy5fY3Vyc29yLmluc2VydEFmdGVyfWdldCBpbmRleEZyb20oKXtyZXR1cm4gdGhpcy5fY3Vyc29yLmluZGV4RnJvbX1zZXQgaW5kZXhGcm9tKHQpe3RoaXMuX2N1cnNvci5pbmRleEZyb209dH1nZXQgaW5kZXhDb3VudCgpe3JldHVybiB0aGlzLl9jdXJzb3IuaW5kZXhDb3VudH1zZXQgaW5kZXhDb3VudCh0KXt0aGlzLl9jdXJzb3IuaW5kZXhDb3VudD10fWdldCB2ZXJ0ZXhGcm9tKCl7cmV0dXJuIHRoaXMuX2N1cnNvci52ZXJ0ZXhGcm9tfXNldCB2ZXJ0ZXhGcm9tKHQpe3RoaXMuX2N1cnNvci52ZXJ0ZXhGcm9tPXR9Z2V0IHZlcnRleENvdW50KCl7cmV0dXJuIHRoaXMuX2N1cnNvci52ZXJ0ZXhDb3VudH1zZXQgdmVydGV4Q291bnQodCl7dGhpcy5fY3Vyc29yLnZlcnRleENvdW50PXR9Z2V0IHNvcnRLZXkoKXtyZXR1cm4gdGhpcy5fY3Vyc29yLnNvcnRLZXl9c2V0IHNvcnRLZXkodCl7dGhpcy5fY3Vyc29yLnNvcnRLZXk9dH1nZXQgaW5kZXgoKXtyZXR1cm4gdGhpcy5fY3Vyc29yLl9pbmRleFN0YXJ0K3RoaXMuX2N1cnNvci5faW5kZXh9c2Vla0luZGV4KHQpe2xldCBlPXQ7Zm9yKHRoaXMuX2N1cnNvcj10aGlzLl9oZWFkO3RoaXMuX2N1cnNvcjspe2NvbnN0IHQ9dGhpcy5fY3Vyc29yLnNpemUoKTtpZihlPHQpcmV0dXJuIHRoaXMuX2N1cnNvci5faW5kZXg9ZSwhMDtlLT10LHRoaXMuX2N1cnNvcj10aGlzLl9jdXJzb3IuX2xpbmt9cmV0dXJuITF9Zm9yRWFjaCh0KXtjb25zdCBlPXRoaXMuZ2V0Q3Vyc29yKCk7Zm9yKDtlLm5leHQoKTspdChlKX1saW5rKHQpe2lmKCF0aGlzLl9oZWFkKXJldHVybiB2b2lkKHRoaXMuX2hlYWQ9dC5faGVhZCk7bGV0IGU9dGhpcy5faGVhZDtmb3IoO2UuX2xpbms7KWU9ZS5fbGluaztlLl9saW5rPXQuX2hlYWQsZS5fbGluay5faW5kZXhTdGFydD1lLl9pbmRleFN0YXJ0K2Uuc2l6ZSgpfWdldEN1cnNvcigpe3JldHVybiB0aGlzLmNvcHkoKX1nZXREcmF3SW5mbyh0LHMpe3JldHVybiBuZXcgZSh0LHMsdGhpcy5tYXRlcmlhbEtleSx0aGlzLmluZGV4RnJvbSx0aGlzLmluZGV4Q291bnQpfWxvb2t1cCh0KXtmb3IodGhpcy5fY3Vyc29yPXRoaXMuX2hlYWQ7dGhpcy5fY3Vyc29yJiYhdGhpcy5fY3Vyc29yLmxvb2t1cCh0KTspe2lmKCF0aGlzLl9jdXJzb3IuX2xpbmspcmV0dXJuITE7dGhpcy5fY3Vyc29yPXRoaXMuX2N1cnNvci5fbGlua31yZXR1cm4hIXRoaXMuX2N1cnNvcn1jb3B5KCl7Y29uc3QgdD1uZXcgcih0aGlzLl9oZWFkPy5jb3B5KCkpO2lmKCF0Ll9oZWFkKXJldHVybiB0O2xldCBlPXQuX2hlYWQscz10Ll9oZWFkLl9saW5rO2Zvcig7czspZS5fbGluaz1zLmNvcHkoKSxlPXMscz1lLl9saW5rO3JldHVybiB0fW5leHQoKXtyZXR1cm4hIXRoaXMuX2N1cnNvciYmKCEhdGhpcy5fY3Vyc29yLm5leHQoKXx8ISF0aGlzLl9jdXJzb3IuX2xpbmsmJih0aGlzLl9jdXJzb3I9dGhpcy5fY3Vyc29yLl9saW5rLHRoaXMubmV4dCgpKSl9cGVla0lkKCl7cmV0dXJuIHRoaXMuX2N1cnNvci5wZWVrSWQoKT8/dGhpcy5fY3Vyc29yLl9saW5rLnBlZWtJZCgpfWRlbGV0ZSh0KXtsZXQgZT10aGlzLl9oZWFkLHM9bnVsbDtmb3IoO2U7KXtpZihlLmRlbGV0ZSh0KSlyZXR1cm4gZS5pc0VtcHR5KCkmJihudWxsIT1zJiYocy5fbGluaz1lLl9saW5rKSxlPT09dGhpcy5faGVhZCYmKHRoaXMuX2hlYWQ9ZS5fbGluayksZT09PXRoaXMuX2N1cnNvciYmKHRoaXMuX2N1cnNvcj1lLl9saW5rKSksITA7cz1lLGU9ZS5fbGlua31yZXR1cm4hMX19ci5FTEVNRU5UU19QRVJfUkVDT1JEPXQsci5CWVRFU19QRVJfUkVDT1JEPXIuRUxFTUVOVFNfUEVSX1JFQ09SRCpJbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO2NsYXNzIGl7Y29uc3RydWN0b3IodCl7dGhpcy5fbGluaz1udWxsLHRoaXMuX2luZGV4PS0xLHRoaXMuX2luZGV4U3RhcnQ9MCx0aGlzLl9wYWNrZWRSZWNvcmRzRjMyPW51bGwsdGhpcy5fZGVsZXRlZENvdW50PTAsdGhpcy5fb2Zmc2V0cz17aW5zdGFuY2U6bnVsbH0sdGhpcy5fcGFja2VkUmVjb3Jkcz10fXN0YXRpYyBmcm9tKHQsZT0wLHM9dC5ieXRlTGVuZ3RoL3RoaXMuQllURVNfUEVSX1JFQ09SRC1lKXtyZXR1cm4gbmV3IGkobmV3IEludDMyQXJyYXkodCxlKnRoaXMuQllURVNfUEVSX1JFQ09SRCxzKnRoaXMuRUxFTUVOVFNfUEVSX1JFQ09SRCkpfWRlbGV0ZSh0KXtjb25zdCBlPXRoaXMuX2luZGV4LHI9dGhpcy5sb29rdXAodCk7aWYocilmb3IodGhpcy5pZD1zLCsrdGhpcy5fZGVsZXRlZENvdW50O3RoaXMubmV4dCgpJiZ0aGlzLmlkPT09dDspdGhpcy5pZD1zLCsrdGhpcy5fZGVsZXRlZENvdW50O3JldHVybiB0aGlzLl9pbmRleD1lLHJ9aXNFbXB0eSgpe3JldHVybiB0aGlzLl9kZWxldGVkQ291bnQ9PT10aGlzLnNpemUoKX1saW5rKHQpe3RoaXMuX2xpbms/dGhpcy5fbGluay5saW5rKHQpOnRoaXMuX2xpbms9dH1sb29rdXAodCl7aWYobnVsbD09dGhpcy5fb2Zmc2V0cy5pbnN0YW5jZSl7dGhpcy5fb2Zmc2V0cy5pbnN0YW5jZT1uZXcgTWFwO2NvbnN0IHQ9dGhpcy5jb3B5KCk7dC5faW5kZXg9LTE7bGV0IGU9MDtmb3IoO3QubmV4dCgpOyl0LmlkIT09ZSYmKHRoaXMuX29mZnNldHMuaW5zdGFuY2Uuc2V0KHQuaWQsdC5faW5kZXgpLGU9dC5pZCl9aWYoIXRoaXMuX29mZnNldHMuaW5zdGFuY2UuaGFzKHQpKXJldHVybiExO2NvbnN0IGU9dGhpcy5faW5kZXg7cmV0dXJuIHRoaXMuX2luZGV4PXRoaXMuX29mZnNldHMuaW5zdGFuY2UuZ2V0KHQpLHRoaXMuaWQhPT1zfHwodGhpcy5faW5kZXg9ZSwhMSl9Z2V0IGlkKCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEXX1zZXQgaWQodCl7dGhpcy5fcGFja2VkUmVjb3Jkc1t0aGlzLl9pbmRleCppLkVMRU1FTlRTX1BFUl9SRUNPUkRdPXR9Z2V0IG1hdGVyaWFsS2V5KCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEKzFdfXNldCBtYXRlcmlhbEtleSh0KXt0aGlzLl9wYWNrZWRSZWNvcmRzW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCsxXT10fWdldCBpbnNlcnRBZnRlcigpe3JldHVybiB0aGlzLl9wYWNrZWRSZWNvcmRzW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCsyXX1nZXQgaW5kZXhGcm9tKCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEKzNdfXNldCBpbmRleEZyb20odCl7dGhpcy5fcGFja2VkUmVjb3Jkc1t0aGlzLl9pbmRleCppLkVMRU1FTlRTX1BFUl9SRUNPUkQrM109dH1nZXQgaW5kZXhDb3VudCgpe3JldHVybiB0aGlzLl9wYWNrZWRSZWNvcmRzW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCs0XX1zZXQgaW5kZXhDb3VudCh0KXt0aGlzLl9wYWNrZWRSZWNvcmRzW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCs0XT10fWdldCB2ZXJ0ZXhGcm9tKCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEKzVdfXNldCB2ZXJ0ZXhGcm9tKHQpe3RoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEKzVdPXR9Z2V0IHZlcnRleENvdW50KCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNbdGhpcy5faW5kZXgqaS5FTEVNRU5UU19QRVJfUkVDT1JEKzZdfXNldCB2ZXJ0ZXhDb3VudCh0KXt0aGlzLl9wYWNrZWRSZWNvcmRzW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCs2XT10fWdldCBzb3J0S2V5KCl7cmV0dXJuIHRoaXMuX3BhY2tlZFJlY29yZHNGMzJ8fCh0aGlzLl9wYWNrZWRSZWNvcmRzRjMyPW5ldyBGbG9hdDMyQXJyYXkodGhpcy5fcGFja2VkUmVjb3Jkcy5idWZmZXIpKSx0aGlzLl9wYWNrZWRSZWNvcmRzRjMyW3RoaXMuX2luZGV4KmkuRUxFTUVOVFNfUEVSX1JFQ09SRCs3XX1zZXQgc29ydEtleSh0KXt0aGlzLl9wYWNrZWRSZWNvcmRzRjMyfHwodGhpcy5fcGFja2VkUmVjb3Jkc0YzMj1uZXcgRmxvYXQzMkFycmF5KHRoaXMuX3BhY2tlZFJlY29yZHMuYnVmZmVyKSksdGhpcy5fcGFja2VkUmVjb3Jkc0YzMlt0aGlzLl9pbmRleCppLkVMRU1FTlRTX1BFUl9SRUNPUkQrN109dH1nZXQgaW5kZXgoKXtyZXR1cm4gdGhpcy5faW5kZXh9c2l6ZSgpe3JldHVybiB0aGlzLl9wYWNrZWRSZWNvcmRzLmxlbmd0aC9pLkVMRU1FTlRTX1BFUl9SRUNPUkR9bmV4dCgpe2Zvcig7Kyt0aGlzLl9pbmRleDx0aGlzLnNpemUoKSYmdGhpcy5pZD09PXM7KTtyZXR1cm4gdGhpcy5faW5kZXg8dGhpcy5zaXplKCl9cGVla0lkKCl7Y29uc3QgdD0odGhpcy5faW5kZXgrMSkqaS5FTEVNRU5UU19QRVJfUkVDT1JEO3JldHVybiB0Pj10aGlzLl9wYWNrZWRSZWNvcmRzLmxlbmd0aD8wOnRoaXMuX3BhY2tlZFJlY29yZHNbdF19Z2V0Q3Vyc29yKCl7cmV0dXJuIHRoaXMuY29weSgpfWNvcHkoKXtjb25zdCB0PW5ldyBpKHRoaXMuX3BhY2tlZFJlY29yZHMpO3JldHVybiB0Ll9pbmRleFN0YXJ0PXRoaXMuX2luZGV4U3RhcnQsdC5fbGluaz10aGlzLl9saW5rLHQuX2luZGV4PXRoaXMuX2luZGV4LHQuX29mZnNldHM9dGhpcy5fb2Zmc2V0cyx0Ll9kZWxldGVkQ291bnQ9dGhpcy5fZGVsZXRlZENvdW50LHR9fWkuRUxFTUVOVFNfUEVSX1JFQ09SRD10LGkuQllURVNfUEVSX1JFQ09SRD1pLkVMRU1FTlRTX1BFUl9SRUNPUkQqSW50MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtleHBvcnR7ciBhcyBEaXNwbGF5UmVjb3JkUmVhZGVyfTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5jbGFzcyB0e2NvbnN0cnVjdG9yKGEpe2lmKHRoaXMubmV4dD1udWxsLCFBcnJheS5pc0FycmF5KGEpKXJldHVybiB2b2lkKHRoaXMuZGF0YT1hKTt0aGlzLmRhdGE9YVswXTtsZXQgZT10aGlzO2ZvcihsZXQgbj0xO248YS5sZW5ndGg7bisrKWUubmV4dD1uZXcgdChbYVtuXV0pLGU9ZS5uZXh0fSp2YWx1ZXMoKXtsZXQgdD10aGlzO2Zvcig7dDspeWllbGQgdC5kYXRhLHQ9dC5uZXh0fWZvckVhY2godCl7bGV0IGE9dGhpcztmb3IoO2E7KXQoYS5kYXRhKSxhPWEubmV4dH1maW5kKHQpe3JldHVybiB0KHRoaXMuZGF0YSk/dGhpczp0aGlzLm5leHQ/LmZpbmQodCl9bWF4KHQsYT10aGlzKXtjb25zdCBlPXQodGhpcy5kYXRhKT50KGEuZGF0YSk/dGhpczphO3JldHVybiB0aGlzLm5leHQ/dGhpcy5uZXh0Lm1heCh0LGUpOmV9cmVtb3ZlKHQsYT1udWxsKXtyZXR1cm4gdGhpcz09PXQ/YT8oYS5uZXh0PXRoaXMubmV4dCxhKTp0aGlzLm5leHQ6dGhpcy5uZXh0Py5yZW1vdmUodCx0aGlzKT8/bnVsbH1nZXQgbGFzdCgpe3JldHVybiB0aGlzLm5leHQ/dGhpcy5uZXh0Lmxhc3Q6dGhpc319Y2xhc3MgYXtjb25zdHJ1Y3RvcihhKXt0aGlzLl9oZWFkPW51bGwsbnVsbCE9YSYmKHRoaXMuX2hlYWQ9bmV3IHQoYSkpfWdldCBoZWFkKCl7cmV0dXJuIHRoaXMuX2hlYWR9bWF4QXZhaWxhYmxlU3BhY2UoKXtpZihudWxsPT10aGlzLl9oZWFkKXJldHVybiAwO2NvbnN0IHQ9dGhpcy5faGVhZC5tYXgoKHQ9PnQuZW5kLXQuc3RhcnQpKTtyZXR1cm4gdC5kYXRhLmVuZC10LmRhdGEuc3RhcnR9Zmlyc3RGaXQodCl7aWYobnVsbD09dGhpcy5faGVhZClyZXR1cm4gbnVsbDtsZXQgYT1udWxsLGU9dGhpcy5faGVhZDtmb3IoO2U7KXtjb25zdCBuPWUuZGF0YS5lbmQtZS5kYXRhLnN0YXJ0O2lmKG49PT10KXJldHVybiBhP2EubmV4dD1lLm5leHQ6dGhpcy5faGVhZD1lLm5leHQsZS5kYXRhLnN0YXJ0O2lmKG4+dCl7Y29uc3QgYT1lLmRhdGEuc3RhcnQ7cmV0dXJuIGUuZGF0YS5zdGFydCs9dCxhfWE9ZSxlPWUubmV4dH1yZXR1cm4gbnVsbH1mcmVlKGEsZSl7Y29uc3Qgbj1hK2U7aWYobnVsbD09dGhpcy5faGVhZCl7Y29uc3QgZT1uZXcgdCh7c3RhcnQ6YSxlbmQ6bn0pO3JldHVybiB2b2lkKHRoaXMuX2hlYWQ9ZSl9aWYobjw9dGhpcy5faGVhZC5kYXRhLnN0YXJ0KXtpZihuPT09dGhpcy5faGVhZC5kYXRhLnN0YXJ0KXJldHVybiB2b2lkKHRoaXMuX2hlYWQuZGF0YS5zdGFydC09ZSk7Y29uc3Qgcj1uZXcgdCh7c3RhcnQ6YSxlbmQ6bn0pO3JldHVybiByLm5leHQ9dGhpcy5faGVhZCx2b2lkKHRoaXMuX2hlYWQ9cil9bGV0IHI9dGhpcy5faGVhZCxzPXIubmV4dDtmb3IoO3M7KXtpZihzLmRhdGEuc3RhcnQ+PW4pe2lmKHIuZGF0YS5lbmQ9PT1hKXtpZihyLmRhdGEuZW5kKz1lLHIuZGF0YS5lbmQ9PT1zLmRhdGEuc3RhcnQpe2NvbnN0IHQ9cy5kYXRhLmVuZC1zLmRhdGEuc3RhcnQ7cmV0dXJuIHIuZGF0YS5lbmQrPXQsdm9pZChyLm5leHQ9cy5uZXh0KX1yZXR1cm59aWYocy5kYXRhLnN0YXJ0PT09bilyZXR1cm4gdm9pZChzLmRhdGEuc3RhcnQtPWUpO2NvbnN0IGQ9bmV3IHQoe3N0YXJ0OmEsZW5kOm59KTtyZXR1cm4gZC5uZXh0PXIubmV4dCx2b2lkKHIubmV4dD1kKX1yPXMscz1zLm5leHR9aWYoYT09PXIuZGF0YS5lbmQpcmV0dXJuIHZvaWQoci5kYXRhLmVuZCs9ZSk7Y29uc3QgZD1uZXcgdCh7c3RhcnQ6YSxlbmQ6bn0pO3IubmV4dD1kfX1leHBvcnR7YSBhcyBGcmVlTGlzdCx0IGFzIExpc3R9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtXR0xWVkZsYWcgYXMgdH1mcm9tXCIuLi9lbnVtcy5qc1wiO2ltcG9ydHtnZXRUeXBlT2ZTaXplVmlzdWFsVmFyaWFibGUgYXMgb31mcm9tXCIuLi92aXN1YWxWYXJpYWJsZXNVdGlscy5qc1wiO2Z1bmN0aW9uIGUoZSl7aWYoIWUpcmV0dXJuIHQuTk9ORTtsZXQgcj0wO2Zvcihjb25zdCBpIG9mIGUpaWYoXCJzaXplXCI9PT1pLnR5cGUpe2NvbnN0IHQ9byhpKTtyfD10LFwib3V0bGluZVwiPT09aS50YXJnZXQmJihyfD10PDw0KX1lbHNlXCJjb2xvclwiPT09aS50eXBlP3J8PXQuQ09MT1I6XCJvcGFjaXR5XCI9PT1pLnR5cGU/cnw9dC5PUEFDSVRZOlwicm90YXRpb25cIj09PWkudHlwZSYmKHJ8PXQuUk9UQVRJT04pO3JldHVybiByfWV4cG9ydHtlIGFzIGdldFZWRmxhZ3N9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtDSU1TeW1ib2xIZWxwZXIgYXMgZX1mcm9tXCIuLi8uLi8uLi8uLi9zeW1ib2xzL2NpbS9DSU1TeW1ib2xIZWxwZXIuanNcIjtpbXBvcnR7V0dMR2VvbWV0cnlUeXBlIGFzIHQsV0dMU3ltYm9sb2d5VHlwZSBhcyByfWZyb21cIi4uLy4uL2VuZ2luZS93ZWJnbC9lbnVtcy5qc1wiO2ltcG9ydHtjcmVhdGVNYXRlcmlhbEtleSBhcyBhLGlzT3V0bGluZUZpbGxTeW1ib2xvZ3kgYXMgbCxoeWRyYXRlTWF0ZXJpYWxLZXkgYXMgbn1mcm9tXCIuLi8uLi9lbmdpbmUvd2ViZ2wvbWF0ZXJpYWxLZXkvTWF0ZXJpYWxLZXkuanNcIjtmdW5jdGlvbiBzKGUpe2lmKFwibGluZS1tYXJrZXJcIj09PWUudHlwZSl7cmV0dXJue3R5cGU6XCJsaW5lLW1hcmtlclwiLGNvbG9yOmUuY29sb3I/LnRvSlNPTigpLHBsYWNlbWVudDplLnBsYWNlbWVudCxzdHlsZTplLnN0eWxlfX1yZXR1cm4gZS5jb25zdHJ1Y3Rvci5mcm9tSlNPTihlLnRvSlNPTigpKS50b0pTT04oKX1mdW5jdGlvbiBvKGUpe3JldHVybiBuKGUpfWZ1bmN0aW9uIGkoZSx0LHI9ITEpe2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChlLnR5cGUpe2Nhc2VcInNpbXBsZS1maWxsXCI6Y2FzZVwicGljdHVyZS1maWxsXCI6cmV0dXJuIGMoZSx0LHIpO2Nhc2VcInNpbXBsZS1tYXJrZXJcIjpjYXNlXCJwaWN0dXJlLW1hcmtlclwiOnJldHVybiBoKGUsdCxyKTtjYXNlXCJzaW1wbGUtbGluZVwiOnJldHVybiB5KGUsdCxyKTtjYXNlXCJ0ZXh0XCI6cmV0dXJuIHUoZSx0LHIpO2Nhc2VcImxhYmVsXCI6cmV0dXJuIG0oZSx0LHIpO2Nhc2VcImNpbVwiOnJldHVybnt0eXBlOlwiY2ltXCIscmVuZGVyZXJLZXk6dC52dkZsYWdzLGRhdGE6ZS5kYXRhLG1heFZWU2l6ZTp0Lm1heFZWU2l6ZX07Y2FzZVwiQ0lNU3ltYm9sUmVmZXJlbmNlXCI6cmV0dXJue3R5cGU6XCJjaW1cIixyZW5kZXJlcktleTp0LnZ2RmxhZ3MsZGF0YTplLG1heFZWU2l6ZTp0Lm1heFZWU2l6ZX07Y2FzZVwid2ViLXN0eWxlXCI6cmV0dXJuey4uLnMoZSksdHlwZTpcIndlYi1zdHlsZVwiLGhhc2g6ZS5oYXNoKCkscmVuZGVyZXJLZXk6dC52dkZsYWdzLG1heFZWU2l6ZTp0Lm1heFZWU2l6ZX07ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYHN5bWJvbCBub3Qgc3VwcG9ydGVkICR7ZS50eXBlfWApfX1mdW5jdGlvbiBtKGUscixsKXtjb25zdCBuPWUudG9KU09OKCkscz1hKHQuTEFCRUwsey4uLnIscGxhY2VtZW50Om4ubGFiZWxQbGFjZW1lbnR9KTtyZXR1cm57bWF0ZXJpYWxLZXk6bD9vKHMpOnMsaGFzaDplLmhhc2goKSwuLi5uLGxhYmVsUGxhY2VtZW50Om4ubGFiZWxQbGFjZW1lbnR9fWZ1bmN0aW9uIGMoZSxyLG4pe2NvbnN0IGk9YSh0LkZJTEwsciksbT1uP28oaSk6aSxjPWUuY2xvbmUoKSx5PWMub3V0bGluZSxoPWwoci5zeW1ib2xvZ3lUeXBlKTtofHwoYy5vdXRsaW5lPW51bGwpO2NvbnN0IHU9e21hdGVyaWFsS2V5Om0saGFzaDpjLmhhc2goKSwuLi5zKGMpfTtpZihoKXJldHVybiB1O2NvbnN0IHA9W107aWYocC5wdXNoKHUpLHkpe2NvbnN0IGU9YSh0LkxJTkUsey4uLnIsaXNPdXRsaW5lOiEwfSksbD17bWF0ZXJpYWxLZXk6bj9vKGUpOmUsaGFzaDp5Lmhhc2goKSwuLi5zKHkpfTtwLnB1c2gobCl9cmV0dXJue3R5cGU6XCJjb21wb3NpdGUtc3ltYm9sXCIsbGF5ZXJzOnAsaGFzaDpwLnJlZHVjZSgoKGUsdCk9PnQuaGFzaCtlKSxcIlwiKX19ZnVuY3Rpb24geShlLG4saSl7Y29uc3QgbT1sKG4uc3ltYm9sb2d5VHlwZSk/ci5ERUZBVUxUOm4uc3ltYm9sb2d5VHlwZSxjPWEodC5MSU5FLHsuLi5uLHN5bWJvbG9neVR5cGU6bX0pLHk9aT9vKGMpOmMsaD1lLmNsb25lKCksdT1oLm1hcmtlcjtoLm1hcmtlcj1udWxsO2NvbnN0IHA9W107aWYocC5wdXNoKHttYXRlcmlhbEtleTp5LGhhc2g6aC5oYXNoKCksLi4ucyhoKX0pLHUpe2NvbnN0IGU9YSh0Lk1BUktFUixuKSxyPWk/byhlKTplO3UuY29sb3I9dS5jb2xvcj8/aC5jb2xvcixwLnB1c2goe21hdGVyaWFsS2V5OnIsaGFzaDp1Lmhhc2goKSxsaW5lV2lkdGg6aC53aWR0aCwuLi5zKHUpfSl9cmV0dXJue3R5cGU6XCJjb21wb3NpdGUtc3ltYm9sXCIsbGF5ZXJzOnAsaGFzaDpwLnJlZHVjZSgoKGUsdCk9PnQuaGFzaCtlKSxcIlwiKX19ZnVuY3Rpb24gaChyLGwsbil7aWYoXCJzaW1wbGUtbWFya2VyXCI9PT1yLnR5cGUmJihcInBhdGhcIj09PXIuc3R5bGV8fHIub3V0bGluZSYmXCJzb2xpZFwiIT09ci5vdXRsaW5lLnN0eWxlJiZcIm5vbmVcIiE9PXIub3V0bGluZS5zdHlsZSkpe3JldHVybiBpKHt0eXBlOlwiQ0lNU3ltYm9sUmVmZXJlbmNlXCIsc3ltYm9sOmUuZnJvbVNpbXBsZU1hcmtlcihyKX0sbCxuKX1jb25zdCBtPWEodC5NQVJLRVIsbCksYz1uP28obSk6bSx5PXMocik7cmV0dXJue21hdGVyaWFsS2V5OmMsaGFzaDpyLmhhc2goKSwuLi55LGFuZ2xlOnIuYW5nbGUsbWF4VlZTaXplOmwubWF4VlZTaXplfX1mdW5jdGlvbiB1KGUscixsKXtjb25zdCBuPWEodC5URVhULHIpLGk9bD9vKG4pOm4sbT1zKGUpO3JldHVybnttYXRlcmlhbEtleTppLGhhc2g6ZS5oYXNoKCksLi4ubSxhbmdsZTplLmFuZ2xlLG1heFZWU2l6ZTpyLm1heFZWU2l6ZX19ZXhwb3J0e2kgYXMgY3JlYXRlU3ltYm9sU2NoZW1hfTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7aXNTb21lIGFzIGV9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9hcnJheVV0aWxzLmpzXCI7aW1wb3J0IHQgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9FcnJvci5qc1wiO2ltcG9ydCBoYXMgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9oYXMuanNcIjtpbXBvcnQgciBmcm9tXCIuLi8uLi8uLi8uLi9jb3JlL0xvZ2dlci5qc1wiO2ltcG9ydHtwdDJweCBhcyBpfWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvc2NyZWVuVXRpbHMuanNcIjtpbXBvcnR7c3FsQW5kIGFzIG59ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9zcWwuanNcIjtpbXBvcnR7ZGlmZiBhcyBzfWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RpZmZVdGlscy5qc1wiO2ltcG9ydHt2YWxpZGF0ZUxhYmVsaW5nSW5mbyBhcyBsfWZyb21cIi4uLy4uLy4uLy4uL2xheWVycy9zdXBwb3J0L2xhYmVsaW5nSW5mby5qc1wiO2ltcG9ydHtXR0xTeW1ib2xvZ3lUeXBlIGFzIG99ZnJvbVwiLi4vLi4vZW5naW5lL3dlYmdsL2VudW1zLmpzXCI7aW1wb3J0e2dldFZWVHlwZSBhcyBhfWZyb21cIi4uLy4uL2VuZ2luZS93ZWJnbC9VdGlscy5qc1wiO2ltcG9ydHtnZXRUZWNobmlxdWVGcm9tUmVuZGVyZXIgYXMgdX1mcm9tXCIuLi8uLi9lbmdpbmUvd2ViZ2wvdGVjaG5pcXVlcy91dGlscy5qc1wiO2ltcG9ydHtnZXRWVkZsYWdzIGFzIGR9ZnJvbVwiLi4vLi4vZW5naW5lL3dlYmdsL3V0aWwvdnZGbGFnVXRpbHMuanNcIjtpbXBvcnR7Y3JlYXRlU3ltYm9sU2NoZW1hIGFzIGZ9ZnJvbVwiLi9jcmVhdGVTeW1ib2xTY2hlbWEuanNcIjtpbXBvcnR7Z2V0UHRNYXhWVlNpemUgYXMgcH1mcm9tXCIuL3N1cHBvcnQvcGl4ZWxCdWZmZXJpbmcuanNcIjtpbXBvcnR7Z2V0U3VwcG9ydGVkSGVhdG1hcFJlbmRlcmVyIGFzIGMsc2ltcGxpZnlWaXN1YWxWYXJpYWJsZXMgYXMgeX1mcm9tXCIuL3N1cHBvcnQvcmVuZGVyZXJVdGlscy5qc1wiO2ltcG9ydHtpbmplY3REeW5hbWljTGV2ZWxEZXBlbmRlbnRTaXplVmlzdWFsVmFyaWFibGUgYXMgbSxjcmVhdGVDbHVzdGVyUmVuZGVyZXIgYXMgZ31mcm9tXCIuLi9zdXBwb3J0L2NsdXN0ZXJVdGlscy5qc1wiO2ltcG9ydHt0b0pTT05HZW9tZXRyeVR5cGUgYXMgYn1mcm9tXCIuLi9zdXBwb3J0L3V0aWwuanNcIjtjb25zdCB4PXIuZ2V0TG9nZ2VyKFwiZXNyaS52aWV3cy4yZC5sYXllcnMuZmVhdHVyZXMuc2NoZW1hVXRpbHNcIiksaD1cIlZhbGlkYXRpb25FcnJvclwiO2Z1bmN0aW9uIHYoZSl7cmV0dXJuIGV9ZnVuY3Rpb24gVChlLHQpe2xldCByPTAsaT0wLG49by5ERUZBVUxUO2lmKG51bGwhPWUpe2lmKGk9cChlLHQpLFwidmlzdWFsVmFyaWFibGVzXCJpbiBlJiYocj1kKGUudmlzdWFsVmFyaWFibGVzfHxbXSksXCJkb3QtZGVuc2l0eVwiPT09ZS50eXBlJiYobj1vLkRPVF9ERU5TSVRZKSksXCJoZWF0bWFwXCI9PT1lLnR5cGUmJihuPW8uSEVBVE1BUCksXCJkaWN0aW9uYXJ5XCI9PT1lLnR5cGUpcmV0dXJue21heFZWU2l6ZTppLHZ2RmxhZ3M6cixzeW1ib2xvZ3lUeXBlOm8uREVGQVVMVH07aWYoXCJwaWUtY2hhcnRcIj09PWUudHlwZSlyZXR1cm57bWF4VlZTaXplOmksdnZGbGFnczpyLHN5bWJvbG9neVR5cGU6by5QSUVfQ0hBUlR9O2lmKG4hPT1vLkRPVF9ERU5TSVRZJiZuIT09by5IRUFUTUFQKXtjb25zdCB0PWUuZ2V0U3ltYm9scygpO1wiYmFja2dyb3VuZEZpbGxTeW1ib2xcImluIGUmJmUuYmFja2dyb3VuZEZpbGxTeW1ib2wmJnQucHVzaChlLmJhY2tncm91bmRGaWxsU3ltYm9sKTtsZXQgcj0hMCxpPSEwO2Zvcihjb25zdCBlIG9mIHQpaWYoXCJjaW1cIiE9PWUudHlwZSYmXCJ3ZWItc3R5bGVcIiE9PWUudHlwZXx8KGk9ITEpLFwic2ltcGxlLWZpbGxcIj09PWUudHlwZXx8XCJwaWN0dXJlLWZpbGxcIj09PWUudHlwZSl7Y29uc3QgdD1lLm91dGxpbmUsbj10JiZcIm5vbmVcIiE9PXQuc3R5bGUmJlwic29saWRcIiE9PXQuc3R5bGUscz1cInNpbXBsZS1maWxsXCI9PT1lLnR5cGUmJlwibm9uZVwiIT09ZS5zdHlsZSYmXCJzb2xpZFwiIT09ZS5zdHlsZTtuJiYocj0hMSksKFwicGljdHVyZS1maWxsXCI9PT1lLnR5cGV8fHN8fG4pJiYoaT0hMSl9cj9uPWk/by5PVVRMSU5FX0ZJTExfU0lNUExFOm8uT1VUTElORV9GSUxMOmkmJihuPW8uU0lNUExFKX19cmV0dXJue3Z2RmxhZ3M6cixtYXhWVlNpemU6aSxzeW1ib2xvZ3lUeXBlOm59fWxldCBTPW51bGw7ZnVuY3Rpb24gdyhlKXtpZihoYXMoXCJlc3JpLTJkLXVwZGF0ZS1kZWJ1Z1wiKSl7Y29uc3QgdD1FKGUsITApO2NvbnNvbGUuZGVidWcoXCJDcmVhdGVkIG5ldyBzY2hlbWFcIix0KSxjb25zb2xlLmRlYnVnKFwiU2NoZW1hIGRpZmZcIixzKFMsdCkpLFM9dH1yZXR1cm4gRShlKX1mdW5jdGlvbiBFKGUsdD0hMSl7dHJ5e2NvbnN0IHI9UihlLHQpLGk9RChlKSxzPXt9O3IubWFwKCh0PT5GKHMsZSx0KSkpO2NvbnN0IGw9bnVsbCE9ZS5zdWJ0eXBlQ29kZT9gJHtlLnN1YnR5cGVGaWVsZH0gPSAke2Uuc3VidHlwZUNvZGV9YDpudWxsLG89bihlLmRlZmluaXRpb25FeHByZXNzaW9uLGwpO3JldHVybntzb3VyY2U6e2RlZmluaXRpb25FeHByZXNzaW9uOm8sZmllbGRzOmUuZmllbGRzLm1hcCgoZT0+ZS50b0pTT04oKSkpLGdkYlZlcnNpb246ZS5nZGJWZXJzaW9uLGhpc3RvcmljTW9tZW50OmUuaGlzdG9yaWNNb21lbnQ/LmdldFRpbWUoKSxvdXRGaWVsZHM6ZS5hdmFpbGFibGVGaWVsZHMscGl4ZWxCdWZmZXI6ZS5waXhlbEJ1ZmZlcixzcGF0aWFsUmVmZXJlbmNlOmUuc3BhdGlhbFJlZmVyZW5jZS50b0pTT04oKSx0aW1lRXh0ZW50OmUudGltZUV4dGVudD8udG9KU09OKCksY3VzdG9tUGFyYW1ldGVyczplLmN1c3RvbVBhcmFtZXRlcnN9LGF0dHJpYnV0ZXM6e2ZpZWxkczp7fSxpbmRleENvdW50OjB9LHByb2Nlc3NvcnM6cix0aWxlUmVuZGVyZXI6aSx0YXJnZXRzOnN9fWNhdGNoKHIpe2lmKHIuZmllbGROYW1lPT09aClyZXR1cm4geC5lcnJvcihyKSxudWxsO3Rocm93IHJ9fWZ1bmN0aW9uIEYoZSxyLGkpe3N3aXRjaChpLnRhcmdldCl7Y2FzZVwiZmVhdHVyZVwiOnJldHVybiB2b2lkIE8oZSxWKHIpLGkpO2Nhc2VcImFnZ3JlZ2F0ZVwiOntpZighKFwiZmVhdHVyZVJlZHVjdGlvblwiaW4gcikpcmV0dXJuO2NvbnN0IG49ci5mZWF0dXJlUmVkdWN0aW9uO3N3aXRjaChuPy50eXBlKXtjYXNlXCJzZWxlY3Rpb25cIjp0aHJvdyBuZXcgdChoLFwiTWFwdmlldyBkb2VzIG5vdCBzdXBwb3J0IGBzZWxlY3Rpb25gIHJlZHVjdGlvbiB0eXBlXCIsbik7Y2FzZVwiYmlubmluZ1wiOnJldHVybiBPKGUsVihyKSxpKSx2b2lkIE4oZSxuLHIuZmllbGRzLm1hcCgoZT0+ZS50b0pTT04oKSkpLGkpO2Nhc2VcImNsdXN0ZXJcIjpyZXR1cm4gTyhlLFYociksaSksdm9pZCBMKGUsbixyLmZpZWxkcy5tYXAoKGU9PmUudG9KU09OKCkpKSxpKX19fX1mdW5jdGlvbiBJKGUsdCl7Zm9yKGNvbnN0IHIgaW4gdCl7Y29uc3QgaT10W3JdO2lmKGkudGFyZ2V0IT09ZS5uYW1lKWNvbnRpbnVlO2NvbnN0IG49ZS5hdHRyaWJ1dGVzW3JdO2lmKG4/LmNvbnRleHQpe2NvbnN0IGU9bi5jb250ZXh0O2UubWVzaD1lLm1lc2h8fGkuY29udGV4dD8ubWVzaCxlLnN0b3JhZ2U9ZS5zdG9yYWdlfHxpLmNvbnRleHQ/LnN0b3JhZ2V9ZWxzZSBlLmF0dHJpYnV0ZXNbcl09aX1yZXR1cm4gZX1mdW5jdGlvbiBWKGUpe3JldHVybltlLmZpbHRlcj8udG9KU09OKCk/P251bGwsZS5mZWF0dXJlRWZmZWN0Py5maWx0ZXI/LnRvSlNPTigpPz9udWxsXX1mdW5jdGlvbiBPKGUsdCxyKXtyZXR1cm4gZS5mZWF0dXJlfHwoZS5mZWF0dXJlPXtuYW1lOlwiZmVhdHVyZVwiLGlucHV0Olwic291cmNlXCIsZmlsdGVyczp0LGF0dHJpYnV0ZXM6e319KSxJKGUuZmVhdHVyZSxyLmF0dHJpYnV0ZXMuZmllbGRzKSxlfWZ1bmN0aW9uIHooZSxyKXtjb25zdHtvblN0YXRpc3RpY0V4cHJlc3Npb246aSxvblN0YXRpc3RpY0ZpZWxkOm4sc3RhdGlzdGljVHlwZTpzfT1lO3N3aXRjaChzKXtjYXNlXCJtaW5cIjpjYXNlXCJtYXhcIjpjYXNlXCJhdmdcIjpjYXNlXCJhdmdfYW5nbGVcIjpjYXNlXCJzdW1cIjpjYXNlXCJjb3VudFwiOnJldHVyblwiZXNyaUZpZWxkVHlwZURvdWJsZVwiO2Nhc2VcIm1vZGVcIjp7aWYoaSl7Y29uc3R7cmV0dXJuVHlwZTpyfT1pO3JldHVybiByP1wic3RyaW5nXCI9PT1yP1wiZXNyaUZpZWxkVHlwZVN0cmluZ1wiOlwiZXNyaUZpZWxkVHlwZURvdWJsZVwiOih4LmVycm9yKG5ldyB0KGgsXCJVbmFibGUgdG8gaW5mZXIgdHlwZSBvZiBhZ2dyZWdhdGVGaWVsZCB3aXRoIG9uU3RhdGlzdGljRXhwcmVzc2lvbi4gUmV0dXJuVHlwZSBpcyBub3QgZGVmaW5lZFwiLGUpKSxcImVzcmlGaWVsZFR5cGVTdHJpbmdcIil9Y29uc3Qgcz1yLmZpbmQoKGU9PmUubmFtZT09PW4pKTtyZXR1cm4gcz9zLnR5cGU6KHguZXJyb3IobmV3IHQoaCxcIlVuYWJsZSB0byBpbmZlciB0eXBlIG9mIGFnZ3JlZ2F0ZUZpZWxkIHdpdGggb25TdGF0aXN0aWNFeHByZXNzaW9uLiBSZXR1cm5UeXBlIGlzIG5vdCBkZWZpbmVkXCIsZSkpLFwiZXNyaUZpZWxkVHlwZVN0cmluZ1wiKX19fWZ1bmN0aW9uIE4oZSx0LHIsaSl7cmV0dXJuIGUuYWdncmVnYXRlfHwoZS5hZ2dyZWdhdGU9e25hbWU6XCJhZ2dyZWdhdGVcIix0eXBlOlwiYmluXCIsZmlsdGVyczpudWxsLGlucHV0OlwiZmVhdHVyZVwiLHBhcmFtczp7Zml4ZWRCaW5MZXZlbDp0LmZpeGVkQmluTGV2ZWwsZmllbGRzOih0LmZpZWxkcz8/W10pLm1hcCgoZT0+KHsuLi5lLnRvSlNPTigpLHR5cGU6eihlLHIpfSkpKX0sYXR0cmlidXRlczp7fX0pLEkoZS5hZ2dyZWdhdGUsaS5hdHRyaWJ1dGVzLmZpZWxkcyksZX1mdW5jdGlvbiBMKGUsdCxyLG4pe2NvbnN0IHM9bi5hZ2dyZWdhdGVGaWVsZHM/P1tdLGw9bmV3IFNldDtmb3IoY29uc3QgaSBvZiBzKWwuYWRkKGkubmFtZSk7Zm9yKGNvbnN0IGkgb2YgdD8uZmllbGRzPz9bXSlsLmhhcyhpLm5hbWUpfHxzLnB1c2goaSk7cmV0dXJuIGUuYWdncmVnYXRlfHwoZS5hZ2dyZWdhdGU9e25hbWU6XCJhZ2dyZWdhdGVcIix0eXBlOlwiY2x1c3RlclwiLGlucHV0OlwiZmVhdHVyZVwiLGZpbHRlcnM6bnVsbCxhdHRyaWJ1dGVzOnt9LHBhcmFtczp7Y2x1c3RlclJhZGl1czppKHQuY2x1c3RlclJhZGl1cy8yKSxjbHVzdGVyUGl4ZWxCdWZmZXI6NjQqTWF0aC5jZWlsKGkodC5jbHVzdGVyTWF4U2l6ZSkvNjQpLGZpZWxkczpzLm1hcCgoZT0+KHsuLi5lLnRvSlNPTigpLHR5cGU6eihlLHIpfSkpKX19KSxJKGUuYWdncmVnYXRlLG4uYXR0cmlidXRlcy5maWVsZHMpLGV9ZnVuY3Rpb24gTShlLHQpe3JldHVybiB0LmZpZWxkP2ooZSx7Li4udCx0eXBlOlwiZmllbGRcIixmaWVsZDp0LmZpZWxkfSk6dC52YWx1ZUV4cHJlc3Npb24/aihlLHsuLi50LHR5cGU6XCJleHByZXNzaW9uXCIsdmFsdWVFeHByZXNzaW9uOnQudmFsdWVFeHByZXNzaW9ufSk6e2ZpZWxkOnZvaWQgMCxmaWVsZEluZGV4OnZvaWQgMH19ZnVuY3Rpb24gaihlLHQpe3N3aXRjaCh0LnR5cGUpe2Nhc2VcImV4cHJlc3Npb25cIjp7Y29uc3Qgcj12KHQudmFsdWVFeHByZXNzaW9uKTtpZighZS5maWVsZHNbcl0pe2NvbnN0IGk9ZS5pbmRleENvdW50Kys7ZS5maWVsZHNbcl09ey4uLnQsbmFtZTpyLGZpZWxkSW5kZXg6aX19cmV0dXJue2ZpZWxkSW5kZXg6ZS5maWVsZHNbcl0uZmllbGRJbmRleH19Y2FzZVwibGFiZWwtZXhwcmVzc2lvblwiOntjb25zdCByPXYoSlNPTi5zdHJpbmdpZnkodC5sYWJlbCkpO2lmKCFlLmZpZWxkc1tyXSl7Y29uc3QgaT1lLmluZGV4Q291bnQrKztlLmZpZWxkc1tyXT17Li4udCxuYW1lOnIsZmllbGRJbmRleDppfX1yZXR1cm57ZmllbGRJbmRleDplLmZpZWxkc1tyXS5maWVsZEluZGV4fX1jYXNlXCJmaWVsZFwiOntjb25zdCByPXQuZmllbGQ7cmV0dXJuXCJhZ2dyZWdhdGVcIj09PXQudGFyZ2V0JiZlLmZpZWxkc1tyXXx8KGUuZmllbGRzW3JdPXsuLi50LG5hbWU6cn0pLHtmaWVsZDpyfX1jYXNlXCJzdGF0aXN0aWNcIjpyZXR1cm4gZS5maWVsZHNbdC5uYW1lXT17Li4udH0se2ZpZWxkOnQubmFtZX19fWZ1bmN0aW9uIFIoZSx0PSExKXtjb25zdCByPW5ldyBBcnJheTtsZXQgaT0wO3JldHVybiByLnB1c2goQShlLGkrKyx0KSkscn1mdW5jdGlvbiBVKGUsdCxyLGksbixzPSExKXtjb25zdCBsPWooZSx7dHlwZTpcImxhYmVsLWV4cHJlc3Npb25cIix0YXJnZXQ6cixjb250ZXh0OnttZXNoOiEwfSxyZXN1bHRUeXBlOlwic3RyaW5nXCIsbGFiZWw6e2xhYmVsRXhwcmVzc2lvbjp0LmxhYmVsRXhwcmVzc2lvbixsYWJlbEV4cHJlc3Npb25JbmZvOnQubGFiZWxFeHByZXNzaW9uSW5mbz97ZXhwcmVzc2lvbjp0LmxhYmVsRXhwcmVzc2lvbkluZm8uZXhwcmVzc2lvbn06bnVsbCxzeW1ib2w6ISF0LnN5bWJvbCx3aGVyZTp0LndoZXJlfX0pLHtmaWVsZEluZGV4Om99PWw7cmV0dXJuey4uLmYodCxuLHMpLGZpZWxkSW5kZXg6byx0YXJnZXQ6cixpbmRleDppfX1mdW5jdGlvbiBCKGUscixpKXtjb25zdCBuPVwiZmVhdHVyZVJlZHVjdGlvblwiaW4gciYmci5mZWF0dXJlUmVkdWN0aW9uO2lmKCFuKXJldHVybntmaWVsZHM6W10sbGFiZWxzOltdLG1hdGNoZXI6dm9pZCAwLHJlbmRlcmVyT3ZlcnJpZGU6dm9pZCAwfTtjb25zdCBzPVwiYWdncmVnYXRlXCIsbz1bXTtsZXQgYT1udWxsLHU9YihyLmdlb21ldHJ5VHlwZSksZD1bXSxwPW51bGw7aWYobilzd2l0Y2gobi50eXBlKXtjYXNlXCJzZWxlY3Rpb25cIjpyZXR1cm4geC5lcnJvcihuZXcgdChoLFwiTWFwdmlldyBkb2VzIG5vdCBzdXBwb3J0IGBzZWxlY3Rpb25gIHJlZHVjdGlvbiB0eXBlXCIsbikpLHtmaWVsZHM6W10sbGFiZWxzOltdLG1hdGNoZXI6dm9pZCAwLHJlbmRlcmVyT3ZlcnJpZGU6dm9pZCAwfTtjYXNlXCJjbHVzdGVyXCI6Y2FzZVwiYmlubmluZ1wiOmlmKG8ucHVzaCguLi5uLmZpZWxkcz8/W10pLFwiY2x1c3RlclwiPT09bi50eXBlP3U9XCJlc3JpR2VvbWV0cnlQb2ludFwiOlwiYmlubmluZ1wiPT09bi50eXBlJiYodT1cImVzcmlHZW9tZXRyeVBvbHlnb25cIiksbi5yZW5kZXJlciYmIW4ucmVuZGVyZXIuYXV0aG9yaW5nSW5mbz8uaXNBdXRvR2VuZXJhdGVkKXtpZihcImNsdXN0ZXJcIj09PW4udHlwZSl7Y29uc3R7cmVuZGVyZXI6ZX09bShuLnJlbmRlcmVyLG4sbnVsbCk7cD1lfWVsc2UgcD1uLnJlbmRlcmVyO2NvbnN0IHQ9VChuLnJlbmRlcmVyLG4pO2E9XyhlLHMsbi5yZW5kZXJlcix0LGkpLGQ9biYmbi5sYWJlbHNWaXNpYmxlJiZuLmxhYmVsaW5nSW5mb3x8W119ZWxzZSBpZihcImNsdXN0ZXJcIj09PW4udHlwZSl7aWYocD1nKG8sci5yZW5kZXJlcixuLG51bGwsITApLG4uc3ltYm9sKXtjb25zdCBlPVQocCxuKTthPXt0eXBlOlwic2ltcGxlXCIsc3ltYm9sOmYobi5zeW1ib2wsZSxpKSxzeW1ib2xvZ3lUeXBlOmUuc3ltYm9sb2d5VHlwZX19ZD1uJiZuLmxhYmVsc1Zpc2libGUmJm4ubGFiZWxpbmdJbmZvfHxbXX19ayhlLG8pO3JldHVybntsYWJlbHM6bChkLFwiYmlubmluZ1wiPT09bi50eXBlP1wiZXNyaUdlb21ldHJ5UG9seWdvblwiOnUpLG1hdGNoZXI6YSxmaWVsZHM6byxyZW5kZXJlck92ZXJyaWRlOnB9fWZ1bmN0aW9uIEEoZSxyLGk9ITEpe2NvbnN0IG49e2luZGV4Q291bnQ6MCxmaWVsZHM6e319LHM9XCJmZWF0dXJlUmVkdWN0aW9uXCJpbiBlP2UuZmVhdHVyZVJlZHVjdGlvbj8/dm9pZCAwOnZvaWQgMCxhPXM/XCJhZ2dyZWdhdGVcIjpcImZlYXR1cmVcIjtpZihcInN1YmxheWVyc1wiaW4gZSl7Y29uc3Qgcj17dHlwZTpcInN1YnR5cGVcIixzdWJ0eXBlRmllbGQ6ZS5zdWJ0eXBlRmllbGQscmVuZGVyZXJzOnt9LHN5bWJvbG9neVR5cGU6by5ERUZBVUxUfSxzPXt0eXBlOlwic3VidHlwZVwiLG1hcHBpbmc6e30sdGFyZ2V0OlwiZmVhdHVyZVwiLHN1YnR5cGVGaWVsZDplLnN1YnR5cGVGaWVsZH0sbD17dHlwZTpcInN1YnR5cGVcIixjbGFzc2VzOnt9fSx1PXt0eXBlOlwic3ltYm9sXCIsdGFyZ2V0OlwiZmVhdHVyZVwiLGFnZ3JlZ2F0ZUZpZWxkczpbXSxhdHRyaWJ1dGVzOm4sc3RvcmFnZTpzLG1lc2g6e21hdGNoZXI6cixhZ2dyZWdhdGVNYXRjaGVyOm51bGwsbGFiZWxzOmwsc29ydEtleTpudWxsfX0sZj1uZXcgU2V0O2xldCBwPTA7Zm9yKGNvbnN0e3JlbmRlcmVyOmMsc3VidHlwZUNvZGU6eSxsYWJlbGluZ0luZm86bSxsYWJlbHNWaXNpYmxlOmd9b2YgZS5zdWJsYXllcnMpe2xldCBlPTA7XCJ2aXN1YWxWYXJpYWJsZXNcImluIGMmJmMudmlzdWFsVmFyaWFibGVzJiYoYy52aXN1YWxWYXJpYWJsZXMuc29tZSgoZT0+XCJyb3RhdGlvblwiIT09ZS50eXBlKSkmJngud2Fybk9uY2UoXCJTdWJ0eXBlR3JvdXBMYXllciBjdXJyZW50bHkgb25seSBzdXBwb3J0cyByb3RhdGlvbiB2aXN1YWxWYXJpYWJsZXMuIEFsbCBvdGhlciB2aXN1YWxWYXJpYWJsZSB0eXBlcyB3aWxsIGJlIGlnbm9yZWQuXCIpLGU9ZChjLnZpc3VhbFZhcmlhYmxlcy5maWx0ZXIoKGU9Plwic2l6ZVwiIT09ZS50eXBlKSkpKTtjb25zdCB1PXtzeW1ib2xvZ3lUeXBlOm8uREVGQVVMVCx2dkZsYWdzOmUsbWF4VlZTaXplOjB9LGI9XyhuLGEsYyx1LGkpLHY9QyhuLGEsYyksVD1nJiZtO2lmKFwiZGljdGlvbmFyeVwiPT09Yi50eXBlKXRocm93IG5ldyB0KGgsXCJEaWN0aW9uYXJ5IHJlbmRlcmVyIGlzIG5vdCBzdXBwb3J0ZWQgaW4gc3VidHlwZSBsYXllcnNcIik7aWYoXCJzdWJ0eXBlXCI9PT1iLnR5cGUpdGhyb3cgbmV3IHQoaCxcIk5lc3RlZCBzdWJ0eXBlIHJlbmRlcmVycyBpcyBub3Qgc3VwcG9ydGVkXCIpO2lmKG51bGwhPXYmJlwic3VidHlwZVwiPT09di50eXBlKXRocm93IG5ldyB0KGgsXCJOZXN0ZWQgc3VidHlwZSBzdG9yYWdlIGlzIG5vdCBzdXBwb3J0ZWRcIik7aWYobnVsbCE9dj8uYXR0cmlidXRlTWFwcGluZyl0aHJvdyBuZXcgdChoLFwiTm9uLXZpc3VhbC12YXJpYWJsZSBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIHN1YnR5cGUgbGF5ZXJzXCIpO2lmKFwiaGVhdG1hcFwiPT09Yi50eXBlKXRocm93IG5ldyB0KGgsXCJIZWF0bWFwcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBzdWJ0eXBlIGxheWVyc1wiKTtpZihcInBpZS1jaGFydFwiPT09Yi50eXBlKXRocm93IG5ldyB0KGgsXCJQaWUtY2hhcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluIHN1YnR5cGUgbGF5ZXJzXCIpO2lmKGYuaGFzKHkpKXRocm93IG5ldyB0KGgsXCJTdWJ0eXBlIGNvZGVzIGZvciBzdWJsYXllcnMgbXVzdCBiZSB1bmlxdWVcIik7Zi5hZGQoeSksci5yZW5kZXJlcnNbeV09YixzLm1hcHBpbmdbeV09dixUJiYobC5jbGFzc2VzW3ldPVQubWFwKChlPT5VKG4sZSxcImZlYXR1cmVcIixwKyssdSxpKSkpKX1yZXR1cm4gdX1pZihcImhlYXRtYXBcIj09PWUucmVuZGVyZXI/LnR5cGUmJlwicmFzdGVyXCI9PT1jKCkpe2NvbnN0e3JhZGl1czp0LGZpZWxkT2Zmc2V0OnIsZmllbGQ6aX09ZS5yZW5kZXJlcjtyZXR1cm57dHlwZTpcImhlYXRtYXBcIixhZ2dyZWdhdGVGaWVsZHM6W10sYXR0cmlidXRlczpuLHRhcmdldDphLHN0b3JhZ2U6bnVsbCxtZXNoOntyYWRpdXM6dCxmaWVsZE9mZnNldDpyLGZpZWxkOk0obix7dGFyZ2V0OmEsZmllbGQ6aSxyZXN1bHRUeXBlOlwibnVtZXJpY1wifSkuZmllbGR9fX1jb25zdCB1PUIobixlLGkpLGY9YihlLmdlb21ldHJ5VHlwZSkscD11LnJlbmRlcmVyT3ZlcnJpZGU/P2UucmVuZGVyZXIseT1UKHAscyksbT1fKG4sYSxwLHksaSksZz1DKG4sYSxwKSx2PVAobixlLm9yZGVyQnksZS5yZW5kZXJlcixzKSxTPWUubGFiZWxzVmlzaWJsZSYmZS5sYWJlbGluZ0luZm98fFtdLHc9bChTLGYpO2xldCBFPTA7Y29uc3QgRj1bLi4udy5tYXAoKGU9PlUobixlLFwiZmVhdHVyZVwiLEUrKyx5LGkpKSksLi4udS5sYWJlbHMubWFwKChlPT5VKG4sZSxcImFnZ3JlZ2F0ZVwiLEUrKyx5LGkpKSldO3JldHVybnt0eXBlOlwic3ltYm9sXCIsdGFyZ2V0OmEsYXR0cmlidXRlczpuLGFnZ3JlZ2F0ZUZpZWxkczp1LmZpZWxkcyxzdG9yYWdlOmcsbWVzaDp7bWF0Y2hlcjptLGxhYmVsczp7dHlwZTpcInNpbXBsZVwiLGNsYXNzZXM6Rn0sYWdncmVnYXRlTWF0Y2hlcjp1Lm1hdGNoZXIsc29ydEtleTp2fX19ZnVuY3Rpb24gRChlKXtyZXR1cm5cImhlYXRtYXBcIj09PWUucmVuZGVyZXI/LnR5cGUmJlwicmFzdGVyXCI9PT1jKCk/e3R5cGU6XCJoZWF0bWFwXCJ9Ont0eXBlOlwic3ltYm9sXCJ9fWZ1bmN0aW9uIFAoZSxyLGksbil7aWYobnVsbCE9bilyZXR1cm4gbnVsbDtpZihudWxsIT1yJiZyLmxlbmd0aCl7ci5sZW5ndGg+MSYmeC53YXJuKGBMYXllciByZW5kZXJpbmcgY3VycmVudGx5IG9ubHkgc3VwcG9ydHMgb3JkZXJpbmcgYnkgMSBvcmRlckJ5SW5mbywgYnV0IGZvdW5kICR7ci5sZW5ndGh9LiBBbGwgYnV0IHRoZSBmaXJzdCB3aWxsIGJlIGRpc2NhcmRlZGApO2NvbnN0IGk9clswXSxuPVwiYXNjZW5kaW5nXCI9PT1pLm9yZGVyP1wiYXNjXCI6XCJkZXNjXCI7aWYoaS5maWVsZClyZXR1cm57ZmllbGQ6aS5maWVsZCxvcmRlcjpufTtpZihpLnZhbHVlRXhwcmVzc2lvbil7cmV0dXJue2ZpZWxkSW5kZXg6aihlLHt0eXBlOlwiZXhwcmVzc2lvblwiLHRhcmdldDpcImZlYXR1cmVcIix2YWx1ZUV4cHJlc3Npb246aS52YWx1ZUV4cHJlc3Npb24scmVzdWx0VHlwZTpcIm51bWVyaWNcIn0pLmZpZWxkSW5kZXgsb3JkZXI6bn19cmV0dXJuIHguZXJyb3IobmV3IHQoaCxcIkV4cGVjdGVkIHRvIGZpbmQgYSBmaWVsZCBvciB2YWx1ZUV4cHJlc3Npb24gZm9yIE9yZGVyQnlJbmZvXCIsaSkpLG51bGx9aWYobnVsbCE9aSYmXCJ1bmlxdWUtdmFsdWVcIj09PWkudHlwZSYmaS5vcmRlckJ5Q2xhc3Nlc0VuYWJsZWQpe3JldHVybntieVJlbmRlcmVyOiEwLG9yZGVyOlwiYXNjXCJ9fXJldHVybiBudWxsfWZ1bmN0aW9uIGsoZSx0KXtjb25zdCByPXttZXNoOiEwLHN0b3JhZ2U6ITB9O2Zvcihjb25zdCBpIG9mIHQpe2NvbnN0e25hbWU6dCxvblN0YXRpc3RpY0ZpZWxkOm4sb25TdGF0aXN0aWNFeHByZXNzaW9uOnMsc3RhdGlzdGljVHlwZTpsfT1pO2xldCBvLGE7Y29uc3QgdT1cIm51bWVyaWNcIixkPVwiZmVhdHVyZVwiO2lmKHMpe2E9aihlLHt0eXBlOlwiZXhwcmVzc2lvblwiLHRhcmdldDpkLHZhbHVlRXhwcmVzc2lvbjpzLmV4cHJlc3Npb24scmVzdWx0VHlwZTp1fSkuZmllbGRJbmRleH1lbHNle289aihlLHt0eXBlOlwiZmllbGRcIix0YXJnZXQ6ZCxmaWVsZDpufSkuZmllbGR9aihlLHt0eXBlOlwic3RhdGlzdGljXCIsdGFyZ2V0OlwiYWdncmVnYXRlXCIsbmFtZTp0LGNvbnRleHQ6cixpbkZpZWxkOm8saW5GaWVsZEluZGV4OmEsc3RhdGlzdGljVHlwZTpsfSl9fWZ1bmN0aW9uIEMoZSx0LHIpe2xldCBpO3N3aXRjaChyLnR5cGUpe2Nhc2VcInNpbXBsZVwiOmNhc2VcImNsYXNzLWJyZWFrc1wiOmNhc2VcInVuaXF1ZS12YWx1ZVwiOmNhc2VcImRpY3Rpb25hcnlcIjppPXt2aXN1YWxWYXJpYWJsZXM6ITAsYXR0cmlidXRlczpudWxsfTticmVhaztkZWZhdWx0Omk9dShyKS5nZXRTdG9yYWdlU3BlYyhyKX1yZXR1cm4gSihlLHQsaSxyKX1mdW5jdGlvbiBKKGUsdCxyLGkpe2lmKG51bGw9PXIpcmV0dXJuIG51bGw7Y29uc3R7dmlzdWFsVmFyaWFibGVzOm4sYXR0cmlidXRlczpzfT1yO2xldCBsPW51bGw7biYmXCJ2aXN1YWxWYXJpYWJsZXNcImluIGkmJihsPXEoZSx0LGkudmlzdWFsVmFyaWFibGVzKSk7Y29uc3Qgbz1udWxsIT1sPzQ6MDtsZXQgYT1udWxsO3JldHVybiBudWxsIT1zJiYoYT1zLm1hcCgoKHIsaSk9Pntjb25zdHtmaWVsZDpuLGZpZWxkSW5kZXg6c309TShlLHt2YWx1ZUV4cHJlc3Npb246ci52YWx1ZUV4cHJlc3Npb24sZmllbGQ6ci5maWVsZCxyZXN1bHRUeXBlOlwibnVtZXJpY1wiLHRhcmdldDp0fSk7cmV0dXJue2JpbmRpbmc6aStvLGZpZWxkOm4sZmllbGRJbmRleDpzfX0pKSkse3R5cGU6XCJzaW1wbGVcIix0YXJnZXQ6dCxhdHRyaWJ1dGVNYXBwaW5nOmEsdnZNYXBwaW5nOmx9fWZ1bmN0aW9uIHEodCxyLGkpe2lmKCFpPy5sZW5ndGgpcmV0dXJuW107Y29uc3Qgbj17c3RvcmFnZTohMH0scz1cIm51bWVyaWNcIjtyZXR1cm4geShpKS5tYXAoKGU9Pntjb25zdCBpPWEoZS50eXBlKSx7ZmllbGQ6bCxmaWVsZEluZGV4Om99PU0odCx7dGFyZ2V0OnIsdmFsdWVFeHByZXNzaW9uOmUudmFsdWVFeHByZXNzaW9uLGZpZWxkOmUuZmllbGQsY29udGV4dDpuLHJlc3VsdFR5cGU6c30pO3N3aXRjaChlLnR5cGUpe2Nhc2VcInNpemVcIjpyZXR1cm5cIiR2aWV3LnNjYWxlXCI9PT1lLnZhbHVlRXhwcmVzc2lvbj9udWxsOnt0eXBlOlwic2l6ZVwiLGJpbmRpbmc6aSxmaWVsZDpsLGZpZWxkSW5kZXg6byxub3JtYWxpemF0aW9uRmllbGQ6TSh0LHt0YXJnZXQ6cixmaWVsZDplLm5vcm1hbGl6YXRpb25GaWVsZCxjb250ZXh0Om4scmVzdWx0VHlwZTpzfSkuZmllbGQsdmFsdWVSZXByZXNlbnRhdGlvbjplLnZhbHVlUmVwcmVzZW50YXRpb24/P251bGx9O2Nhc2VcImNvbG9yXCI6cmV0dXJue3R5cGU6XCJjb2xvclwiLGJpbmRpbmc6aSxmaWVsZDpsLGZpZWxkSW5kZXg6byxub3JtYWxpemF0aW9uRmllbGQ6TSh0LHt0YXJnZXQ6cixmaWVsZDplLm5vcm1hbGl6YXRpb25GaWVsZCxjb250ZXh0Om4scmVzdWx0VHlwZTpzfSkuZmllbGR9O2Nhc2VcIm9wYWNpdHlcIjpyZXR1cm57dHlwZTpcIm9wYWNpdHlcIixiaW5kaW5nOmksZmllbGQ6bCxmaWVsZEluZGV4Om8sbm9ybWFsaXphdGlvbkZpZWxkOk0odCx7dGFyZ2V0OnIsZmllbGQ6ZS5ub3JtYWxpemF0aW9uRmllbGQsY29udGV4dDpuLHJlc3VsdFR5cGU6c30pLmZpZWxkfTtjYXNlXCJyb3RhdGlvblwiOnJldHVybnt0eXBlOlwicm90YXRpb25cIixiaW5kaW5nOmksZmllbGQ6bCxmaWVsZEluZGV4Om99fX0pKS5maWx0ZXIoZSl9ZnVuY3Rpb24gXyhlLHQscixpLG49ITEpe2NvbnN0IHM9ZT8/e2luZGV4Q291bnQ6MCxmaWVsZHM6e319O3N3aXRjaChyLnR5cGUpe2Nhc2VcInNpbXBsZVwiOmNhc2VcImRvdC1kZW5zaXR5XCI6cmV0dXJuIEcocyxyLGksbik7Y2FzZVwiY2xhc3MtYnJlYWtzXCI6cmV0dXJuICQocyx0LHIsaSxuKTtjYXNlXCJ1bmlxdWUtdmFsdWVcIjpyZXR1cm4gSyhzLHQscixpLG4pO2Nhc2VcImRpY3Rpb25hcnlcIjpyZXR1cm4gWShzLHIsaSxuKTtjYXNlXCJoZWF0bWFwXCI6cmV0dXJuIFEocyxyLGksbik7Y2FzZVwicGllLWNoYXJ0XCI6cmV0dXJuIEgocyxyLGksbil9fWZ1bmN0aW9uIEcoZSx0LHIsaT0hMSl7Y29uc3Qgbj10LmdldFN5bWJvbHMoKSxzPW4ubGVuZ3RoP25bMF06bnVsbDtyZXR1cm57dHlwZTpcInNpbXBsZVwiLHN5bWJvbDpmKHMscixpKSxzeW1ib2xvZ3lUeXBlOnIuc3ltYm9sb2d5VHlwZX19ZnVuY3Rpb24gSChlLHQscixpPSExKXtjb25zdCBuPXQuZ2V0U3ltYm9scygpLHM9blswXSxsPW4ubGVuZ3RoPjE/blsxXTpudWxsO3JldHVybnt0eXBlOlwicGllLWNoYXJ0XCIsbWFya2VyU3ltYm9sOmYocyxyLGkpLGZpbGxTeW1ib2w6ZihsLHIsaSksc3ltYm9sb2d5VHlwZTpyLnN5bWJvbG9neVR5cGV9fWZ1bmN0aW9uICQoZSx0LHIsaSxuPSExKXtjb25zdCBzPXttZXNoOiEwLHVzZTpcInJlbmRlcmVyLmZpZWxkXCJ9LGw9ci5iYWNrZ3JvdW5kRmlsbFN5bWJvbCx7ZmllbGQ6byxmaWVsZEluZGV4OmF9PU0oZSx7dGFyZ2V0OnQsZmllbGQ6ci5maWVsZCx2YWx1ZUV4cHJlc3Npb246ci52YWx1ZUV4cHJlc3Npb24scmVzdWx0VHlwZTpcIm51bWVyaWNcIixjb250ZXh0OnN9KSx1PXIubm9ybWFsaXphdGlvblR5cGUsZD1cImxvZ1wiPT09dT9cImVzcmlOb3JtYWxpemVCeUxvZ1wiOlwicGVyY2VudC1vZi10b3RhbFwiPT09dT9cImVzcmlOb3JtYWxpemVCeVBlcmNlbnRPZlRvdGFsXCI6XCJmaWVsZFwiPT09dT9cImVzcmlOb3JtYWxpemVCeUZpZWxkXCI6bnVsbCxwPXIuY2xhc3NCcmVha0luZm9zLm1hcCgoZT0+KHtzeW1ib2w6ZihlLnN5bWJvbCxpLG4pLG1pbjplLm1pblZhbHVlLG1heDplLm1heFZhbHVlfSkpKS5zb3J0KCgoZSx0KT0+ZS5taW4tdC5taW4pKTtyZXR1cm57dHlwZTpcImludGVydmFsXCIsYXR0cmlidXRlczplLmZpZWxkcyxmaWVsZDpvLGZpZWxkSW5kZXg6YSxiYWNrZ3JvdW5kRmlsbFN5bWJvbDpmKGwsaSxuKSxkZWZhdWx0U3ltYm9sOmYoci5kZWZhdWx0U3ltYm9sLGksbiksaW50ZXJ2YWxzOnAsbm9ybWFsaXphdGlvbkZpZWxkOnIubm9ybWFsaXphdGlvbkZpZWxkLG5vcm1hbGl6YXRpb25Ub3RhbDpyLm5vcm1hbGl6YXRpb25Ub3RhbCxub3JtYWxpemF0aW9uVHlwZTpkLGlzTWF4SW5jbHVzaXZlOnIuaXNNYXhJbmNsdXNpdmUsc3ltYm9sb2d5VHlwZTppLnN5bWJvbG9neVR5cGV9fWZ1bmN0aW9uIEsoZSxyLGksbixzPSExKXtjb25zdCBsPVtdLG89aS5iYWNrZ3JvdW5kRmlsbFN5bWJvbCxhPXt0YXJnZXQ6cixjb250ZXh0OnttZXNoOiEwfSxyZXN1bHRUeXBlOlwic3RyaW5nXCJ9O2lmKGkuZmllbGQmJlwic3RyaW5nXCIhPXR5cGVvZiBpLmZpZWxkKXRocm93IG5ldyB0KGgsXCJFeHBlY3RlZCByZW5kZXJlci5maWVsZCB0byBiZSBhIHN0cmluZ1wiLGkpO2NvbnN0e2ZpZWxkOnUsZmllbGRJbmRleDpkfT1NKGUsey4uLmEsZmllbGQ6aS5maWVsZCx2YWx1ZUV4cHJlc3Npb246aS52YWx1ZUV4cHJlc3Npb259KTtmb3IoY29uc3QgdCBvZiBpLnVuaXF1ZVZhbHVlSW5mb3M/P1tdKWwucHVzaCh7dmFsdWU6XCJcIit0LnZhbHVlLHN5bWJvbDpmKHQuc3ltYm9sLG4scyl9KTtyZXR1cm57dHlwZTpcIm1hcFwiLGF0dHJpYnV0ZXM6ZS5maWVsZHMsZmllbGQ6dSxmaWVsZEluZGV4OmQsZmllbGQyOk0oZSx7Li4uYSxmaWVsZDppLmZpZWxkMn0pLmZpZWxkLGZpZWxkMzpNKGUsey4uLmEsZmllbGQ6aS5maWVsZDN9KS5maWVsZCxmaWVsZERlbGltaXRlcjppLmZpZWxkRGVsaW1pdGVyPz92b2lkIDAsYmFja2dyb3VuZEZpbGxTeW1ib2w6ZihvLG4pLGRlZmF1bHRTeW1ib2w6ZihpLmRlZmF1bHRTeW1ib2wsbiksbWFwOmwsc3ltYm9sb2d5VHlwZTpuLnN5bWJvbG9neVR5cGV9fWZ1bmN0aW9uIFkoZSx0LHIsaT0hMSl7cmV0dXJue3R5cGU6XCJkaWN0aW9uYXJ5XCIsY29uZmlnOnQuY29uZmlnLGZpZWxkTWFwOnQuZmllbGRNYXAsc2NhbGVFeHByZXNzaW9uOnQuc2NhbGVFeHByZXNzaW9uLHVybDp0LnVybCxzeW1ib2xPcHRpb25zOnIsc3ltYm9sb2d5VHlwZTpyLnN5bWJvbG9neVR5cGV9fWZ1bmN0aW9uIFEoZSx0LHIsaT0hMSl7Y29uc3Qgbj10LmdldFN5bWJvbHMoKSxzPW4ubGVuZ3RoP25bMF06bnVsbDtyZXR1cm57dHlwZTpcImhlYXRtYXBcIixzeW1ib2w6ZihzLHIsaSksc3ltYm9sb2d5VHlwZTpyLnN5bWJvbG9neVR5cGV9fWV4cG9ydHtrIGFzIGFkZEFnZ3JlZ2F0ZUZpZWxkcyxfIGFzIGNyZWF0ZU1hdGNoZXJTY2hlbWEsTSBhcyBjcmVhdGVSZW5kZXJlckF0dHJpYnV0ZVNjaGVtYSx3IGFzIGNyZWF0ZVNjaGVtYSxmIGFzIGNyZWF0ZVN5bWJvbFNjaGVtYSxUIGFzIGNyZWF0ZVN5bWJvbFNjaGVtYU9wdGlvbnN9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtwdDJweCBhcyB0fWZyb21cIi4uLy4uLy4uLy4uLy4uL2NvcmUvc2NyZWVuVXRpbHMuanNcIjtpbXBvcnR7Q0lNU3ltYm9sSGVscGVyIGFzIGV9ZnJvbVwiLi4vLi4vLi4vLi4vLi4vc3ltYm9scy9jaW0vQ0lNU3ltYm9sSGVscGVyLmpzXCI7aW1wb3J0IHIgZnJvbVwiLi4vLi4vLi4vLi4vLi4vc3ltYm9scy9jaW0vUmVjdC5qc1wiO2ltcG9ydHthdmVyYWdlR2x5cGhNb3NhaWNJdGVtIGFzIGl9ZnJvbVwiLi4vLi4vLi4vZW5naW5lL3dlYmdsL2RlZmluaXRpb25zLmpzXCI7aW1wb3J0e2dldFRleHRTeW1ib2xTaXplIGFzIG59ZnJvbVwiLi4vLi4vZ3JhcGhpY3MvZ3JhcGhpY3NVdGlscy5qc1wiO2ltcG9ydHtleHBhbmRTeW1ib2wgYXMgc31mcm9tXCIuLi8uLi9zdXBwb3J0L2NpbVN5bWJvbFV0aWxzLmpzXCI7Y29uc3QgYT17XCJzaW1wbGUtbWFya2VyXCI6MSxcInBpY3R1cmUtbWFya2VyXCI6MSx0ZXh0OjAsXCJzaW1wbGUtbGluZVwiOjAsXCJzaW1wbGUtZmlsbFwiOjAsXCJwaWN0dXJlLWZpbGxcIjowLGNpbToxLFwid2ViLXN0eWxlXCI6MX0sbz0uNzA3O2Z1bmN0aW9uIG0odCxlKXtpZighKFwidmlzdWFsVmFyaWFibGVzXCJpbiB0KSlyZXR1cm4gMDtpZighdC5oYXNWaXN1YWxWYXJpYWJsZXMoXCJzaXplXCIpKXJldHVybiAwO2NvbnN0IHI9dC5nZXRWaXN1YWxWYXJpYWJsZXNGb3JUeXBlKFwic2l6ZVwiKTtpZighclswXSlyZXR1cm4gMDtjb25zdCBpPXJbMF07aWYoZSYmXCJjbHVzdGVyX2NvdW50XCI9PT1pLmZpZWxkJiZcImNsdXN0ZXJcIj09PWUudHlwZSlyZXR1cm4gZS5jbHVzdGVyTWF4U2l6ZTtpZihcIm91dGxpbmVcIj09PWkudGFyZ2V0KXJldHVybiAwO2lmKFwic3RvcHNcIj09PWkudHJhbnNmb3JtYXRpb25UeXBlKXJldHVybiBpLnN0b3BzLm1hcCgodD0+dC5zaXplKSkucmVkdWNlKGcsMCk7aWYoXCJjbGFtcGVkLWxpbmVhclwiPT09aS50cmFuc2Zvcm1hdGlvblR5cGUpe2xldCB0PS0xLzAsZT0tMS8wO3JldHVybiB0PVwibnVtYmVyXCI9PXR5cGVvZiBpLm1heFNpemU/aS5tYXhTaXplOmkubWF4U2l6ZS5zdG9wcy5tYXAoKHQ9PnQuc2l6ZSkpLnJlZHVjZShnLDApLGU9XCJudW1iZXJcIj09dHlwZW9mIGkubWluU2l6ZT9pLm1pblNpemU6aS5taW5TaXplLnN0b3BzLm1hcCgodD0+dC5zaXplKSkucmVkdWNlKGcsMCksTWF0aC5tYXgodCxlKX1yZXR1cm5cInJlYWwtd29ybGQtc2l6ZVwiPT09aS50cmFuc2Zvcm1hdGlvblR5cGU/MzA6dm9pZCAwfWZ1bmN0aW9uIHUodCl7cmV0dXJuIHQudHlwZSBpbiBhfWFzeW5jIGZ1bmN0aW9uIGMoZSxyLGksbixzLGEpe2lmKCFlfHxhJiZcImNsdXN0ZXJcIj09PWEudHlwZSlyZXR1cm4gMDtpZihcImhlYXRtYXBcIj09PWUudHlwZSlyZXR1cm4gTWF0aC5yb3VuZCh0KGUucmFkaXVzKSk7aWYoXCJkb3QtZGVuc2l0eVwiPT09ZS50eXBlKXJldHVybiAwO2lmKFwiZGljdGlvbmFyeVwiPT09ZS50eXBlKXJldHVyblwiZXNyaUdlb21ldHJ5UG9pbnRcIj09PXJ8fFwiZXNyaUdlb21ldHJ5TXVsdGlwb2ludFwiPT09cj8xMDA6MjAwO2NvbnN0IG89ZS5nZXRTeW1ib2xzKCksdT1tKGUpLGM9W107Zm9yKGNvbnN0IHQgb2YgbyljLnB1c2goeCh0LHUsaSxyLG4scykpO2NvbnN0IGw9YXdhaXQgUHJvbWlzZS5hbGwoYyk7cmV0dXJuIHQobC5yZWR1Y2UoZywwKSl9Y29uc3QgbD1bMCwwLDAsMF07ZnVuY3Rpb24gcCh0LGUpe3JldHVybiB0Pz9lfWZ1bmN0aW9uIGYodCxlKXtyZXR1cm4gbnVsbD09dC5vdXRsaW5lP2U6cCh0Lm91dGxpbmUud2lkdGgsZSl9Y29uc3QgeT17c2RmOiEwLGNvZGU6OTksbWV0cmljczppLm1ldHJpY3MscmVjdDpuZXcgcigwLDAsMjQsMjQpLHBhZ2U6MCx0ZXh0dXJlQmluZGluZzoyfTtmdW5jdGlvbiBoKHQpe2NvbnN0IGU9dC50ZXh0JiZ0LnRleHQubGVuZ3RoO2lmKCFlKXJldHVybntnbHlwaE1vc2FpY0l0ZW1zOlt5XX07Y29uc3Qgcj1bXTtmb3IobGV0IGk9MDtpPGU7aSsrKXIucHVzaCh7Li4ueSxjb2RlOnQudGV4dC5jaGFyQ29kZUF0KGkpfSk7cmV0dXJue2dseXBoTW9zYWljSXRlbXM6cn19YXN5bmMgZnVuY3Rpb24gZCh0LHIsaSxhLG0sdSl7aWYoXCJzaW1wbGUtbWFya2VyXCI9PT10LnR5cGUpe2NvbnN0IGU9TWF0aC5tYXgocCh0LnNpemUsMTIpLHIpO3JldHVybiBNKHQpK2Uqb31pZihcInBpY3R1cmUtbWFya2VyXCI9PT10LnR5cGUpe2NvbnN0IGU9TWF0aC5tYXgocCh0LmhlaWdodCwxMiksciksaT1wKHQud2lkdGgsMTIpKihlL3AodC5oZWlnaHQsMTIpKS8yLG49ZS8yO3JldHVybiBNKHQpK01hdGguc3FydChpKmkrbipuKX1pZihcInRleHRcIj09PXQudHlwZSl7Y29uc3QgZT1oKHQpO24obCx0LnRvSlNPTigpLGUpO2NvbnN0IHI9TWF0aC5hYnMobFswXSksaT1NYXRoLmFicyhsWzFdKSxzPWxbMl0sYT1sWzNdO3JldHVybiBNYXRoLm1heChyLGkpK01hdGgubWF4KHMsYSl9aWYoXCJzaW1wbGUtbGluZVwiPT09dC50eXBlKXtjb25zdCBlPXQsaT1NYXRoLm1heChwKGUud2lkdGgsLjc1KSxyKS8yO3JldHVybiBlLm1hcmtlcj9NYXRoLm1heCg2KmUud2lkdGgsMipyKTppfWlmKFwic2ltcGxlLWZpbGxcIj09PXQudHlwZXx8XCJwaWN0dXJlLWZpbGxcIj09PXQudHlwZSlyZXR1cm4gTWF0aC5tYXgoZih0LDApLHIpLzI7aWYoXCJjaW1cIj09PXQudHlwZSl7Y29uc3Qgbj17Z2VvbWV0cnlUeXBlOmEsZmllbGRzOm0sc3BhdGlhbFJlZmVyZW5jZTp1fSxvPXt0eXBlOlwiY2ltXCIscmVuZGVyZXJLZXk6MCxkYXRhOnQuZGF0YSxtYXhWVlNpemU6cn07YXdhaXQgcyhvLG4saSk7Y29uc3QgYz1lLmdldEVudmVsb3BlKHQuZGF0YSxudWxsLGkpO3JldHVybiBjP01hdGguc3FydChjLndpZHRoKmMud2lkdGgrYy5oZWlnaHQqYy5oZWlnaHQpOjB9cmV0dXJuXCJ3ZWItc3R5bGVcIj09PXQudHlwZT9kKGF3YWl0IHQuZmV0Y2hDSU1TeW1ib2woKSxyLGksYSxtLHUpOjB9YXN5bmMgZnVuY3Rpb24geCh0LGUscixpLG4scyl7cmV0dXJuIHUodCk/TWF0aC5taW4oYXdhaXQgZCh0LGUscixpLG4scyksNzUpOjB9ZnVuY3Rpb24gTSh0KXtjb25zdCBlPXAodC54b2Zmc2V0LDApLHI9cCh0LnlvZmZzZXQsMCk7cmV0dXJuIE1hdGguc3FydChlKmUrcipyKX1mdW5jdGlvbiBnKHQsZSl7cmV0dXJuIE1hdGgubWF4KHQsZSl9ZXhwb3J0e2MgYXMgY29tcHV0ZVB4QnVmZmVyLG0gYXMgZ2V0UHRNYXhWVlNpemV9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydCBlIGZyb21cIi4uLy4uLy4uLy4uLy4uL2NvcmUvRXJyb3IuanNcIjtpbXBvcnQgaGFzIGZyb21cIi4uLy4uLy4uLy4uLy4uL2NvcmUvaGFzLmpzXCI7aW1wb3J0IHIgZnJvbVwiLi4vLi4vLi4vLi4vLi4vY29yZS9Mb2dnZXIuanNcIjtpbXBvcnR7dG9QdCBhcyB0fWZyb21cIi4uLy4uLy4uLy4uLy4uL2NvcmUvc2NyZWVuVXRpbHMuanNcIjtpbXBvcnR7Z2V0V2ViR0xDYXBhYmlsaXRpZXMgYXMgb31mcm9tXCIuLi8uLi8uLi8uLi93ZWJnbC9jYXBhYmlsaXRpZXMuanNcIjtjb25zdCBzPTgsbD1zLTIsYT1yLmdldExvZ2dlcihcImVzcmkudmlld3MuMmQubGF5ZXJzLmZlYXR1cmVzLnN1cHBvcnQucmVuZGVyZXJVdGlsc1wiKSxuPWU9PntpZighKFwidmlzdWFsVmFyaWFibGVzXCJpbiBlKXx8IWUudmlzdWFsVmFyaWFibGVzPy5sZW5ndGgpcmV0dXJuIGU7Y29uc3Qgcj1lLmNsb25lKCksdD1yLnZpc3VhbFZhcmlhYmxlcy5tYXAoKGU9PnUoZSk/cChlKTplKSk7cmV0dXJuIHIudmlzdWFsVmFyaWFibGVzPXQscn07ZnVuY3Rpb24gaShlKXtyZXR1cm4gZS5tYXAoKGU9PnUoZSk/cChlLmNsb25lKCkpOmUpKX1mdW5jdGlvbiB1KGUpe3JldHVybihcInNpemVcIj09PWUudHlwZXx8XCJjb2xvclwiPT09ZS50eXBlfHxcIm9wYWNpdHlcIj09PWUudHlwZSkmJm51bGwhPWUuc3RvcHN9ZnVuY3Rpb24gcChlKXtyZXR1cm4gZS5zdG9wcz1tKGUudHlwZSxlLnN0b3BzPz9bXSksZX1mdW5jdGlvbiBjKGUscix0KXtyZXR1cm4oMS10KSplK3Qqcn1mdW5jdGlvbiBmKGUscil7Y29uc3RbbywuLi5zXT1yLGE9cy5wb3AoKSxuPXNbMF0udmFsdWUsaT1zW3MubGVuZ3RoLTFdLnZhbHVlLHU9KGktbikvbCxwPVtdO2ZvcihsZXQgbD1uO2w8aTtsKz11KXtsZXQgbz0wO2Zvcig7bD49c1tvXS52YWx1ZTspbysrO2NvbnN0IGE9c1tvXSxuPXJbby0xXSxpPWwtbi52YWx1ZSx1PWEudmFsdWU9PT1uLnZhbHVlPzE6aS8oYS52YWx1ZS1uLnZhbHVlKTtpZihcImNvbG9yXCI9PT1lKXtjb25zdCBlPXNbb10sdD1yW28tMV0sYT1lLmNvbG9yLmNsb25lKCk7YS5yPWModC5jb2xvci5yLGEucix1KSxhLmc9Yyh0LmNvbG9yLmcsYS5nLHUpLGEuYj1jKHQuY29sb3IuYixhLmIsdSksYS5hPWModC5jb2xvci5hLGEuYSx1KSxwLnB1c2goe3ZhbHVlOmwsY29sb3I6YSxsYWJlbDplLmxhYmVsfSl9ZWxzZSBpZihcInNpemVcIj09PWUpe2NvbnN0IGU9c1tvXSxhPXJbby0xXSxuPXQoZS5zaXplKSxpPWModChhLnNpemUpLG4sdSk7cC5wdXNoKHt2YWx1ZTpsLHNpemU6aSxsYWJlbDplLmxhYmVsfSl9ZWxzZXtjb25zdCBlPXNbb10sdD1jKHJbby0xXS5vcGFjaXR5LGUub3BhY2l0eSx1KTtwLnB1c2goe3ZhbHVlOmwsb3BhY2l0eTp0LGxhYmVsOmUubGFiZWx9KX19cmV0dXJuW28sLi4ucCxhXX1mdW5jdGlvbiBiKGUpe2NvbnN0W3IsLi4udF09ZSxvPXQucG9wKCk7Zm9yKDt0Lmxlbmd0aD5sOyl7bGV0IGU9MCxyPTA7Zm9yKGxldCBvPTE7bzx0Lmxlbmd0aDtvKyspe2NvbnN0IHM9dFtvLTFdLGw9dFtvXSxhPU1hdGguYWJzKGwudmFsdWUtcy52YWx1ZSk7YT5yJiYocj1hLGU9byl9dC5zcGxpY2UoZSwxKX1yZXR1cm5bciwuLi50LG9dfWZ1bmN0aW9uIG0oZSxyKXtyZXR1cm4gci5sZW5ndGg8PXM/cjooYS53YXJuKGBGb3VuZCAke3IubGVuZ3RofSBWaXN1YWwgVmFyaWFibGUgc3RvcHMsIGJ1dCBNYXBWaWV3IG9ubHkgc3VwcG9ydHMgJHtzfS4gRGlzcGxheWVkIHN0b3BzIHdpbGwgYmUgc2ltcGxpZmllZC5gKSxyLmxlbmd0aD4yKnM/ZihlLHIpOmIocikpfWZ1bmN0aW9uIGcoKXtpZihoYXMoXCJoZWF0bWFwLWZvcmNlLXJhc3RlclwiKSlyZXR1cm5cInJhc3RlclwiO2NvbnN0e3N1cHBvcnRzVGV4dHVyZUZsb2F0OmUsc3VwcG9ydHNUZXh0dXJlSGFsZkZsb2F0OnIsc3VwcG9ydHNDb2xvckJ1ZmZlckZsb2F0OnQsc3VwcG9ydHNDb2xvckJ1ZmZlckZsb2F0QmxlbmQ6cyxzdXBwb3J0c0NvbG9yQnVmZmVySGFsZkZsb2F0Omx9PW8oXCIyZFwiKTtyZXR1cm4gZSYmdCYmc3x8ciYmbD9cInN5bWJvbFwiOmhhcyhcImhlYXRtYXAtYWxsb3ctcmFzdGVyLWZhbGxiYWNrXCIpP1wicmFzdGVyXCI6XCJub25lXCJ9ZnVuY3Rpb24gaChyKXtpZighcilyZXR1cm4hMDtzd2l0Y2goci50eXBlKXtjYXNlXCJkb3QtZGVuc2l0eVwiOmlmKCFvKFwiMmRcIikuc3VwcG9ydHNUZXh0dXJlRmxvYXQpcmV0dXJuIGEuZXJyb3IobmV3IGUoXCJ3ZWJnbC1taXNzaW5nLWV4dGVuc2lvblwiLFwiTWlzc2luZyBXZWJHTCBleHRlbnNpb24gT0VTX1RleHR1cmVfRmxvYXQgd2hpY2ggaXMgcmVxdWlyZWQgZm9yIERvdERlbnNpdHlcIikpLCExO2JyZWFrO2Nhc2VcImhlYXRtYXBcIjp7Y29uc3Qgcj1nKCk7aWYoXCJub25lXCI9PT1yfHxcInJhc3RlclwiPT09ciYmIWhhcyhcImhlYXRtYXAtZm9yY2UtcmFzdGVyXCIpKXtjb25zdCB0PW8oXCIyZFwiKSxzPVtcInN1cHBvcnRzVGV4dHVyZUZsb2F0XCIsXCJzdXBwb3J0c1RleHR1cmVIYWxmRmxvYXRcIixcInN1cHBvcnRzQ29sb3JCdWZmZXJGbG9hdFwiLFwic3VwcG9ydHNDb2xvckJ1ZmZlckZsb2F0QmxlbmRcIixcInN1cHBvcnRzQ29sb3JCdWZmZXJIYWxmRmxvYXRcIl0uZmlsdGVyKChlPT4hdFtlXSkpLmpvaW4oXCIsIFwiKTtpZihcIm5vbmVcIj09PXIpcmV0dXJuIGEuZXJyb3JPbmNlKG5ldyBlKFwid2ViZ2wtbWlzc2luZy1leHRlbnNpb25cIixgTWlzc2luZyBXZWJHTCR7dC50eXBlfSByZXF1aXJlbWVudHMgZm9yIEhlYXRtYXA6ICR7c31gKSksITE7XCJyYXN0ZXJcIj09PXImJmEud2Fybk9uY2UoYE1pc3NpbmcgV2ViR0wke3QudHlwZX0gcmVxdWlyZW1lbnRzIGZvciBhY2NlbGVyYXRlZCBIZWF0bWFwOiAke3N9LiBGZWF0dXJlIHN1cHBvcnQgbWF5IGJlIGxpbWl0ZWQuYCl9YnJlYWt9fXJldHVybiEwfWV4cG9ydHtnIGFzIGdldFN1cHBvcnRlZEhlYXRtYXBSZW5kZXJlcixoIGFzIGlzUmVuZGVyZXJTdXBwb3J0ZWQsbiBhcyBzaW1wbGlmeVZWUmVuZGVyZXIsaSBhcyBzaW1wbGlmeVZpc3VhbFZhcmlhYmxlc307XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e2JpZGlUZXh0IGFzIGV9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9CaWRpVGV4dC5qc1wiO2ltcG9ydHtwdDJweCBhcyB0fWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvc2NyZWVuVXRpbHMuanNcIjtpbXBvcnQgbiBmcm9tXCIuLi8uLi8uLi8uLi9nZW9tZXRyeS9Qb2x5Z29uLmpzXCI7aW1wb3J0e2NyZWF0ZSBhcyBpfWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvYWFCb3VuZGluZ1JlY3QuanNcIjtpbXBvcnR7Z2V0SW5mbyBhcyByfWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvc3BhdGlhbFJlZmVyZW5jZVV0aWxzLmpzXCI7aW1wb3J0e2dldFhBbmNob3JEaXJlY3Rpb24gYXMgbyxnZXRZQW5jaG9yRGlyZWN0aW9uIGFzIHN9ZnJvbVwiLi4vLi4vZW5naW5lL3dlYmdsL2FsaWdubWVudFV0aWxzLmpzXCI7aW1wb3J0e2dseXBoU2l6ZSBhcyBsLG1hZ2ljTGFiZWxMaW5lSGVpZ2h0IGFzIGF9ZnJvbVwiLi4vLi4vZW5naW5lL3dlYmdsL2RlZmluaXRpb25zLmpzXCI7aW1wb3J0e3NoYXBlR2x5cGhzIGFzIG19ZnJvbVwiLi4vLi4vZW5naW5lL3dlYmdsL21lc2gvdGVtcGxhdGVzL3NoYXBpbmdVdGlscy5qc1wiO2NvbnN0IGM9NTEyLGY9NTA7ZnVuY3Rpb24gZyhlLHQpe2NvbnN0IG49cih0KTtpZighbilyZXR1cm4gbnVsbDtjb25zdFtvLHNdPW4udmFsaWQ7cmV0dXJuIGVbMl0+cz9baShbZVswXSxlWzFdLHMsZVszXV0pLGkoW28sZVsxXSxvK2VbMl0tcyxlWzNdXSldOmVbMF08bz9baShbbyxlWzFdLGVbMl0sZVszXV0pLGkoW3MtKG8tZVswXSksZVsxXSxzLGVbM11dKV06bnVsbH1mdW5jdGlvbiB1KGUpe3JldHVyblwidGV4dFwiPT09ZXx8XCJlc3JpVFNcIj09PWV9ZnVuY3Rpb24gcChlKXtyZXR1cm5cInNpbXBsZS1tYXJrZXJcIj09PWV8fFwicGljdHVyZS1tYXJrZXJcIj09PWV8fFwiZXNyaVNNU1wiPT09ZXx8XCJlc3JpUE1TXCI9PT1lfWZ1bmN0aW9uIGgoZSl7c3dpdGNoKGUuZ2VvbWV0cnkudHlwZSl7Y2FzZVwicG9pbnRcIjpjYXNlXCJtdWx0aXBvaW50XCI6cmV0dXJuIDA7Y2FzZVwicG9seWxpbmVcIjpyZXR1cm4gMTtjYXNlXCJwb2x5Z29uXCI6Y2FzZVwiZXh0ZW50XCI6cmV0dXJuIDJ9cmV0dXJuIDB9ZnVuY3Rpb24gZChuLGkscil7aWYoIXI/LmdseXBoTW9zYWljSXRlbXM/Lmxlbmd0aClyZXR1cm4gbjtjb25zdCBjPWUoaS50ZXh0KVsxXSxmPXIuZ2x5cGhNb3NhaWNJdGVtcyxnPW0oZixjLHtzY2FsZTp0KGkuZm9udC5zaXplKS9sLGFuZ2xlOmkuYW5nbGU/PzAseE9mZnNldDppLnhvZmZzZXQ/PzAseU9mZnNldDppLnlvZmZzZXQ/PzAsaEFsaWduOm8oaS5ob3Jpem9udGFsQWxpZ25tZW50fHxcImNlbnRlclwiKSx2QWxpZ246cyhpLnZlcnRpY2FsQWxpZ25tZW50fHxcImJhc2VsaW5lXCIpLG1heExpbmVXaWR0aDpNYXRoLm1heCgzMixNYXRoLm1pbihpLmxpbmVXaWR0aHx8NTEyLDUxMikpLGxpbmVIZWlnaHQ6YSpNYXRoLm1heCguMjUsTWF0aC5taW4oaS5saW5lSGVpZ2h0fHwxLDQpKSxkZWNvcmF0aW9uOmkuZm9udC5kZWNvcmF0aW9ufHxcIm5vbmVcIixpc0NJTTohMSxoYXNCYWNrZ3JvdW5kOiEhaS5iYWNrZ3JvdW5kQ29sb3IsYm9yZGVyTGluZVNpemU6aS5ib3JkZXJMaW5lU2l6ZX0pLmJvdW5kcztyZXR1cm4gblswXT10KGcueC1nLmhhbGZXaWR0aCksblsxXT10KGcueS1nLmhhbGZIZWlnaHQpLG5bMl09dChnLndpZHRoKSxuWzNdPXQoZy5oZWlnaHQpLG59ZnVuY3Rpb24geChlKXtpZighZSlyZXR1cm4gbnVsbDtjb25zdHt4bWluOnQseW1pbjppLHhtYXg6cix5bWF4Om8sc3BhdGlhbFJlZmVyZW5jZTpzfT1lO3JldHVybiBuZXcgbih7cmluZ3M6W1tbdCxpXSxbdCxvXSxbcixvXSxbcixpXSxbdCxpXV1dLHNwYXRpYWxSZWZlcmVuY2U6c30pfWV4cG9ydHtkIGFzIGdldFRleHRTeW1ib2xTaXplLGggYXMgZ3JhcGhpY0dlb21ldHJ5VG9OdW1iZXIsZyBhcyBpbnRlcnNlY3RpbmdJbnRlcm5hdGlvbmFsRGF0ZWxpbmUscCBhcyBpc01hcmtlclN5bWJvbCx1IGFzIGlzVGV4dFN5bWJvbCxmIGFzIHBpeGVsQnVmZmVyLHggYXMgcG9seWdvbkZyb21FeHRlbnQsYyBhcyB0aWxlU2l6ZX07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e0NJTUFuYWx5emVyIGFzIGV9ZnJvbVwiLi4vLi4vLi4vLi4vc3ltYm9scy9jaW0vY2ltQW5hbHl6ZXIuanNcIjtpbXBvcnR7RXhwYW5kZWRDSU0gYXMgdH1mcm9tXCIuLi8uLi8uLi8uLi9zeW1ib2xzL2NpbS9FeHBhbmRlZENJTS5qc1wiO2NvbnN0IGE9YXN5bmMoYSxpLHIpPT57Y29uc3Qgbj1uZXcgZShyLGkpO3JldHVybiBuZXcgdChhd2FpdCBuLmFuYWx5emVTeW1ib2xSZWZlcmVuY2UoYS5kYXRhLCExKSxhLmRhdGEsYS5yZW5kZXJlcktleSxhLm1heFZWU2l6ZSl9O2FzeW5jIGZ1bmN0aW9uIGkoZSx0LGkscil7aWYoIWUpcmV0dXJuIG51bGw7aWYoXCJjaW1cIj09PWUudHlwZSlyZXR1cm4gYShlLHQsaSk7aWYoXCJ3ZWItc3R5bGVcIj09PWUudHlwZSl7Y29uc3R7ZmV0Y2hDSU1TeW1ib2xSZWZlcmVuY2U6bn09YXdhaXQgaW1wb3J0KFwiLi93ZWJTdHlsZVV0aWxzLmpzXCIpLGw9e3R5cGU6XCJjaW1cIixkYXRhOmF3YWl0IG4oZSxudWxsLHIpPz92b2lkIDAscmVuZGVyZXJLZXk6ZS5yZW5kZXJlcktleSxtYXhWVlNpemU6ZS5tYXhWVlNpemV9O3JldHVybiBhKGwsdCxpKX1yZXR1cm4gZX1mdW5jdGlvbiByKGUpe2lmKCFlKXJldHVybiBudWxsO2NvbnN0e2F2b2lkU0RGUmFzdGVyaXphdGlvbjp0LHR5cGU6YSxjaW06aSx1cmw6cixtYXRlcmlhbEhhc2g6bixtYXhWVlNpemU6bH09ZSxtPXtjaW06aSx0eXBlOmEsbW9zYWljSGFzaDpuLHVybDpyLHNpemU6bnVsbCxkYXNoVGVtcGxhdGU6bnVsbCxwYXRoOm51bGwsdGV4dDpudWxsLGZvbnROYW1lOm51bGwsYW5pbWF0ZWRTeW1ib2xQcm9wZXJ0aWVzOm51bGwsYXZvaWRTREZSYXN0ZXJpemF0aW9uOnR9O3N3aXRjaChhKXtjYXNlXCJtYXJrZXJcIjpsJiZcInNpemVcImluIGkmJihpLnNpemU9TWF0aC5tYXgobCxpLnNpemUpKSxtLnNpemU9ZS5zaXplLG0ucGF0aD1lLnBhdGgsbS5hbmltYXRlZFN5bWJvbFByb3BlcnRpZXM9ZS5hbmltYXRlZFN5bWJvbFByb3BlcnRpZXM7YnJlYWs7Y2FzZVwibGluZVwiOm0uZGFzaFRlbXBsYXRlPWUuZGFzaFRlbXBsYXRlO2JyZWFrO2Nhc2VcInRleHRcIjptLnRleHQ9ZS50ZXh0LG0uZm9udE5hbWU9ZS5mb250TmFtZX1yZXR1cm4gbX1leHBvcnR7ciBhcyBjaW1MYXllclRvUmFzdGVyaXphdGlvbkluZm8saSBhcyBleHBhbmRTeW1ib2x9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtKU09OTWFwIGFzIHR9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9qc29uTWFwLmpzXCI7Y29uc3Qgbz1uZXcgdCh7ZXNyaUdlb21ldHJ5UG9pbnQ6XCJwb2ludFwiLGVzcmlHZW9tZXRyeU11bHRpcG9pbnQ6XCJtdWx0aXBvaW50XCIsZXNyaUdlb21ldHJ5UG9seWxpbmU6XCJwb2x5bGluZVwiLGVzcmlHZW9tZXRyeVBvbHlnb246XCJwb2x5Z29uXCIsZXNyaUdlb21ldHJ5TXVsdGlQYXRjaDpcIm11bHRpcGF0Y2hcIixtZXNoOlwibWVzaFwifSk7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gby50b0pTT04odCl9ZnVuY3Rpb24gbih0LG8sZSl7Y29uc3Qgbj1bXSxyPVtdO2xldCBsPTAsaT0wO2Zvcihjb25zdCBzIG9mIHQpe2NvbnN0IHQ9aTtsZXQgdT1zWzBdWzBdLGM9c1swXVsxXTtuW2krK109dSxuW2krK109YztsZXQgcD0wO2ZvcihsZXQgbz0xO288cy5sZW5ndGg7KytvKXtjb25zdCB0PXUsZT1jO3U9c1tvXVswXSxjPXNbb11bMV0scCs9Yyp0LXUqZSxuW2krK109dSxuW2krK109Y31vKHAvMikscD4wPyh0LWw+MCYmKGUobCx0LG4sciksbD10KSxyLmxlbmd0aD0wKTpwPDAmJnQtbD4wP3IucHVzaCguNSoodC1sKSk6aT10fWktbD4wJiZlKGwsaSxuLHIpfWZ1bmN0aW9uIHIodCl7Y29uc3R7YmFuZENvdW50Om8sYXR0cmlidXRlVGFibGU6ZSxjb2xvcm1hcDpuLHBpeGVsVHlwZTpyfT10LnJhc3Rlci5yYXN0ZXJJbmZvO3JldHVybiAxPT09byYmKG51bGwhPWV8fG51bGwhPW58fFwidThcIj09PXJ8fFwiczhcIj09PXIpfWV4cG9ydHtuIGFzIGFuYWx5emVSaW5ncyxyIGFzIGNhblVzZU1ham9yaXR5SW50ZXJwb2xhdGlvbk9uRGF0YVNvdXJjZSxlIGFzIHRvSlNPTkdlb21ldHJ5VHlwZX07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=