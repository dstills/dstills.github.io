"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_arcgis_core_layers_graphics_sources_geojson_GeoJSONSourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Q)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ "./node_modules/@arcgis/core/core/asyncUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _geojson_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geojson.js */ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js");
/* harmony import */ var _support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../support/clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../support/sourceUtils.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../support/fieldType.js */ "./node_modules/@arcgis/core/layers/support/fieldType.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../time/timeZoneUtils.js */ "./node_modules/@arcgis/core/time/timeZoneUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const D={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class Q{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[],[r]=await Promise.all([e.url?this._fetch(t?.signal):null,this._checkProjection(e.spatialReference)]),n=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.inferLayerProperties)(r,{geometryType:e.geometryType}),o=e.fields||n.fields||[],l=null!=e.hasZ?e.hasZ:n.hasZ,u=n.geometryType;let d=e.objectIdField||n.objectIdFieldName||"__OBJECTID";const p=e.spatialReference||_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84;let c=e.timeInfo;o===n.fields&&n.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:n.unknownFields}});const y=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](o);let h=y.get(d);h?("esriFieldTypeString"!==h.type&&(h.type="esriFieldTypeOID"),h.editable=!1,h.nullable=!1,d=h.name):(h={alias:d,name:d,type:"string"===n.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(h));const _={};for(const a of o){if(null==a.name&&(a.name=a.alias),null==a.alias&&(a.alias=a.name),!a.name)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-name","field name is missing",{field:a});if(!_support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__.kebabDict.jsonValues.includes(a.type))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-type",`invalid type for field "${a.name}"`,{field:a});if(a.name!==h.name){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__.getFieldDefaultValue)(a);void 0!==e&&(_[a.name]=e)}null==a.length&&(a.length=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__.getFieldDefaultLength)(a))}if(c){if(c.startTimeField){const e=y.get(c.startTimeField);e?(c.startTimeField=e.name,e.type="esriFieldTypeDate"):c.startTimeField=null}if(c.endTimeField){const e=y.get(c.endTimeField);e?(c.endTimeField=e.name,e.type="esriFieldTypeDate"):c.endTimeField=null}if(c.trackIdField){const e=y.get(c.trackIdField);e?c.trackIdField=e.name:(c.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:c}}))}c.startTimeField||c.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:c}}),c=null)}const F=u?(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDrawingInfo)(u):void 0,b=y.dateFields.length?{timeZoneIANA:_time_timeZoneUtils_js__WEBPACK_IMPORTED_MODULE_17__.utc}:null,T={warnings:i,featureErrors:[],layerDefinition:{...D,drawingInfo:F??void 0,templates:(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultTemplate)(_),extent:void 0,geometryType:u,objectIdField:d,fields:o,hasZ:!!l,timeInfo:c,dateFieldsTimeReference:b}};this._queryEngine=new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__.QueryEngine({fieldsIndex:_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"].fromLayerJSON({fields:o,timeInfo:c,dateFieldsTimeReference:b}),geometryType:u,hasM:!1,hasZ:l,objectIdField:d,spatialReference:p,timeInfo:c,featureStore:new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__["default"]({geometryType:u,hasM:!1,hasZ:l}),cacheSpatialQueries:!0});const w=this._queryEngine.fieldsIndex.requiredFields.indexOf(h);w>-1&&this._queryEngine.fieldsIndex.requiredFields.splice(w,1),this._createDefaultAttributes=(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultAttributesFunction)(_,d);const q=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,q);const x=this._normalizeFeatures(q,T.featureErrors);this._queryEngine.featureStore.addMany(x);const{fullExtent:Q,timeExtent:v}=await this._queryEngine.fetchRecomputedExtents();if(T.layerDefinition.extent=Q,v){const{start:e,end:t}=v;T.layerDefinition.timeInfo.timeExtent=[e,t]}return T}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.loadGeometryEngineForSimplify)(t,s),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.adds,t),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__.createTask)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)||_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.layers.GeoJSONLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.createOptimizedFeatures)(e,{geometryType:t,hasZ:s,objectIdField:i});if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.equals)(this._queryEngine.spatialReference,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84))for(const n of r)null!=n.geometry&&(n.geometry=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromGeometry)((0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToGeometry)(n.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(s,{responseType:"json",query:{...i},signal:t})).data;return (0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.validateGeoJSON)(r),r}_normalizeFeatures(e,t){const{objectIdField:s,fieldsIndex:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(i,e,n.attributes,!0);a?t?.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[s],r.push(n))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(r,t),s?.length&&this._applyUpdateEdits(r,s),i?.length){for(const e of i)r.deleteResults.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:a,objectIdField:o,spatialReference:l,featureStore:u,fieldsIndex:p}=this._queryEngine,c=[];for(const d of t){if(d.geometry&&i!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(d.geometry)){s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(p,t,d.attributes);if(r)s.push(r);else{if(this._assignObjectId(t,d.attributes),d.attributes=t,null!=d.uid){const t=d.attributes[o];e.uidToObjectId[d.uid]=t}if(null!=d.geometry){const e=d.geometry.spatialReference??l;d.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(d.geometry,e),e,l)}c.push(d),s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(d.attributes[o]))}}u.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeatures)([],c,i,a,r,o))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:a,spatialReference:o,featureStore:l,fieldsIndex:u}=this._queryEngine;for(const d of t){const{attributes:t,geometry:m}=d,y=t?.[a];if(null==y){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Identifier field ${a} missing`));continue}if(!l.has(y)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Feature with object id ${y} missing`));continue}const f=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToFeature)(l.getFeature(y),s,r,i);if(null!=m){if(s!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(m)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=m.spatialReference??o;f.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(m,t),t,o)}if(t){const s=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(u,f.attributes,t);if(s){e.push(s);continue}}l.add((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeature)(f,s,r,i,a)),e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(y))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,e)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer","Projection not supported")}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOptimizedFeatures: () => (/* binding */ N),
/* harmony export */   getGeometryType: () => (/* binding */ u),
/* harmony export */   inferLayerProperties: () => (/* binding */ I),
/* harmony export */   validateGeoJSON: () => (/* binding */ E)
/* harmony export */ });
/* harmony import */ var _core_date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/date.js */ "./node_modules/@arcgis/core/core/date.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const c={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return c[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*f(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function*p(e,t={}){const{geometryType:n,objectIdField:i}=t;for(const s of e){const{geometry:e,properties:c,id:l}=s;if(e&&u(e.type)!==n)continue;const f=c||{};let p;i&&(p=f[i],null==l||p||(f[i]=p=l));const a=new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_3__.OptimizedFeature(e?h(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_4__["default"],e,t):null,f,null,p??void 0);yield a}}function a(e){for(const t of e)if(t.length>2)return!0;return!1}function y(e){return!g(e)}function d(e){return g(e)}function g(e){let t=0;for(let n=0;n<e.length;n++){const o=e[n],r=e[(n+1)%e.length];t+=o[0]*r[1]-r[0]*o[1]}return t<=0}function m(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function h(e,t,n){switch(t.type){case"LineString":return w(e,t,n);case"MultiLineString":return P(e,t,n);case"MultiPoint":return j(e,t,n);case"MultiPolygon":return b(e,t,n);case"Point":return S(e,t,n);case"Polygon":return F(e,t,n)}}function w(e,t,n){return M(e,t.coordinates,n),e}function P(e,t,n){for(const o of t.coordinates)M(e,o,n);return e}function j(e,t,n){return M(e,t.coordinates,n),e}function b(e,t,n){for(const o of t.coordinates){G(e,o[0],n);for(let t=1;t<o.length;t++)k(e,o[t],n)}return e}function S(e,t,n){return O(e,t.coordinates,n),e}function F(e,t,n){const o=t.coordinates;G(e,o[0],n);for(let r=1;r<o.length;r++)k(e,o[r],n);return e}function G(e,t,n){const o=m(t);y(o)?T(e,o,n):M(e,o,n)}function k(e,t,n){const o=m(t);d(o)?T(e,o,n):M(e,o,n)}function M(e,t,n){for(const o of t)O(e,o,n);e.lengths.push(t.length)}function T(e,t,n){for(let o=t.length-1;o>=0;o--)O(e,t[o],n);e.lengths.push(t.length)}function O(e,t,n){const[o,r,i]=t;e.coords.push(o,r),n.hasZ&&e.coords.push(i||0)}function L(t){switch(typeof t){case"string":return (0,_core_date_js__WEBPACK_IMPORTED_MODULE_0__.isISO8601Date)(t)?"esriFieldTypeDate":"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function E(e,o=4326){if(!e)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:r}=e;if(!r)return;const i="string"==typeof r?r:"name"===r.type?r.properties.name:"EPSG"===r.type?r.properties.code:null,s=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_2__.isWGS84)({wkid:o})?new RegExp(".*(CRS84H?|4326)$","i"):new RegExp(`.*(${o})$`,"i");if(!i||!s.test(i))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("geojson:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:r})}function I(e,t={}){const n=[],o=new Set,r=new Set;let c,p=!1,y=null,d=!1,{geometryType:g=null}=t,m=!1;for(const s of l(e)){const{geometry:e,properties:t,id:l}=s;if(!e||(g||(g=u(e.type)),u(e.type)===g)){if(!p){p=a(f(e))}if(d||(d=null!=l,d&&(c=typeof l,t&&(y=Object.keys(t).filter((e=>t[e]===l))))),t&&y&&d&&null!=l&&(y.length>1?y=y.filter((e=>t[e]===l)):1===y.length&&(y=t[y[0]]===l?y:[])),!m&&t){let e=!0;for(const s in t){if(o.has(s))continue;const c=t[s];if(null==c){e=!1,r.add(s);continue}const u=L(c);if("unknown"===u){r.add(s);continue}r.delete(s),o.add(s);const l=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.normalizeFieldName)(s);l&&n.push({name:l,alias:s,type:u})}m=e}}}const h=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.normalizeFieldName)(1===y?.length&&y[0]||null)??void 0;if(h)for(const i of n)if(i.name===h&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_5__.isNumericField)(i)){i.type="esriFieldTypeOID";break}return{fields:n,geometryType:g,hasZ:p,objectIdFieldName:h,objectIdFieldType:c,unknownFields:Array.from(r)}}function N(e,t){return Array.from(p(l(e),t))}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfYXJjZ2lzX2NvcmVfbGF5ZXJzX2dyYXBoaWNzX3NvdXJjZXNfZ2VvanNvbl9HZW9KU09OU291cmNlV29ya2VyX2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDaTVDLFNBQVMsa01BQWtNLHdZQUF3WSxRQUFRLGNBQWMsd0RBQXdELDZCQUE2QixnQ0FBZ0MsVUFBVSxrRkFBa0YsaUJBQWlCLEVBQUUsbUJBQW1CLCtDQUErQyxrSEFBa0gsa0VBQUMsSUFBSSw0QkFBNEIseUVBQXlFLHlEQUF5RCw0QkFBNEIsNkVBQUMsQ0FBQyxpQkFBaUIsZ0RBQWdELHNJQUFzSSwrQkFBK0IsRUFBRSxZQUFZLGdFQUFDLElBQUksZUFBZSx5R0FBeUcsb0hBQW9ILGVBQWUsV0FBVyxrQkFBa0Isb0ZBQW9GLHNEQUFDLDZEQUE2RCxRQUFRLEVBQUUsSUFBSSw2REFBQyx1Q0FBdUMsc0RBQUMsK0RBQStELE9BQU8sSUFBSSxRQUFRLEVBQUUsb0JBQW9CLFFBQVEsNkVBQUMsSUFBSSwwQkFBMEIsMEJBQTBCLDhFQUFDLEtBQUssTUFBTSxxQkFBcUIsZ0NBQWdDLDZFQUE2RSxtQkFBbUIsOEJBQThCLHlFQUF5RSxtQkFBbUIsOEJBQThCLHFEQUFxRCw4RkFBOEYsWUFBWSxHQUFHLDJDQUEyQyxxR0FBcUcsWUFBWSxVQUFVLFVBQVUsa0ZBQUMsa0NBQWtDLGFBQWEsd0RBQUMsQ0FBQyxTQUFTLDZDQUE2QyxxQ0FBcUMsc0ZBQUMsMEdBQTBHLHNCQUFzQiw4REFBQyxFQUFFLFlBQVksZ0VBQUMsZ0JBQWdCLDhDQUE4QywrRkFBK0YsNkRBQUMsRUFBRSw4QkFBOEIseUJBQXlCLEVBQUUsZ0VBQWdFLDZGQUE2RixnR0FBQyxNQUFNLHNDQUFzQywyRUFBMkUsbURBQW1ELDBDQUEwQyxNQUFNLDBCQUEwQixrREFBa0QsaUNBQWlDLE1BQU0sY0FBYyxHQUFHLDRD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NEJBQTRCLCtCQUErQixrQkFBa0IsOEJBQThCLGtCQUFrQixzQ0FBc0MsU0FBUyxrQkFBa0IsOEJBQThCLGtCQUFrQiw4QkFBOEIsWUFBWSxZQUFZLFdBQVcsZ0JBQWdCLFNBQVMsa0JBQWtCLDhCQUE4QixrQkFBa0Isc0JBQXNCLFlBQVksWUFBWSxXQUFXLGdCQUFnQixTQUFTLGtCQUFrQixhQUFhLHVCQUF1QixrQkFBa0IsYUFBYSx1QkFBdUIsa0JBQWtCLDBCQUEwQix5QkFBeUIsa0JBQWtCLHFCQUFxQixLQUFLLGdCQUFnQix5QkFBeUIsa0JBQWtCLGVBQWUsK0NBQStDLGNBQWMsaUJBQWlCLG9CQUFvQiw0REFBQyw4Q0FBOEMseUNBQXlDLHlCQUF5QixxQkFBcUIsZ0JBQWdCLHNEQUFDLGdEQUFnRCw4REFBOEQsc0RBQUMsNEZBQTRGLE9BQU8sRUFBRSxNQUFNLE1BQU0sR0FBRyxhQUFhLHdHQUF3RyxtRkFBQyxFQUFFLE9BQU8sdURBQXVELEVBQUUsU0FBUyw0QkFBNEIsc0RBQUMsK0RBQStELE1BQU0sRUFBRSxpQkFBaUIsRUFBRSwrQkFBK0Isd0JBQXdCLG9CQUFvQixRQUFRLHFCQUFxQixNQUFNLDZCQUE2QixHQUFHLHlDQUF5QyxPQUFPLFVBQVUsaUxBQWlMLFNBQVMsa0JBQWtCLHFCQUFxQixhQUFhLFlBQVksY0FBYyxTQUFTLGFBQWEsa0JBQWtCLFNBQVMsU0FBUyxxQkFBcUIsUUFBUSwwRUFBQyxJQUFJLFdBQVcsc0JBQXNCLEVBQUUsTUFBTSxRQUFRLDBFQUFDLG9DQUFvQyxxQ0FBcUMsc0VBQUMsS0FBSywwQkFBMEIsTUFBTSxPQUFPLG9HQUFvRyxnQkFBZ0IsNkJBQXNJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvbGF5ZXJzL2dyYXBoaWNzL3NvdXJjZXMvZ2VvanNvbi9HZW9KU09OU291cmNlV29ya2VyLmpzIiwid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9ncmFwaGljcy9zb3VyY2VzL2dlb2pzb24vZ2VvanNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0IGUgZnJvbVwiLi4vLi4vLi4vLi4vcmVxdWVzdC5qc1wiO2ltcG9ydHtjcmVhdGVUYXNrIGFzIHR9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9hc3luY1V0aWxzLmpzXCI7aW1wb3J0IHMgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9FcnJvci5qc1wiO2ltcG9ydCBpIGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvTG9nZ2VyLmpzXCI7aW1wb3J0e2lzQWJvcnRFcnJvciBhcyByfWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvcHJvbWlzZVV0aWxzLmpzXCI7aW1wb3J0e2dldEpzb25UeXBlIGFzIG59ZnJvbVwiLi4vLi4vLi4vLi4vZ2VvbWV0cnkvc3VwcG9ydC9qc29uVXRpbHMuanNcIjtpbXBvcnR7V0dTODQgYXMgYSxlcXVhbHMgYXMgb31mcm9tXCIuLi8uLi8uLi8uLi9nZW9tZXRyeS9zdXBwb3J0L3NwYXRpYWxSZWZlcmVuY2VVdGlscy5qc1wiO2ltcG9ydHtjb252ZXJ0RnJvbUdlb21ldHJ5IGFzIGwsY29udmVydFRvR2VvbWV0cnkgYXMgdSxjb252ZXJ0RnJvbUZlYXR1cmVzIGFzIGQsY29udmVydFRvRmVhdHVyZSBhcyBwLGNvbnZlcnRGcm9tRmVhdHVyZSBhcyBjfWZyb21cIi4uLy4uL2ZlYXR1cmVDb252ZXJzaW9uVXRpbHMuanNcIjtpbXBvcnQgbSBmcm9tXCIuLi8uLi9kYXRhL0ZlYXR1cmVTdG9yZS5qc1wiO2ltcG9ydHtjaGVja1Byb2plY3Rpb25TdXBwb3J0IGFzIHkscHJvamVjdCBhcyBofWZyb21cIi4uLy4uL2RhdGEvcHJvamVjdGlvblN1cHBvcnQuanNcIjtpbXBvcnR7UXVlcnlFbmdpbmUgYXMgZn1mcm9tXCIuLi8uLi9kYXRhL1F1ZXJ5RW5naW5lLmpzXCI7aW1wb3J0e2luZmVyTGF5ZXJQcm9wZXJ0aWVzIGFzIGcsY3JlYXRlT3B0aW1pemVkRmVhdHVyZXMgYXMgXyx2YWxpZGF0ZUdlb0pTT04gYXMgRn1mcm9tXCIuL2dlb2pzb24uanNcIjtpbXBvcnR7Y3JlYXRlRHJhd2luZ0luZm8gYXMgSSxjcmVhdGVEZWZhdWx0VGVtcGxhdGUgYXMgaixjcmVhdGVEZWZhdWx0QXR0cmlidXRlc0Z1bmN0aW9uIGFzIEV9ZnJvbVwiLi4vc3VwcG9ydC9jbGllbnRTaWRlRGVmYXVsdHMuanNcIjtpbXBvcnR7bG9hZEdlb21ldHJ5RW5naW5lRm9yU2ltcGxpZnkgYXMgYixtaXhBdHRyaWJ1dGVzIGFzIFQsY3JlYXRlRmVhdHVyZUVkaXRTdWNjZXNzUmVzdWx0IGFzIHcsY3JlYXRlRmVhdHVyZUVkaXRFcnJvclJlc3VsdCBhcyBxLHNpbXBsaWZ5IGFzIHh9ZnJvbVwiLi4vc3VwcG9ydC9zb3VyY2VVdGlscy5qc1wiO2ltcG9ydCBTIGZyb21cIi4uLy4uLy4uL3N1cHBvcnQvRmllbGRzSW5kZXguanNcIjtpbXBvcnR7a2ViYWJEaWN0IGFzIFJ9ZnJvbVwiLi4vLi4vLi4vc3VwcG9ydC9maWVsZFR5cGUuanNcIjtpbXBvcnR7Z2V0RmllbGREZWZhdWx0VmFsdWUgYXMgTyxnZXRGaWVsZERlZmF1bHRMZW5ndGggYXMga31mcm9tXCIuLi8uLi8uLi9zdXBwb3J0L2ZpZWxkVXRpbHMuanNcIjtpbXBvcnR7dXRjIGFzIEN9ZnJvbVwiLi4vLi4vLi4vLi4vdGltZS90aW1lWm9uZVV0aWxzLmpzXCI7Y29uc3QgRD17aGFzQXR0YWNobWVudHM6ITEsY2FwYWJpbGl0aWVzOlwicXVlcnksIGVkaXRpbmcsIGNyZWF0ZSwgZGVsZXRlLCB1cGRhdGVcIix1c2VTdGFuZGFyZGl6ZWRRdWVyaWVzOiEwLHN1cHBvcnRzQ29vcmRpbmF0ZXNRdWFudGl6YXRpb246ITAsc3VwcG9ydHNSZXR1cm5pbmdRdWVyeUdlb21ldHJ5OiEwLGFkdmFuY2VkUXVlcnlDYXBhYmlsaXRpZXM6e3N1cHBvcnRzUXVlcnlBdHRhY2htZW50czohMSxzdXBwb3J0c1N0YXRpc3RpY3M6ITAsc3VwcG9ydHNQZXJjZW50aWxlU3RhdGlzdGljczohMCxzdXBwb3J0c1JldHVybmluZ0dlb21ldHJ5Q2VudHJvaWQ6ITAsc3VwcG9ydHNRdWVyeVdpdGhEaXN0YW5jZTohMCxzdXBwb3J0c0Rpc3RpbmN0OiEwLHN1cHBvcnRzUmV0dXJuaW5nUXVlcnlFeHRlbnQ6ITAsc3VwcG9ydHNSZXR1cm5pbmdHZW9tZXRyeVByb3BlcnRpZXM6ITEsc3VwcG9ydHNIYXZpbmdDbGF1c2U6ITAsc3VwcG9ydHNPcmRlckJ5OiEwLHN1cHBvcnRzUGFnaW5hdGlvbjohMCxzdXBwb3J0c1F1ZXJ5V2l0aFJlc3VsdFR5cGU6ITEsc3VwcG9ydHNTcWxFeHByZXNzaW9uOiEwLHN1cHBvcnRzRGlzam9pbnRTcGF0aWFsUmVsOiEwfX07Y2xhc3MgUXtjb25zdHJ1Y3Rvcigpe3RoaXMuX3F1ZXJ5RW5naW5lPW51bGwsdGhpcy5fc25hcHNob3RGZWF0dXJlcz1hc3luYyBlPT57Y29uc3QgdD1hd2FpdCB0aGlzLl9mZXRjaChlKTtyZXR1cm4gdGhpcy5fY3JlYXRlRmVhdHVyZXModCl9fWRlc3Ryb3koKXt0aGlzLl9xdWVyeUVuZ2luZT8uZGVzdHJveSgpLHRoaXMuX3F1ZXJ5RW5naW5lPXRoaXMuX2NyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzPW51bGx9YXN5bmMgbG9hZChlLHQ9e30pe3RoaXMuX2xvYWRPcHRpb25zPXt1cmw6ZS51cmwsY3VzdG9tUGFyYW1ldGVyczplLmN1c3RvbVBhcmFtZXRlcnN9O2NvbnN0IGk9W10sW3JdPWF3YWl0IFByb21pc2UuYWxsKFtlLnVybD90aGlzLl9mZXRjaCh0Py5zaWduYWwpOm51bGwsdGhpcy5fY2hlY2tQcm9qZWN0aW9uKGUuc3BhdGlhbFJlZmVyZW5jZSldKSxuPWcocix7Z2VvbWV0cnlUeXBlOmUuZ2VvbWV0cnlUeXBlfSksbz1lLmZpZWxkc3x8bi5maWVsZHN8fFtdLGw9bnVsbCE9ZS5oYXNaP2UuaGFzWjpuLmhhc1osdT1uLmdlb21ldHJ5VHlwZTtsZXQgZD1lLm9iamVjdElkRmllbGR8fG4ub2JqZWN0SWRGaWVsZE5hbWV8fFwiX19PQkpFQ1RJRFwiO2NvbnN0IHA9ZS5zcGF0aWFsUmVmZXJlbmNlfHxhO2xldCBjPWUudGltZUluZm87bz09PW4uZmllbGRzJiZuLnVua25vd25GaWVsZHMubGVuZ3RoPjAmJmkucHVzaCh7bmFtZTpcImdlb2pzb24tbGF5ZXI6dW5rbm93bi1maWVsZC10eXBlc1wiLG1lc3NhZ2U6XCJTb21lIGZpZWxkcyB0eXBlcyBjb3VsZG4ndCBiZSBpbmZlcnJlZCBmcm9tIHRoZSBmZWF0dXJlcyBhbmQgd2VyZSBkcm9wcGVkXCIsZGV0YWlsczp7dW5rbm93bkZpZWxkczpuLnVua25vd25GaWVsZHN9fSk7Y29uc3QgeT1uZXcgUyhvKTtsZXQgaD15LmdldChkKTtoPyhcImVzcmlGaWVsZFR5cGVTdHJpbmdcIiE9PWgudHlwZSYmKGgudHlwZT1cImVzcmlGaWVsZFR5cGVPSURcIiksaC5lZGl0YWJsZT0hMSxoLm51bGxhYmxlPSExLGQ9aC5uYW1lKTooaD17YWxpYXM6ZCxuYW1lOmQsdHlwZTpcInN0cmluZ1wiPT09bi5vYmplY3RJZEZpZWxkVHlwZT9cImVzcmlGaWVsZFR5cGVTdHJpbmdcIjpcImVzcmlGaWVsZFR5cGVPSURcIixlZGl0YWJsZTohMSxudWxsYWJsZTohMX0sby51bnNoaWZ0KGgpKTtjb25zdCBfPXt9O2Zvcihjb25zdCBhIG9mIG8pe2lmKG51bGw9PWEubmFtZSYmKGEubmFtZT1hLmFsaWFzKSxudWxsPT1hLmFsaWFzJiYoYS5hbGlhcz1hLm5hbWUpLCFhLm5hbWUpdGhyb3cgbmV3IHMoXCJnZW9qc29uLWxheWVyOmludmFsaWQtZmllbGQtbmFtZVwiLFwiZmllbGQgbmFtZSBpcyBtaXNzaW5nXCIse2ZpZWxkOmF9KTtpZighUi5qc29uVmFsdWVzLmluY2x1ZGVzKGEudHlwZSkpdGhyb3cgbmV3IHMoXCJnZW9qc29uLWxheWVyOmludmFsaWQtZmllbGQtdHlwZVwiLGBpbnZhbGlkIHR5cGUgZm9yIGZpZWxkIFwiJHthLm5hbWV9XCJgLHtmaWVsZDphfSk7aWYoYS5uYW1lIT09aC5uYW1lKXtjb25zdCBlPU8oYSk7dm9pZCAwIT09ZSYmKF9bYS5uYW1lXT1lKX1udWxsPT1hLmxlbmd0aCYmKGEubGVuZ3RoPWsoYSkpfWlmKGMpe2lmKGMuc3RhcnRUaW1lRmllbGQpe2NvbnN0IGU9eS5nZXQoYy5zdGFydFRpbWVGaWVsZCk7ZT8oYy5zdGFydFRpbWVGaWVsZD1lLm5hbWUsZS50eXBlPVwiZXNyaUZpZWxkVHlwZURhdGVcIik6Yy5zdGFydFRpbWVGaWVsZD1udWxsfWlmKGMuZW5kVGltZUZpZWxkKXtjb25zdCBlPXkuZ2V0KGMuZW5kVGltZUZpZWxkKTtlPyhjLmVuZFRpbWVGaWVsZD1lLm5hbWUsZS50eXBlPVwiZXNyaUZpZWxkVHlwZURhdGVcIik6Yy5lbmRUaW1lRmllbGQ9bnVsbH1pZihjLnRyYWNrSWRGaWVsZCl7Y29uc3QgZT15LmdldChjLnRyYWNrSWRGaWVsZCk7ZT9jLnRyYWNrSWRGaWVsZD1lLm5hbWU6KGMudHJhY2tJZEZpZWxkPW51bGwsaS5wdXNoKHtuYW1lOlwiZ2VvanNvbi1sYXllcjppbnZhbGlkLXRpbWVJbmZvLXRyYWNrSWRGaWVsZFwiLG1lc3NhZ2U6XCJ0cmFja0lkRmllbGQgaXMgbWlzc2luZ1wiLGRldGFpbHM6e3RpbWVJbmZvOmN9fSkpfWMuc3RhcnRUaW1lRmllbGR8fGMuZW5kVGltZUZpZWxkfHwoaS5wdXNoKHtuYW1lOlwiZ2VvanNvbi1sYXllcjppbnZhbGlkLXRpbWVJbmZvXCIsbWVzc2FnZTpcInN0YXJ0VGltZUZpZWxkIGFuZCBlbmRUaW1lRmllbGQgYXJlIG1pc3NpbmdcIixkZXRhaWxzOnt0aW1lSW5mbzpjfX0pLGM9bnVsbCl9Y29uc3QgRj11P0kodSk6dm9pZCAwLGI9eS5kYXRlRmllbGRzLmxlbmd0aD97dGltZVpvbmVJQU5BOkN9Om51bGwsVD17d2FybmluZ3M6aSxmZWF0dXJlRXJyb3JzOltdLGxheWVyRGVmaW5pdGlvbjp7Li4uRCxkcmF3aW5nSW5mbzpGPz92b2lkIDAsdGVtcGxhdGVzOmooXyksZXh0ZW50OnZvaWQgMCxnZW9tZXRyeVR5cGU6dSxvYmplY3RJZEZpZWxkOmQsZmllbGRzOm8saGFzWjohIWwsdGltZUluZm86YyxkYXRlRmllbGRzVGltZVJlZmVyZW5jZTpifX07dGhpcy5fcXVlcnlFbmdpbmU9bmV3IGYoe2ZpZWxkc0luZGV4OlMuZnJvbUxheWVySlNPTih7ZmllbGRzOm8sdGltZUluZm86YyxkYXRlRmllbGRzVGltZVJlZmVyZW5jZTpifSksZ2VvbWV0cnlUeXBlOnUsaGFzTTohMSxoYXNaOmwsb2JqZWN0SWRGaWVsZDpkLHNwYXRpYWxSZWZlcmVuY2U6cCx0aW1lSW5mbzpjLGZlYXR1cmVTdG9yZTpuZXcgbSh7Z2VvbWV0cnlUeXBlOnUsaGFzTTohMSxoYXNaOmx9KSxjYWNoZVNwYXRpYWxRdWVyaWVzOiEwfSk7Y29uc3Qgdz10aGlzLl9xdWVyeUVuZ2luZS5maWVsZHNJbmRleC5yZXF1aXJlZEZpZWxkcy5pbmRleE9mKGgpO3c+LTEmJnRoaXMuX3F1ZXJ5RW5naW5lLmZpZWxkc0luZGV4LnJlcXVpcmVkRmllbGRzLnNwbGljZSh3LDEpLHRoaXMuX2NyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzPUUoXyxkKTtjb25zdCBxPWF3YWl0IHRoaXMuX2NyZWF0ZUZlYXR1cmVzKHIpO3RoaXMuX29iamVjdElkR2VuZXJhdG9yPXRoaXMuX2NyZWF0ZU9iamVjdElkR2VuZXJhdG9yKHRoaXMuX3F1ZXJ5RW5naW5lLHEpO2NvbnN0IHg9dGhpcy5fbm9ybWFsaXplRmVhdHVyZXMocSxULmZlYXR1cmVFcnJvcnMpO3RoaXMuX3F1ZXJ5RW5naW5lLmZlYXR1cmVTdG9yZS5hZGRNYW55KHgpO2NvbnN0e2Z1bGxFeHRlbnQ6USx0aW1lRXh0ZW50OnZ9PWF3YWl0IHRoaXMuX3F1ZXJ5RW5naW5lLmZldGNoUmVjb21wdXRlZEV4dGVudHMoKTtpZihULmxheWVyRGVmaW5pdGlvbi5leHRlbnQ9USx2KXtjb25zdHtzdGFydDplLGVuZDp0fT12O1QubGF5ZXJEZWZpbml0aW9uLnRpbWVJbmZvLnRpbWVFeHRlbnQ9W2UsdF19cmV0dXJuIFR9YXN5bmMgYXBwbHlFZGl0cyhlKXtjb25zdHtzcGF0aWFsUmVmZXJlbmNlOnQsZ2VvbWV0cnlUeXBlOnN9PXRoaXMuX3F1ZXJ5RW5naW5lO3JldHVybiBhd2FpdCBQcm9taXNlLmFsbChbYih0LHMpLHkoZS5hZGRzLHQpLHkoZS51cGRhdGVzLHQpXSksYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9hcHBseUVkaXRzKGUpfWFzeW5jIHF1ZXJ5RmVhdHVyZXMoZT17fSx0PXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9xdWVyeUVuZ2luZS5leGVjdXRlUXVlcnkoZSx0LnNpZ25hbCl9YXN5bmMgcXVlcnlGZWF0dXJlQ291bnQoZT17fSx0PXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9xdWVyeUVuZ2luZS5leGVjdXRlUXVlcnlGb3JDb3VudChlLHQuc2lnbmFsKX1hc3luYyBxdWVyeU9iamVjdElkcyhlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeUZvcklkcyhlLHQuc2lnbmFsKX1hc3luYyBxdWVyeUV4dGVudChlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeUZvckV4dGVudChlLHQuc2lnbmFsKX1hc3luYyBxdWVyeVNuYXBwaW5nKGUsdD17fSl7cmV0dXJuIGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCksdGhpcy5fcXVlcnlFbmdpbmUuZXhlY3V0ZVF1ZXJ5Rm9yU25hcHBpbmcoZSx0LnNpZ25hbCl9YXN5bmMgcmVmcmVzaChlKXt0aGlzLl9sb2FkT3B0aW9ucy5jdXN0b21QYXJhbWV0ZXJzPWUsdGhpcy5fc25hcHNob3RUYXNrPy5hYm9ydCgpLHRoaXMuX3NuYXBzaG90VGFzaz10KHRoaXMuX3NuYXBzaG90RmVhdHVyZXMpLHRoaXMuX3NuYXBzaG90VGFzay5wcm9taXNlLnRoZW4oKGU9Pnt0aGlzLl9xdWVyeUVuZ2luZS5mZWF0dXJlU3RvcmUuY2xlYXIoKSx0aGlzLl9vYmplY3RJZEdlbmVyYXRvcj10aGlzLl9jcmVhdGVPYmplY3RJZEdlbmVyYXRvcih0aGlzLl9xdWVyeUVuZ2luZSxlKTtjb25zdCB0PXRoaXMuX25vcm1hbGl6ZUZlYXR1cmVzKGUpO3QmJnRoaXMuX3F1ZXJ5RW5naW5lLmZlYXR1cmVTdG9yZS5hZGRNYW55KHQpfSksKGU9Pnt0aGlzLl9xdWVyeUVuZ2luZS5mZWF0dXJlU3RvcmUuY2xlYXIoKSxyKGUpfHxpLmdldExvZ2dlcihcImVzcmkubGF5ZXJzLkdlb0pTT05MYXllclwiKS5lcnJvcihuZXcgcyhcImdlb2pzb24tbGF5ZXI6cmVmcmVzaFwiLFwiQW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHJlZnJlc2hcIix7ZXJyb3I6ZX0pKX0pKSxhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpO2NvbnN0e2Z1bGxFeHRlbnQ6bix0aW1lRXh0ZW50OmF9PWF3YWl0IHRoaXMuX3F1ZXJ5RW5naW5lLmZldGNoUmVjb21wdXRlZEV4dGVudHMoKTtyZXR1cm57ZXh0ZW50Om4sdGltZUV4dGVudDphfX1hc3luYyBfY3JlYXRlRmVhdHVyZXMoZSl7aWYobnVsbD09ZSlyZXR1cm5bXTtjb25zdHtnZW9tZXRyeVR5cGU6dCxoYXNaOnMsb2JqZWN0SWRGaWVsZDppfT10aGlzLl9xdWVyeUVuZ2luZSxyPV8oZSx7Z2VvbWV0cnlUeXBlOnQsaGFzWjpzLG9iamVjdElkRmllbGQ6aX0pO2lmKCFvKHRoaXMuX3F1ZXJ5RW5naW5lLnNwYXRpYWxSZWZlcmVuY2UsYSkpZm9yKGNvbnN0IG4gb2YgciludWxsIT1uLmdlb21ldHJ5JiYobi5nZW9tZXRyeT1sKGgodShuLmdlb21ldHJ5LHRoaXMuX3F1ZXJ5RW5naW5lLmdlb21ldHJ5VHlwZSx0aGlzLl9xdWVyeUVuZ2luZS5oYXNaLCExKSxhLHRoaXMuX3F1ZXJ5RW5naW5lLnNwYXRpYWxSZWZlcmVuY2UpKSk7cmV0dXJuIHJ9YXN5bmMgX3dhaXRTbmFwc2hvdENvbXBsZXRlKCl7aWYodGhpcy5fc25hcHNob3RUYXNrJiYhdGhpcy5fc25hcHNob3RUYXNrLmZpbmlzaGVkKXt0cnl7YXdhaXQgdGhpcy5fc25hcHNob3RUYXNrLnByb21pc2V9Y2F0Y2h7fXJldHVybiB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpfX1hc3luYyBfZmV0Y2godCl7Y29uc3R7dXJsOnMsY3VzdG9tUGFyYW1ldGVyczppfT10aGlzLl9sb2FkT3B0aW9ucyxyPShhd2FpdCBlKHMse3Jlc3BvbnNlVHlwZTpcImpzb25cIixxdWVyeTp7Li4uaX0sc2lnbmFsOnR9KSkuZGF0YTtyZXR1cm4gRihyKSxyfV9ub3JtYWxpemVGZWF0dXJlcyhlLHQpe2NvbnN0e29iamVjdElkRmllbGQ6cyxmaWVsZHNJbmRleDppfT10aGlzLl9xdWVyeUVuZ2luZSxyPVtdO2Zvcihjb25zdCBuIG9mIGUpe2NvbnN0IGU9dGhpcy5fY3JlYXRlRGVmYXVsdEF0dHJpYnV0ZXMoKSxhPVQoaSxlLG4uYXR0cmlidXRlcywhMCk7YT90Py5wdXNoKGEpOih0aGlzLl9hc3NpZ25PYmplY3RJZChlLG4uYXR0cmlidXRlcywhMCksbi5hdHRyaWJ1dGVzPWUsbi5vYmplY3RJZD1lW3NdLHIucHVzaChuKSl9cmV0dXJuIHJ9YXN5bmMgX2FwcGx5RWRpdHMoZSl7Y29uc3R7YWRkczp0LHVwZGF0ZXM6cyxkZWxldGVzOml9PWUscj17YWRkUmVzdWx0czpbXSxkZWxldGVSZXN1bHRzOltdLHVwZGF0ZVJlc3VsdHM6W10sdWlkVG9PYmplY3RJZDp7fX07aWYodD8ubGVuZ3RoJiZ0aGlzLl9hcHBseUFkZEVkaXRzKHIsdCkscz8ubGVuZ3RoJiZ0aGlzLl9hcHBseVVwZGF0ZUVkaXRzKHIscyksaT8ubGVuZ3RoKXtmb3IoY29uc3QgZSBvZiBpKXIuZGVsZXRlUmVzdWx0cy5wdXNoKHcoZSkpO3RoaXMuX3F1ZXJ5RW5naW5lLmZlYXR1cmVTdG9yZS5yZW1vdmVNYW55QnlJZChpKX1jb25zdHtmdWxsRXh0ZW50Om4sdGltZUV4dGVudDphfT1hd2FpdCB0aGlzLl9xdWVyeUVuZ2luZS5mZXRjaFJlY29tcHV0ZWRFeHRlbnRzKCk7cmV0dXJue2V4dGVudDpuLHRpbWVFeHRlbnQ6YSxmZWF0dXJlRWRpdFJlc3VsdHM6cn19X2FwcGx5QWRkRWRpdHMoZSx0KXtjb25zdHthZGRSZXN1bHRzOnN9PWUse2dlb21ldHJ5VHlwZTppLGhhc006cixoYXNaOmEsb2JqZWN0SWRGaWVsZDpvLHNwYXRpYWxSZWZlcmVuY2U6bCxmZWF0dXJlU3RvcmU6dSxmaWVsZHNJbmRleDpwfT10aGlzLl9xdWVyeUVuZ2luZSxjPVtdO2Zvcihjb25zdCBkIG9mIHQpe2lmKGQuZ2VvbWV0cnkmJmkhPT1uKGQuZ2VvbWV0cnkpKXtzLnB1c2gocShcIkluY29ycmVjdCBnZW9tZXRyeSB0eXBlLlwiKSk7Y29udGludWV9Y29uc3QgdD10aGlzLl9jcmVhdGVEZWZhdWx0QXR0cmlidXRlcygpLHI9VChwLHQsZC5hdHRyaWJ1dGVzKTtpZihyKXMucHVzaChyKTtlbHNle2lmKHRoaXMuX2Fzc2lnbk9iamVjdElkKHQsZC5hdHRyaWJ1dGVzKSxkLmF0dHJpYnV0ZXM9dCxudWxsIT1kLnVpZCl7Y29uc3QgdD1kLmF0dHJpYnV0ZXNbb107ZS51aWRUb09iamVjdElkW2QudWlkXT10fWlmKG51bGwhPWQuZ2VvbWV0cnkpe2NvbnN0IGU9ZC5nZW9tZXRyeS5zcGF0aWFsUmVmZXJlbmNlPz9sO2QuZ2VvbWV0cnk9aCh4KGQuZ2VvbWV0cnksZSksZSxsKX1jLnB1c2goZCkscy5wdXNoKHcoZC5hdHRyaWJ1dGVzW29dKSl9fXUuYWRkTWFueShkKFtdLGMsaSxhLHIsbykpfV9hcHBseVVwZGF0ZUVkaXRzKHt1cGRhdGVSZXN1bHRzOmV9LHQpe2NvbnN0e2dlb21ldHJ5VHlwZTpzLGhhc006aSxoYXNaOnIsb2JqZWN0SWRGaWVsZDphLHNwYXRpYWxSZWZlcmVuY2U6byxmZWF0dXJlU3RvcmU6bCxmaWVsZHNJbmRleDp1fT10aGlzLl9xdWVyeUVuZ2luZTtmb3IoY29uc3QgZCBvZiB0KXtjb25zdHthdHRyaWJ1dGVzOnQsZ2VvbWV0cnk6bX09ZCx5PXQ/LlthXTtpZihudWxsPT15KXtlLnB1c2gocShgSWRlbnRpZmllciBmaWVsZCAke2F9IG1pc3NpbmdgKSk7Y29udGludWV9aWYoIWwuaGFzKHkpKXtlLnB1c2gocShgRmVhdHVyZSB3aXRoIG9iamVjdCBpZCAke3l9IG1pc3NpbmdgKSk7Y29udGludWV9Y29uc3QgZj1wKGwuZ2V0RmVhdHVyZSh5KSxzLHIsaSk7aWYobnVsbCE9bSl7aWYocyE9PW4obSkpe2UucHVzaChxKFwiSW5jb3JyZWN0IGdlb21ldHJ5IHR5cGUuXCIpKTtjb250aW51ZX1jb25zdCB0PW0uc3BhdGlhbFJlZmVyZW5jZT8/bztmLmdlb21ldHJ5PWgoeChtLHQpLHQsbyl9aWYodCl7Y29uc3Qgcz1UKHUsZi5hdHRyaWJ1dGVzLHQpO2lmKHMpe2UucHVzaChzKTtjb250aW51ZX19bC5hZGQoYyhmLHMscixpLGEpKSxlLnB1c2godyh5KSl9fV9jcmVhdGVPYmplY3RJZEdlbmVyYXRvcihlLHQpe2NvbnN0IHM9ZS5maWVsZHNJbmRleC5nZXQoZS5vYmplY3RJZEZpZWxkKTtpZihcImVzcmlGaWVsZFR5cGVTdHJpbmdcIj09PXMudHlwZSlyZXR1cm4oKT0+cy5uYW1lK1wiLVwiK0RhdGUubm93KCkudG9TdHJpbmcoMTYpO2xldCBpPU51bWJlci5ORUdBVElWRV9JTkZJTklUWTtmb3IoY29uc3QgciBvZiB0KXIub2JqZWN0SWQmJihpPU1hdGgubWF4KGksci5vYmplY3RJZCkpO3JldHVybiBpPU1hdGgubWF4KDAsaSkrMSwoKT0+aSsrfV9hc3NpZ25PYmplY3RJZChlLHQscz0hMSl7Y29uc3QgaT10aGlzLl9xdWVyeUVuZ2luZS5vYmplY3RJZEZpZWxkO2VbaV09cyYmaSBpbiB0P3RbaV06dGhpcy5fb2JqZWN0SWRHZW5lcmF0b3IoKX1hc3luYyBfY2hlY2tQcm9qZWN0aW9uKGUpe3RyeXthd2FpdCB5KGEsZSl9Y2F0Y2h7dGhyb3cgbmV3IHMoXCJnZW9qc29uLWxheWVyXCIsXCJQcm9qZWN0aW9uIG5vdCBzdXBwb3J0ZWRcIil9fX1leHBvcnR7USBhcyBkZWZhdWx0fTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7aXNJU084NjAxRGF0ZSBhcyBlfWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvZGF0ZS5qc1wiO2ltcG9ydCB0IGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvRXJyb3IuanNcIjtpbXBvcnR7aXNXR1M4NCBhcyBufWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvc3BhdGlhbFJlZmVyZW5jZVV0aWxzLmpzXCI7aW1wb3J0e09wdGltaXplZEZlYXR1cmUgYXMgb31mcm9tXCIuLi8uLi9PcHRpbWl6ZWRGZWF0dXJlLmpzXCI7aW1wb3J0IHIgZnJvbVwiLi4vLi4vT3B0aW1pemVkR2VvbWV0cnkuanNcIjtpbXBvcnR7bm9ybWFsaXplRmllbGROYW1lIGFzIGksaXNOdW1lcmljRmllbGQgYXMgc31mcm9tXCIuLi8uLi8uLi9zdXBwb3J0L2ZpZWxkVXRpbHMuanNcIjtjb25zdCBjPXtMaW5lU3RyaW5nOlwiZXNyaUdlb21ldHJ5UG9seWxpbmVcIixNdWx0aUxpbmVTdHJpbmc6XCJlc3JpR2VvbWV0cnlQb2x5bGluZVwiLE11bHRpUG9pbnQ6XCJlc3JpR2VvbWV0cnlNdWx0aXBvaW50XCIsUG9pbnQ6XCJlc3JpR2VvbWV0cnlQb2ludFwiLFBvbHlnb246XCJlc3JpR2VvbWV0cnlQb2x5Z29uXCIsTXVsdGlQb2x5Z29uOlwiZXNyaUdlb21ldHJ5UG9seWdvblwifTtmdW5jdGlvbiB1KGUpe3JldHVybiBjW2VdfWZ1bmN0aW9uKmwoZSl7c3dpdGNoKGUudHlwZSl7Y2FzZVwiRmVhdHVyZVwiOnlpZWxkIGU7YnJlYWs7Y2FzZVwiRmVhdHVyZUNvbGxlY3Rpb25cIjpmb3IoY29uc3QgdCBvZiBlLmZlYXR1cmVzKXQmJih5aWVsZCB0KX19ZnVuY3Rpb24qZihlKXtpZihlKXN3aXRjaChlLnR5cGUpe2Nhc2VcIlBvaW50XCI6eWllbGQgZS5jb29yZGluYXRlczticmVhaztjYXNlXCJMaW5lU3RyaW5nXCI6Y2FzZVwiTXVsdGlQb2ludFwiOnlpZWxkKmUuY29vcmRpbmF0ZXM7YnJlYWs7Y2FzZVwiTXVsdGlMaW5lU3RyaW5nXCI6Y2FzZVwiUG9seWdvblwiOmZvcihjb25zdCB0IG9mIGUuY29vcmRpbmF0ZXMpeWllbGQqdDticmVhaztjYXNlXCJNdWx0aVBvbHlnb25cIjpmb3IoY29uc3QgdCBvZiBlLmNvb3JkaW5hdGVzKWZvcihjb25zdCBlIG9mIHQpeWllbGQqZX19ZnVuY3Rpb24qcChlLHQ9e30pe2NvbnN0e2dlb21ldHJ5VHlwZTpuLG9iamVjdElkRmllbGQ6aX09dDtmb3IoY29uc3QgcyBvZiBlKXtjb25zdHtnZW9tZXRyeTplLHByb3BlcnRpZXM6YyxpZDpsfT1zO2lmKGUmJnUoZS50eXBlKSE9PW4pY29udGludWU7Y29uc3QgZj1jfHx7fTtsZXQgcDtpJiYocD1mW2ldLG51bGw9PWx8fHB8fChmW2ldPXA9bCkpO2NvbnN0IGE9bmV3IG8oZT9oKG5ldyByLGUsdCk6bnVsbCxmLG51bGwscD8/dm9pZCAwKTt5aWVsZCBhfX1mdW5jdGlvbiBhKGUpe2Zvcihjb25zdCB0IG9mIGUpaWYodC5sZW5ndGg+MilyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiB5KGUpe3JldHVybiFnKGUpfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIGcoZSl9ZnVuY3Rpb24gZyhlKXtsZXQgdD0wO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCBvPWVbbl0scj1lWyhuKzEpJWUubGVuZ3RoXTt0Kz1vWzBdKnJbMV0tclswXSpvWzFdfXJldHVybiB0PD0wfWZ1bmN0aW9uIG0oZSl7Y29uc3QgdD1lWzBdLG49ZVtlLmxlbmd0aC0xXTtyZXR1cm4gdFswXT09PW5bMF0mJnRbMV09PT1uWzFdJiZ0WzJdPT09blsyXXx8ZS5wdXNoKHQpLGV9ZnVuY3Rpb24gaChlLHQsbil7c3dpdGNoKHQudHlwZSl7Y2FzZVwiTGluZVN0cmluZ1wiOnJldHVybiB3KGUsdCxuKTtjYXNlXCJNdWx0aUxpbmVTdHJpbmdcIjpyZXR1cm4gUChlLHQsbik7Y2FzZVwiTXVsdGlQb2ludFwiOnJldHVybiBqKGUsdCxuKTtjYXNlXCJNdWx0aVBvbHlnb25cIjpyZXR1cm4gYihlLHQsbik7Y2FzZVwiUG9pbnRcIjpyZXR1cm4gUyhlLHQsbik7Y2FzZVwiUG9seWdvblwiOnJldHVybiBGKGUsdCxuKX19ZnVuY3Rpb24gdyhlLHQsbil7cmV0dXJuIE0oZSx0LmNvb3JkaW5hdGVzLG4pLGV9ZnVuY3Rpb24gUChlLHQsbil7Zm9yKGNvbnN0IG8gb2YgdC5jb29yZGluYXRlcylNKGUsbyxuKTtyZXR1cm4gZX1mdW5jdGlvbiBqKGUsdCxuKXtyZXR1cm4gTShlLHQuY29vcmRpbmF0ZXMsbiksZX1mdW5jdGlvbiBiKGUsdCxuKXtmb3IoY29uc3QgbyBvZiB0LmNvb3JkaW5hdGVzKXtHKGUsb1swXSxuKTtmb3IobGV0IHQ9MTt0PG8ubGVuZ3RoO3QrKylrKGUsb1t0XSxuKX1yZXR1cm4gZX1mdW5jdGlvbiBTKGUsdCxuKXtyZXR1cm4gTyhlLHQuY29vcmRpbmF0ZXMsbiksZX1mdW5jdGlvbiBGKGUsdCxuKXtjb25zdCBvPXQuY29vcmRpbmF0ZXM7RyhlLG9bMF0sbik7Zm9yKGxldCByPTE7cjxvLmxlbmd0aDtyKyspayhlLG9bcl0sbik7cmV0dXJuIGV9ZnVuY3Rpb24gRyhlLHQsbil7Y29uc3Qgbz1tKHQpO3kobyk/VChlLG8sbik6TShlLG8sbil9ZnVuY3Rpb24gayhlLHQsbil7Y29uc3Qgbz1tKHQpO2Qobyk/VChlLG8sbik6TShlLG8sbil9ZnVuY3Rpb24gTShlLHQsbil7Zm9yKGNvbnN0IG8gb2YgdClPKGUsbyxuKTtlLmxlbmd0aHMucHVzaCh0Lmxlbmd0aCl9ZnVuY3Rpb24gVChlLHQsbil7Zm9yKGxldCBvPXQubGVuZ3RoLTE7bz49MDtvLS0pTyhlLHRbb10sbik7ZS5sZW5ndGhzLnB1c2godC5sZW5ndGgpfWZ1bmN0aW9uIE8oZSx0LG4pe2NvbnN0W28scixpXT10O2UuY29vcmRzLnB1c2gobyxyKSxuLmhhc1omJmUuY29vcmRzLnB1c2goaXx8MCl9ZnVuY3Rpb24gTCh0KXtzd2l0Y2godHlwZW9mIHQpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBlKHQpP1wiZXNyaUZpZWxkVHlwZURhdGVcIjpcImVzcmlGaWVsZFR5cGVTdHJpbmdcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm5cImVzcmlGaWVsZFR5cGVEb3VibGVcIjtkZWZhdWx0OnJldHVyblwidW5rbm93blwifX1mdW5jdGlvbiBFKGUsbz00MzI2KXtpZighZSl0aHJvdyBuZXcgdChcImdlb2pzb24tbGF5ZXI6ZW1wdHlcIixcIkdlb0pTT04gZGF0YSBpcyBlbXB0eVwiKTtpZihcIkZlYXR1cmVcIiE9PWUudHlwZSYmXCJGZWF0dXJlQ29sbGVjdGlvblwiIT09ZS50eXBlKXRocm93IG5ldyB0KFwiZ2VvanNvbi1sYXllcjp1bnN1cHBvcnRlZC1nZW9qc29uLW9iamVjdFwiLFwibWlzc2luZyBvciBub3Qgc3VwcG9ydGVkIEdlb0pTT04gb2JqZWN0IHR5cGVcIix7ZGF0YTplfSk7Y29uc3R7Y3JzOnJ9PWU7aWYoIXIpcmV0dXJuO2NvbnN0IGk9XCJzdHJpbmdcIj09dHlwZW9mIHI/cjpcIm5hbWVcIj09PXIudHlwZT9yLnByb3BlcnRpZXMubmFtZTpcIkVQU0dcIj09PXIudHlwZT9yLnByb3BlcnRpZXMuY29kZTpudWxsLHM9bih7d2tpZDpvfSk/bmV3IFJlZ0V4cChcIi4qKENSUzg0SD98NDMyNikkXCIsXCJpXCIpOm5ldyBSZWdFeHAoYC4qKCR7b30pJGAsXCJpXCIpO2lmKCFpfHwhcy50ZXN0KGkpKXRocm93IG5ldyB0KFwiZ2VvanNvbjp1bnN1cHBvcnRlZC1jcnNcIixcInVuc3VwcG9ydGVkIEdlb0pTT04gJ2NycycgbWVtYmVyXCIse2NyczpyfSl9ZnVuY3Rpb24gSShlLHQ9e30pe2NvbnN0IG49W10sbz1uZXcgU2V0LHI9bmV3IFNldDtsZXQgYyxwPSExLHk9bnVsbCxkPSExLHtnZW9tZXRyeVR5cGU6Zz1udWxsfT10LG09ITE7Zm9yKGNvbnN0IHMgb2YgbChlKSl7Y29uc3R7Z2VvbWV0cnk6ZSxwcm9wZXJ0aWVzOnQsaWQ6bH09cztpZighZXx8KGd8fChnPXUoZS50eXBlKSksdShlLnR5cGUpPT09Zykpe2lmKCFwKXtwPWEoZihlKSl9aWYoZHx8KGQ9bnVsbCE9bCxkJiYoYz10eXBlb2YgbCx0JiYoeT1PYmplY3Qua2V5cyh0KS5maWx0ZXIoKGU9PnRbZV09PT1sKSkpKSksdCYmeSYmZCYmbnVsbCE9bCYmKHkubGVuZ3RoPjE/eT15LmZpbHRlcigoZT0+dFtlXT09PWwpKToxPT09eS5sZW5ndGgmJih5PXRbeVswXV09PT1sP3k6W10pKSwhbSYmdCl7bGV0IGU9ITA7Zm9yKGNvbnN0IHMgaW4gdCl7aWYoby5oYXMocykpY29udGludWU7Y29uc3QgYz10W3NdO2lmKG51bGw9PWMpe2U9ITEsci5hZGQocyk7Y29udGludWV9Y29uc3QgdT1MKGMpO2lmKFwidW5rbm93blwiPT09dSl7ci5hZGQocyk7Y29udGludWV9ci5kZWxldGUocyksby5hZGQocyk7Y29uc3QgbD1pKHMpO2wmJm4ucHVzaCh7bmFtZTpsLGFsaWFzOnMsdHlwZTp1fSl9bT1lfX19Y29uc3QgaD1pKDE9PT15Py5sZW5ndGgmJnlbMF18fG51bGwpPz92b2lkIDA7aWYoaClmb3IoY29uc3QgaSBvZiBuKWlmKGkubmFtZT09PWgmJnMoaSkpe2kudHlwZT1cImVzcmlGaWVsZFR5cGVPSURcIjticmVha31yZXR1cm57ZmllbGRzOm4sZ2VvbWV0cnlUeXBlOmcsaGFzWjpwLG9iamVjdElkRmllbGROYW1lOmgsb2JqZWN0SWRGaWVsZFR5cGU6Yyx1bmtub3duRmllbGRzOkFycmF5LmZyb20ocil9fWZ1bmN0aW9uIE4oZSx0KXtyZXR1cm4gQXJyYXkuZnJvbShwKGwoZSksdCkpfWV4cG9ydHtOIGFzIGNyZWF0ZU9wdGltaXplZEZlYXR1cmVzLHUgYXMgZ2V0R2VvbWV0cnlUeXBlLEkgYXMgaW5mZXJMYXllclByb3BlcnRpZXMsRSBhcyB2YWxpZGF0ZUdlb0pTT059O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9