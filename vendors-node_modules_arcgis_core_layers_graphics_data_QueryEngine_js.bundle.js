"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_arcgis_core_layers_graphics_data_QueryEngine_js"],{

/***/ "./node_modules/@arcgis/core/core/sql/WhereClauseCache.js":
/*!****************************************************************!*\
  !*** ./node_modules/@arcgis/core/core/sql/WhereClauseCache.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhereClauseCache: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _LRUCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../LRUCache.js */ "./node_modules/@arcgis/core/core/LRUCache.js");
/* harmony import */ var _WhereClause_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WhereClause.js */ "./node_modules/@arcgis/core/core/sql/WhereClause.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class r{constructor(e,r){this._cache=new _LRUCache_js__WEBPACK_IMPORTED_MODULE_0__.LRUCache(e),this._invalidCache=new _LRUCache_js__WEBPACK_IMPORTED_MODULE_0__.LRUCache(r)}get(t,r){const i=`${r.uid}:${t}`,c=this._cache.get(i);if(c)return c;if(null!=this._invalidCache.get(i))return null;try{const c=_WhereClause_js__WEBPACK_IMPORTED_MODULE_1__.WhereClause.create(t,r);return this._cache.put(i,c),c}catch(n){return this._invalidCache.put(i,n),null}}getError(t,e){const r=`${e.uid}:${t}`;return this._invalidCache.get(r)??null}}


/***/ }),

/***/ "./node_modules/@arcgis/core/geometry/geometryAdapters/json.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/geometryAdapters/json.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   jsonAdapter: () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const t={convertToGEGeometry:s,exportPoint:n,exportPolygon:o,exportPolyline:a,exportMultipoint:c,exportExtent:m};function s(t,s){return null==s?null:t.convertJSONToGeometry(s)}class i{constructor(t,s,i){this.x=t,this.y=s,this.spatialReference=i,this.z=void 0,this.m=void 0}}function n(t,s,n){const e=new i(t.getPointX(s),t.getPointY(s),n),o=t.hasZ(s),h=t.hasM(s);return o&&(e.z=t.getPointZ(s)),h&&(e.m=t.getPointM(s)),e}class e{constructor(t,s,i,n){this.rings=t,this.spatialReference=s,this.hasZ=void 0,this.hasM=void 0,i&&(this.hasZ=i),n&&(this.hasM=n)}}function o(t,s,i){return new e(t.exportPaths(s),i,t.hasZ(s),t.hasM(s))}class h{constructor(t,s,i,n){this.paths=t,this.spatialReference=s,this.hasZ=void 0,this.hasM=void 0,i&&(this.hasZ=i),n&&(this.hasM=n)}}function a(t,s,i){return new h(t.exportPaths(s),i,t.hasZ(s),t.hasM(s))}class r{constructor(t,s,i,n){this.points=t,this.spatialReference=s,this.hasZ=void 0,this.hasM=void 0,i&&(this.hasZ=i),n&&(this.hasM=n)}}function c(t,s,i){return new r(t.exportPoints(s),i,t.hasZ(s),t.hasM(s))}class x{constructor(t,s,i,n,e){this.xmin=t,this.ymin=s,this.xmax=i,this.ymax=n,this.spatialReference=e,this.zmin=void 0,this.zmax=void 0,this.mmin=void 0,this.mmax=void 0}}function m(t,s,i){const n=t.hasZ(s),e=t.hasM(s),o=new x(t.getXMin(s),t.getYMin(s),t.getXMax(s),t.getYMax(s),i);if(n){const i=t.getZExtent(s);o.zmin=i.vmin,o.zmax=i.vmax}if(e){const i=t.getMExtent(s);o.mmin=i.vmin,o.mmax=i.vmax}return o}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/AttributesBuilder.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/AttributesBuilder.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attributeSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js");
/* harmony import */ var _geometryUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometryUtils.js */ "./node_modules/@arcgis/core/layers/graphics/data/geometryUtils.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _smartMapping_statistics_support_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../smartMapping/statistics/support/utils.js */ "./node_modules/@arcgis/core/smartMapping/statistics/support/utils.js");
/* harmony import */ var _statistics_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../statistics/utils.js */ "./node_modules/@arcgis/core/statistics/utils.js");
/* harmony import */ var _support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../support/arcadeOnDemand.js */ "./node_modules/@arcgis/core/support/arcadeOnDemand.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class c{constructor(s,a,l){this._fieldDataCache=new Map,this._returnDistinctMap=new Map,this.returnDistinctValues=s.returnDistinctValues??!1,this.fieldsIndex=l,this.featureAdapter=a;const r=s.outFields;if(r&&!r.includes("*")){this.outFields=r;let s=0;for(const a of r){const r=(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getExpressionFromFieldName)(a),n=this.fieldsIndex.get(r),u=n?null:(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getWhereClause)(r,l),o=n?n.name:(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getAliasFromFieldName)(a)||"FIELD_EXP_"+s++;this._fieldDataCache.set(a,{alias:o,clause:u})}}}countDistinctValues(t){return this.returnDistinctValues?(t.forEach((t=>this.getAttributes(t))),this._returnDistinctMap.size):t.length}getAttributes(t){const e=this._processAttributesForOutFields(t);return this._processAttributesForDistinctValues(e)}getFieldValue(t,i,s){const a=s?s.name:i;let l=null;return this._fieldDataCache.has(a)?l=this._fieldDataCache.get(a)?.clause:s||(l=(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getWhereClause)(i,this.fieldsIndex),this._fieldDataCache.set(a,{alias:a,clause:l})),s?this.featureAdapter.getAttribute(t,a):l?.calculateValue(t,this.featureAdapter)}getDataValues(t,e,i=!0){const s=e.normalizationType,d=e.normalizationTotal,c=this.fieldsIndex.get(e.field),h=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_2__.isDateOnlyField)(c)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_2__.isTimestampOffsetField)(c),f=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_2__.isTimeOnlyField)(c);return t.map((t=>{let a=e.field&&this.getFieldValue(t,e.field,this.fieldsIndex.get(e.field));if(e.field2?(a=`${(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_4__.processNullValue)(a)}${e.fieldDelimiter}${(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_4__.processNullValue)(this.getFieldValue(t,e.field2,this.fieldsIndex.get(e.field2)))}`,e.field3&&(a=`${a}${e.fieldDelimiter}${(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_4__.processNullValue)(this.getFieldValue(t,e.field3,this.fieldsIndex.get(e.field3)))}`)):"string"==typeof a&&i&&(h?a=a?new Date(a).getTime():null:f&&(a=a?(0,_smartMapping_statistics_support_utils_js__WEBPACK_IMPORTED_MODULE_3__.timeOnlyToMilliseconds)(a):null)),s&&Number.isFinite(a)){const i="field"===s&&e.normalizationField?this.getFieldValue(t,e.normalizationField,this.fieldsIndex.get(e.normalizationField)):null;a=(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_4__.getNormalizedValue)(a,s,i,d)}return a}))}async getExpressionValues(t,e,i,a,l){const{arcadeUtils:r}=await (0,_support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_5__.loadArcade)(),n=r.hasGeometryOperations(e);n&&await r.enableGeometryOperations();const u=r.createFunction(e),o=r.getViewInfo(i),c={fields:this.fieldsIndex.fields};return t.map((t=>{const e={attributes:this.featureAdapter.getAttributes(t),layer:c,geometry:n?{...(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_1__.getGeometry)(a.geometryType,a.hasZ,a.hasM,this.featureAdapter.getGeometry(t)),spatialReference:i?.spatialReference}:null},d=r.createExecContext(e,o,l);return r.executeFunction(u,d)}))}validateItem(t,i){return this._fieldDataCache.has(i)||this._fieldDataCache.set(i,{alias:i,clause:(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getWhereClause)(i,this.fieldsIndex)}),this._fieldDataCache.get(i)?.clause?.testFeature(t,this.featureAdapter)??!1}validateItems(t,i){return this._fieldDataCache.has(i)||this._fieldDataCache.set(i,{alias:i,clause:(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_0__.getWhereClause)(i,this.fieldsIndex)}),this._fieldDataCache.get(i)?.clause?.testSet(t,this.featureAdapter)??!1}_processAttributesForOutFields(t){const e=this.outFields;if(!e?.length)return this.featureAdapter.getAttributes(t);const i={};for(const s of e){const{alias:e,clause:a}=this._fieldDataCache.get(s);i[e]=a?a.calculateValue(t,this.featureAdapter):this.featureAdapter.getAttribute(t,e)}return i}_processAttributesForDistinctValues(t){if(null==t||!this.returnDistinctValues)return t;const e=this.outFields,i=[];if(e)for(const l of e){const{alias:e}=this._fieldDataCache.get(l);i.push(t[e])}else for(const l in t)i.push(t[l]);const s=`${(e||["*"]).join(",")}=${i.join(",")}`;let a=this._returnDistinctMap.get(s)||0;return this._returnDistinctMap.set(s,++a),a>1?null:t}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Feature: () => (/* binding */ L),
/* harmony export */   QueryEngine: () => (/* binding */ W)
/* harmony export */ });
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/JSONSupport.js */ "./node_modules/@arcgis/core/core/JSONSupport.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _core_maybe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/maybe.js */ "./node_modules/@arcgis/core/core/maybe.js");
/* harmony import */ var _core_MemCache_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../core/MemCache.js */ "./node_modules/@arcgis/core/core/MemCache.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_unitUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/unitUtils.js */ "./node_modules/@arcgis/core/core/unitUtils.js");
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../geometry/projection.js */ "./node_modules/@arcgis/core/geometry/projection.js");
/* harmony import */ var _geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../geometry/support/aaBoundingBox.js */ "./node_modules/@arcgis/core/geometry/support/aaBoundingBox.js");
/* harmony import */ var _geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../geometry/support/aaBoundingRect.js */ "./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js");
/* harmony import */ var _geometry_support_boundsUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../geometry/support/boundsUtils.js */ "./node_modules/@arcgis/core/geometry/support/boundsUtils.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _geometry_support_normalizeUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../geometry/support/normalizeUtils.js */ "./node_modules/@arcgis/core/geometry/support/normalizeUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _attributeSupport_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./attributeSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js");
/* harmony import */ var _geometryUtils_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./geometryUtils.js */ "./node_modules/@arcgis/core/layers/graphics/data/geometryUtils.js");
/* harmony import */ var _projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./QueryEngineCapabilities.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineCapabilities.js");
/* harmony import */ var _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./QueryEngineResult.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js");
/* harmony import */ var _queryUtils_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./queryUtils.js */ "./node_modules/@arcgis/core/layers/graphics/data/queryUtils.js");
/* harmony import */ var _queryValidationUtils_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./queryValidationUtils.js */ "./node_modules/@arcgis/core/layers/graphics/data/queryValidationUtils.js");
/* harmony import */ var _spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./spatialQuerySupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/spatialQuerySupport.js");
/* harmony import */ var _timeSupport_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./timeSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/timeSupport.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _views_support_Scheduler_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../views/support/Scheduler.js */ "./node_modules/@arcgis/core/views/support/Scheduler.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const N="unsupported-query";class L{constructor(e,t=null,i,s,r){this.attributes=e,this.geometry=i,this.centroid=s,this.filterFlags=r,this.groupId=-1,this.displayId=t}}const V=new _core_MemCache_js__WEBPACK_IMPORTED_MODULE_5__.MemCacheStorage(2e6);let D=0;class W{constructor(e){this._geometryQueryCache=null,this._changeHandle=null,this.capabilities={query:_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_19__.queryCapabilities},this.geometryType=e.geometryType,this.hasM=!!e.hasM,this.hasZ=!!e.hasZ,this.objectIdField=e.objectIdField,this.spatialReference=e.spatialReference,this.definitionExpression=e.definitionExpression,this.featureStore=e.featureStore,this.aggregateAdapter=e.aggregateAdapter,this._changeHandle=this.featureStore.events.on("changed",(()=>this.clearCache())),this.timeInfo=e.timeInfo,e.cacheSpatialQueries&&(this._geometryQueryCache=new _core_MemCache_js__WEBPACK_IMPORTED_MODULE_5__.MemCache(D+++"$$",V)),this.fieldsIndex=(0,_core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_2__.isSerializable)(e.fieldsIndex)?e.fieldsIndex:_support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_25__["default"].fromJSON(e.fieldsIndex),this.availableFields=null==e.availableFields?new Set(this.fieldsIndex.fields.map((e=>e.name))):new Set(e.availableFields.map((e=>this.fieldsIndex.get(e)?.name)).filter((e=>null!=e))),e.scheduler&&e.priority&&(this._frameTask=e.scheduler.registerTask(e.priority))}destroy(){this._frameTask=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.removeMaybe)(this._frameTask),this.clearCache(),(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.destroyMaybe)(this._geometryQueryCache),this._changeHandle=(0,_core_maybe_js__WEBPACK_IMPORTED_MODULE_4__.removeMaybe)(this._changeHandle)}get featureAdapter(){return this.featureStore.featureAdapter}clearCache(){this._geometryQueryCache?.clear(),this._allFeaturesPromise=null,this._timeExtentPromise=null,this._fullExtentPromise=null}async executeQuery(e,t){try{return(await this._executeQuery(e,{},t)).createQueryResponse()}catch(i){if(i!==_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)throw i;return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult([],e,this).createQueryResponse()}}async executeQueryForCount(e={},t){try{return(await this._executeQuery(e,{returnGeometry:!1,returnCentroid:!1,outSR:null},t)).createQueryResponseForCount()}catch(i){if(i!==_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)throw i;return 0}}async executeQueryForExtent(e,t){const i=e.outSR;try{const s=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),r=s.size;if(!r)return{count:0,extent:null};return{count:r,extent:await this._getBounds(s.items,s.spatialReference,i||this.spatialReference)}}catch(s){if(s===_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)return{count:0,extent:null};throw s}}async executeQueryForIds(e,t){return this.executeQueryForIdSet(e,t).then((e=>Array.from(e)))}async executeQueryForIdSet(e,t){try{const i=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),s=i.items,r=new Set;return await this._reschedule((()=>{for(const e of s)r.add(i.featureAdapter.getObjectId(e))}),t),r}catch(i){if(i===_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)return new Set;throw i}}async executeQueryForSnapping(e,t){const{point:i,distance:s,returnEdge:a,vertexMode:n}=e;if(!a&&"none"===n)return{candidates:[]};let u=(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_3__.clone)(e.query);u=await this._schedule((()=>(0,_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.normalizeQueryLike)(u,this.definitionExpression,this.spatialReference)),t),u=await this._reschedule((()=>(0,_queryValidationUtils_js__WEBPACK_IMPORTED_MODULE_22__.validateQuery)(u,{availableFields:this.availableFields,fieldsIndex:this.fieldsIndex,geometryType:this.geometryType,spatialReference:this.spatialReference})),t);const l=!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(i.spatialReference,this.spatialReference);l&&await (0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.checkProjectionSupport)(i.spatialReference,this.spatialReference);const o="number"==typeof s?s:s.x,h="number"==typeof s?s:s.y,c={xmin:i.x-o,xmax:i.x+o,ymin:i.y-h,ymax:i.y+h,spatialReference:i.spatialReference},m=l?(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.project)(c,this.spatialReference):c;if(!m)return{candidates:[]};const y=(await (0,_geometry_support_normalizeUtils_js__WEBPACK_IMPORTED_MODULE_13__.normalizeCentralMeridian)((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_12__.fromJSON)(i),null,{signal:t}))[0],f=(await (0,_geometry_support_normalizeUtils_js__WEBPACK_IMPORTED_MODULE_13__.normalizeCentralMeridian)((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_12__.fromJSON)(m),null,{signal:t}))[0];if(null==y||null==f)return{candidates:[]};const p=new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(await this._reschedule((()=>this._searchFeatures(this._getQueryBBoxes(f.toJSON()))),t),u,this);await this._reschedule((()=>this._executeObjectIdsQuery(p)),t),await this._reschedule((()=>this._executeTimeQuery(p)),t),await this._reschedule((()=>this._executeAttributesQuery(p)),t),await this._reschedule((()=>this._executeGeometryQueryForSnapping(p,t)),t);const d=y.toJSON(),g=l?(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.project)(d,this.spatialReference):d,x=l?Math.max(m.xmax-m.xmin,m.ymax-m.ymin)/2:s;return p.createSnappingResponse({...e,point:g,distance:x},i.spatialReference)}async executeQueryForLatestObservations(e,t){if(!this.timeInfo?.trackIdField)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](N,"Missing timeInfo or timeInfo.trackIdField",{query:e,timeInfo:this.timeInfo});try{const i=await this._executeQuery(e,{},t);return await this._reschedule((()=>this._filterLatest(i)),t),i.createQueryResponse()}catch(s){if(s!==_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)throw s;return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult([],e,this).createQueryResponse()}}async executeQueryForSummaryStatistics(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._executeQueryForStatistics(e,{field:s,normalizationField:r,valueExpression:a},i)).createSummaryStatisticsResponse(t)}async executeQueryForUniqueValues(e={},t,i){const{field:s,field2:r,field3:a,valueExpression:n}=t;return(await this._executeQueryForStatistics(e,{field:s,field2:r,field3:a,valueExpression:n},i)).createUniqueValuesResponse(t)}async executeQueryForClassBreaks(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._executeQueryForStatistics(e,{field:s,normalizationField:r,valueExpression:a},i)).createClassBreaksResponse(t)}async executeQueryForHistogram(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._executeQueryForStatistics(e,{field:s,normalizationField:r,valueExpression:a},i)).createHistogramResponse(t)}async fetchRecomputedExtents(e){this._timeExtentPromise||=(0,_timeSupport_js__WEBPACK_IMPORTED_MODULE_24__.getTimeExtent)(this.timeInfo,this.featureStore);const[t,i]=await Promise.all([this._getFullExtent(),this._timeExtentPromise]);return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_6__.throwIfAborted)(e),{fullExtent:t,timeExtent:i}}async _getBounds(e,t,i){const s=(0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__.set)((0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__.create)(),_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__.negativeInfinity);await this.featureStore.forEachBounds(e,(e=>(0,_geometry_support_aaBoundingBox_js__WEBPACK_IMPORTED_MODULE_9__.expandWithAABB)(s,e)));const r={xmin:s[0],ymin:s[1],xmax:s[3],ymax:s[4],spatialReference:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_17__.cleanFromGeometryEngine)(this.spatialReference)};this.hasZ&&isFinite(s[2])&&isFinite(s[5])&&(r.zmin=s[2],r.zmax=s[5]);const a=(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.project)(r,t,i);if(a.spatialReference=(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_17__.cleanFromGeometryEngine)(i),a.xmax-a.xmin==0){const e=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_7__.getMetersPerUnitForSR)(a.spatialReference);a.xmin-=e,a.xmax+=e}if(a.ymax-a.ymin==0){const e=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_7__.getMetersPerUnitForSR)(a.spatialReference);a.ymin-=e,a.ymax+=e}if(this.hasZ&&null!=a.zmin&&null!=a.zmax&&a.zmax-a.zmin==0){const e=(0,_core_unitUtils_js__WEBPACK_IMPORTED_MODULE_7__.getMetersPerUnitForSR)(a.spatialReference);a.zmin-=e,a.zmax+=e}return a}_getFullExtent(){return this._fullExtentPromise||="getFullExtent"in this.featureStore&&this.featureStore.getFullExtent?Promise.resolve(this.featureStore.getFullExtent(this.spatialReference)):this._getAllFeatures().then((e=>this._getBounds(e,this.spatialReference,this.spatialReference))),this._fullExtentPromise}async _schedule(e,t){return null!=this._frameTask?this._frameTask.schedule(e,t):e(_views_support_Scheduler_js__WEBPACK_IMPORTED_MODULE_26__.noBudget)}async _reschedule(e,t){return null!=this._frameTask?this._frameTask.reschedule(e,t):e(_views_support_Scheduler_js__WEBPACK_IMPORTED_MODULE_26__.noBudget)}async _getAllFeaturesQueryEngineResult(e){return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(await this._getAllFeatures(),e,this)}async _getAllFeatures(){if(null==this._allFeaturesPromise){const e=[];this._allFeaturesPromise=(async()=>{await this.featureStore.forEach((t=>e.push(t)))})().then((()=>e))}const e=this._allFeaturesPromise,t=await e;return e===this._allFeaturesPromise?t.slice():this._getAllFeatures()}async _executeQuery(e,t,i){e=(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_3__.clone)(e),e=await this._schedule((()=>(0,_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.normalizeQuery)(e,this.definitionExpression,this.spatialReference)),i),e=await this._reschedule((()=>(0,_queryValidationUtils_js__WEBPACK_IMPORTED_MODULE_22__.validateQuery)(e,{availableFields:this.availableFields,fieldsIndex:this.fieldsIndex,geometryType:this.geometryType,spatialReference:this.spatialReference})),i),e={...e,...t};const s=await this._reschedule((()=>this._executeSceneFilterQuery(e,i)),i),a=await this._reschedule((()=>this._executeGeometryQuery(e,s,i)),i);return await this._reschedule((()=>this._executeAggregateIdsQuery(a)),i),await this._reschedule((()=>this._executeObjectIdsQuery(a)),i),await this._reschedule((()=>this._executeTimeQuery(a)),i),await this._reschedule((()=>this._executeAttributesQuery(a)),i),a}async _executeSceneFilterQuery(e,t){if(null==e.sceneFilter)return null;const{outSR:i,returnGeometry:s,returnCentroid:r}=e,a=this.featureStore.featureSpatialReference,n=e.sceneFilter.geometry,u=null==a||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(a,n.spatialReference)?n:(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.project)(n,a);if(!u)return null;const l=s||r,o=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.isValid)(i)&&!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(this.spatialReference,i)&&l?async e=>this._project(e,i):e=>e,h=this.featureAdapter,c=await this._reschedule((()=>this._searchFeatures(this._getQueryBBoxes(u))),t);if("disjoint"===e.sceneFilter.spatialRelationship){if(!c.length)return null;const i=new Set;for(const e of c)i.add(h.getObjectId(e));const s=await this._reschedule((()=>this._getAllFeatures()),t),r=await this._reschedule((async()=>{const r=await (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.getSpatialQueryOperator)("esriSpatialRelDisjoint",u,this.geometryType,this.hasZ,this.hasM),a=e=>!i.has(h.getObjectId(e))||r(h.getGeometry(e)),n=await this._runSpatialFilter(s,a,t);return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(n,e,this)}),t);return o(r)}if(!c.length)return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult([],e,this);if(this._canExecuteSinglePass(u,e))return o(new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(c,e,this));const m=await (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.getSpatialQueryOperator)("esriSpatialRelContains",u,this.geometryType,this.hasZ,this.hasM),y=await this._runSpatialFilter(c,(e=>m(h.getGeometry(e))),t);return o(new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(y,e,this))}async _executeGeometryQuery(i,s,r){if(null!=s&&0===s.items.length)return s;i=null!=s?s.query:i;const{geometry:a,outSR:n,spatialRel:u,returnGeometry:l,returnCentroid:o}=i,h=this.featureStore.featureSpatialReference,c=!a||null==h||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(h,a.spatialReference)?a:(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.project)(a,h),m=l||o,y=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.isValid)(n)&&!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(this.spatialReference,n),f=this._geometryQueryCache&&null==s?y&&m?JSON.stringify({originalFilterGeometry:a,spatialRelationship:u,outSpatialReference:n}):JSON.stringify({originalFilterGeometry:a,spatialRelationship:u}):null,p=f?this._geometryQueryCache.get(f):null;if(null!=p)return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(p,i,this);const d=async e=>(y&&m&&await this._project(e,n),f&&this._geometryQueryCache.put(f,e.items,e.items.length+1),e);if(!c)return d(null!=s?s:await this._getAllFeaturesQueryEngineResult(i));const g=this.featureAdapter;let x=await this._reschedule((()=>this._searchFeatures(this._getQueryBBoxes(a))),r);if("esriSpatialRelDisjoint"===u){if(!x.length)return d(null!=s?s:await this._getAllFeaturesQueryEngineResult(i));const e=new Set;for(const i of x)e.add(g.getObjectId(i));const t=null!=s?s.items:await this._reschedule((()=>this._getAllFeatures()),r),a=await this._reschedule((async()=>{const s=await (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.getSpatialQueryOperator)(u,c,this.geometryType,this.hasZ,this.hasM),a=t=>!e.has(g.getObjectId(t))||s(g.getGeometry(t)),n=await this._runSpatialFilter(t,a,r);return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(n,i,this)}),r);return d(a)}if(null!=s){const i=new _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.PositionHint;x=x.filter((e=>(0,_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.indexOf)(s.items,e,s.items.length,i)>=0))}if(!x.length){const e=new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult([],i,this);return f&&this._geometryQueryCache.put(f,e.items,1),e}if(this._canExecuteSinglePass(c,i))return d(new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(x,i,this));const _=await (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.getSpatialQueryOperator)(u,c,this.geometryType,this.hasZ,this.hasM),w=await this._runSpatialFilter(x,(e=>_(g.getGeometry(e))),r);return d(new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult(w,i,this))}async _executeGeometryQueryForSnapping(e,t){const{query:i}=e,{spatialRel:s}=i;if(!e?.items?.length||!i.geometry||!s)return;const r=await (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.getSpatialQueryOperator)(s,i.geometry,this.geometryType,this.hasZ,this.hasM),a=await this._runSpatialFilter(e.items,(e=>r(e.geometry)),t);e.items=a}_executeAggregateIdsQuery(e){if(0===e.items.length||!e.query.aggregateIds?.length||null==this.aggregateAdapter)return;const t=new Set;for(const s of e.query.aggregateIds){this.aggregateAdapter.getFeatureObjectIds(s).forEach((e=>t.add(e)))}const i=this.featureAdapter.getObjectId;e.items=e.items.filter((e=>t.has(i(e))))}_executeObjectIdsQuery(e){if(0===e.items.length||!e.query.objectIds?.length)return;const t=new Set(e.query.objectIds),i=this.featureAdapter.getObjectId;e.items=e.items.filter((e=>t.has(i(e))))}_executeTimeQuery(e){if(0===e.items.length)return;const t=(0,_timeSupport_js__WEBPACK_IMPORTED_MODULE_24__.getTimeOperator)(this.timeInfo,e.query.timeExtent,this.featureAdapter);null!=t&&(e.items=e.items.filter(t))}_executeAttributesQuery(e){if(0===e.items.length)return;const t=(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_16__.getWhereClause)(e.query.where,this.fieldsIndex);if(t){if(!t.isStandardized)throw new TypeError("Where clause is not standardized");e.items=e.items.filter((e=>t.testFeature(e,this.featureAdapter)))}}async _runSpatialFilter(e,t,i){if(!t)return e;if(null==this._frameTask)return e.filter((e=>t(e)));let s=0;const r=new Array,a=async n=>{for(;s<e.length;){const u=e[s++];t(u)&&(r.push(u),n.madeProgress()),n.done&&await this._reschedule((e=>a(e)),i)}};return this._reschedule((e=>a(e)),i).then((()=>r))}_filterLatest(e){const{trackIdField:t,startTimeField:i,endTimeField:s}=this.timeInfo,r=s||i,a=new Map,n=this.featureAdapter.getAttribute;for(const u of e.items){const e=n(u,t),i=n(u,r),s=a.get(e);(!s||i>n(s,r))&&a.set(e,u)}e.items=Array.from(a.values())}_canExecuteSinglePass(e,t){const{spatialRel:i}=t;return (0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.canQueryWithRBush)(e)&&("esriSpatialRelEnvelopeIntersects"===i||"esriGeometryPoint"===this.geometryType&&("esriSpatialRelIntersects"===i||"esriSpatialRelContains"===i))}async _project(e,t){if(!t||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_14__.equals)(this.spatialReference,t))return e;const i=this.featureAdapter;let s;try{const e=await this._getFullExtent();s=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_8__.getTransformation)(this.spatialReference,t,e)}catch{}const r=await (0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_18__.projectMany)(e.items.map((e=>(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_17__.getGeometry)(this.geometryType,this.hasZ,this.hasM,i.getGeometry(e)))),this.spatialReference,t,s);return e.items=r.map(((t,s)=>i.cloneWithGeometry(e.items[s],(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_15__.convertFromGeometry)(t,this.hasZ,this.hasM)))),e}_getQueryBBoxes(e){if((0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_23__.canQueryWithRBush)(e)){if((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_12__.isExtent)(e))return[(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.fromValues)(Math.min(e.xmin,e.xmax),Math.min(e.ymin,e.ymax),Math.max(e.xmin,e.xmax),Math.max(e.ymin,e.ymax))];if((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_12__.isPolygon)(e))return e.rings.map((e=>(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.fromValues)(Math.min(e[0][0],e[2][0]),Math.min(e[0][1],e[2][1]),Math.max(e[0][0],e[2][0]),Math.max(e[0][1],e[2][1]))))}return[(0,_geometry_support_boundsUtils_js__WEBPACK_IMPORTED_MODULE_11__.getBoundsXY)((0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_10__.create)(),e)]}async _searchFeatures(e){const t=new Set;await Promise.all(e.map((e=>this.featureStore.forEachInBounds(e,(e=>t.add(e))))));const i=Array.from(t.values());return t.clear(),i}async _executeQueryForStatistics(e,t,i){e=(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_3__.clone)(e);try{e=await this._schedule((()=>(0,_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.normalizeQuery)(e,this.definitionExpression,this.spatialReference)),i),e=await this._reschedule((()=>(0,_queryValidationUtils_js__WEBPACK_IMPORTED_MODULE_22__.validateStatisticsQuery)(e,t,{availableFields:this.availableFields,fieldsIndex:this.fieldsIndex,geometryType:this.geometryType,spatialReference:this.spatialReference})),i);const s=await this._reschedule((()=>this._executeSceneFilterQuery(e,i)),i),r=await this._reschedule((()=>this._executeGeometryQuery(e,s,i)),i);return await this._reschedule((()=>this._executeAggregateIdsQuery(r)),i),await this._reschedule((()=>this._executeObjectIdsQuery(r)),i),await this._reschedule((()=>this._executeTimeQuery(r)),i),await this._reschedule((()=>this._executeAttributesQuery(r)),i),r}catch(s){if(s!==_queryUtils_js__WEBPACK_IMPORTED_MODULE_21__.queryEngineEmptyResult)throw s;return new _QueryEngineResult_js__WEBPACK_IMPORTED_MODULE_20__.QueryEngineResult([],e,this)}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QueryEngineResult: () => (/* binding */ q)
/* harmony export */ });
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _geometry_support_centroid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../geometry/support/centroid.js */ "./node_modules/@arcgis/core/geometry/support/centroid.js");
/* harmony import */ var _geometry_support_extentUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../geometry/support/extentUtils.js */ "./node_modules/@arcgis/core/geometry/support/extentUtils.js");
/* harmony import */ var _geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../geometry/support/quantizationUtils.js */ "./node_modules/@arcgis/core/geometry/support/quantizationUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _AttributesBuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AttributesBuilder.js */ "./node_modules/@arcgis/core/layers/graphics/data/AttributesBuilder.js");
/* harmony import */ var _geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geometryUtils.js */ "./node_modules/@arcgis/core/layers/graphics/data/geometryUtils.js");
/* harmony import */ var _projectionSupport_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _SnappingCandidate_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./SnappingCandidate.js */ "./node_modules/@arcgis/core/layers/graphics/data/SnappingCandidate.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../statistics/utils.js */ "./node_modules/@arcgis/core/statistics/utils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class q{constructor(e,t,s){this.items=e,this.query=t,this.geometryType=s.geometryType,this.hasM=s.hasM,this.hasZ=s.hasZ,this.fieldsIndex=s.fieldsIndex,this.objectIdField=s.objectIdField,this.spatialReference=s.spatialReference,this.featureAdapter=s.featureAdapter}get size(){return this.items.length}createQueryResponseForCount(){const e=new _AttributesBuilder_js__WEBPACK_IMPORTED_MODULE_5__["default"](this.query,this.featureAdapter,this.fieldsIndex);if(!this.query.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:t,having:s,outStatistics:i}=this.query,a=t?.length;if(!!!a)return 1;const r=new Map,n=new Map,o=new Set;for(const l of i){const{statisticType:i}=l,a="exceedslimit"!==i?l.onStatisticField:void 0;if(!n.has(a)){const s=[];for(const i of t){const t=this._getAttributeValues(e,i,r);s.push(t)}n.set(a,this._calculateUniqueValues(s,e.returnDistinctValues))}const u=n.get(a);for(const t in u){const{data:i,items:a}=u[t],r=i.join(",");s&&!e.validateItems(a,s)||o.add(r)}}return o.size}async createQueryResponse(){let e;if(this.query.outStatistics){e=this.query.outStatistics.some((e=>"exceedslimit"===e.statisticType))?this._createExceedsLimitQueryResponse(this.query):await this._createStatisticsQueryResponse(this.query)}else e=this._createFeatureQueryResponse(this.query);if(this.query.returnQueryGeometry){const t=this.query.geometry;(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(this.query.outSR)&&!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.equals)(t.spatialReference,this.query.outSR)?e.queryGeometry=(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.cleanFromGeometryEngine)({spatialReference:this.query.outSR,...(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_7__.project)(t,t.spatialReference,this.query.outSR)}):e.queryGeometry=(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.cleanFromGeometryEngine)({spatialReference:this.query.outSR,...t})}return e}createSnappingResponse(e,t){const s=this.featureAdapter,i=C(this.hasZ,this.hasM),{point:a,mode:r}=e,n="number"==typeof e.distance?e.distance:e.distance.x,o="number"==typeof e.distance?e.distance:e.distance.y,l={candidates:[]},u="esriGeometryPolygon"===this.geometryType,c=this._getPointCreator(r,this.spatialReference,t),d=new D(null,0),m=new D(null,0),f={x:0,y:0,z:0};for(const p of this.items){const t=s.getGeometry(p);if(null==t)continue;const{coords:r,lengths:y}=t;if(d.coords=r,m.coords=r,e.returnEdge){let e=0;for(let t=0;t<y.length;t++){const r=y[t];for(let t=0;t<r;t++,e+=i){const u=d;if(u.coordsIndex=e,t!==r-1){const t=m;t.coordsIndex=e+i;const r=f;N(f,a,u,t);const d=(a.x-r.x)/n,g=(a.y-r.y)/o,y=d*d+g*g;y<=1&&l.candidates.push((0,_SnappingCandidate_js__WEBPACK_IMPORTED_MODULE_8__.makeEdgeCandidate)(s.getObjectId(p),c(r),Math.sqrt(y),c(u),c(t)))}}}}if("none"!==e.vertexMode){const t=u?r.length-i:r.length;if("all"===e.vertexMode)for(let e=0;e<t;e+=i){const t=d;t.coordsIndex=e;const i=(a.x-t.x)/n,r=(a.y-t.y)/o,u=i*i+r*r;u<=1&&l.candidates.push((0,_SnappingCandidate_js__WEBPACK_IMPORTED_MODULE_8__.makeVertexCandidate)(s.getObjectId(p),c(t),Math.sqrt(u)))}else if("ends"===e.vertexMode){const e=[0];u||e.push(r.length-i);for(const t of e){const e=d;e.coordsIndex=t;const i=(a.x-e.x)/n,r=(a.y-e.y)/o,u=i*i+r*r;u<=1&&l.candidates.push((0,_SnappingCandidate_js__WEBPACK_IMPORTED_MODULE_8__.makeVertexCandidate)(s.getObjectId(p),c(e),Math.sqrt(u)))}}}}return l.candidates.sort(((e,t)=>e.distance-t.distance)),l}_getPointCreator(e,t,s){const i=null==s||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.equals)(t,s)?e=>e:e=>(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_7__.project)(e,t,s),{hasZ:a}=this,r=0;return"3d"===e?a?({x:e,y:t,z:s})=>i({x:e,y:t,z:s}):({x:e,y:t})=>i({x:e,y:t,z:r}):({x:e,y:t})=>i({x:e,y:t})}async createSummaryStatisticsResponse(e){const{field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,minValue:n,maxValue:o,scale:l,timeZone:u}=e,c=this.fieldsIndex.get(t),d=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isDateField)(c)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isDateOnlyField)(c)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isTimestampOffsetField)(c),m=await this._getDataValues({field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,scale:l,timeZone:u}),h=(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.isNullCountSupported)({normalizationType:a,normalizationField:i,minValue:n,maxValue:o}),g={value:.5,fieldType:c?.type},I=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isStringField)(c)?(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateStringStatistics)({values:m,supportsNullCount:h,percentileParams:g}):(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateStatistics)({values:m,minValue:n,maxValue:o,useSampleStdDev:!a,supportsNullCount:h,percentileParams:g});return (0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.processSummaryStatisticsResult)(I,d)}async createUniqueValuesResponse(e){const{field:t,valueExpression:s,domains:i,returnAllCodedValues:a,scale:r,timeZone:n}=e,o=await this._getDataValues({field:t,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:s,scale:r,timeZone:n},!1),l=(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateUniqueValuesCount)(o);return (0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.createUVResult)(l,i,a,e.fieldDelimiter)}async createClassBreaksResponse(e){const{field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c,scale:d,timeZone:m}=e,h=await this._getDataValues({field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,scale:d,timeZone:m}),g=(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateClassBreaks)(h,{field:t,normalizationField:i,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c});return (0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.resolveCBResult)(g,n)}async createHistogramResponse(e){const{field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c,scale:d,timeZone:m}=e,h=await this._getDataValues({field:t,valueExpression:s,normalizationField:i,normalizationType:a,normalizationTotal:r,scale:d,timeZone:m});return (0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateHistogram)(h,{field:t,normalizationField:i,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c})}_sortFeatures(e,t,s){if(e.length>1&&t?.length)for(const i of t.reverse()){const t=i.split(" "),a=t[0],r=this.fieldsIndex.get(a),n=!!t[1]&&"desc"===t[1].toLowerCase(),o=(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.getAttributeComparator)(r?.type,n);e.sort(((e,t)=>{const i=s(e,a,r),n=s(t,a,r);return o(i,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:s,hasM:i,hasZ:a,objectIdField:n,spatialReference:o}=this,{outFields:l,outSR:c,quantizationParameters:d,resultRecordCount:m,resultOffset:h,returnZ:g,returnM:f}=e,p=null!=m&&t.length>(h||0)+m,y=l&&(l.includes("*")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:p,features:this._createFeatures(e,t),fields:y,geometryType:s,hasM:i&&f,hasZ:a&&g,objectIdFieldName:n,spatialReference:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.cleanFromGeometryEngine)(c||o),transform:d&&(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__.toQuantizationTransform)(d)||null}}_createFeatures(e,t){const s=new _AttributesBuilder_js__WEBPACK_IMPORTED_MODULE_5__["default"](e,this.featureAdapter,this.fieldsIndex),{hasM:i,hasZ:a}=this,{orderByFields:n,quantizationParameters:o,returnGeometry:u,returnCentroid:m,maxAllowableOffset:h,resultOffset:g,resultRecordCount:f,returnZ:p=!1,returnM:y=!1}=e,x=a&&p,I=i&&y;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,n,((e,t,i)=>s.getFieldValue(e,t,i))),this.geometryType&&(u||m)){const e=(0,_geometry_support_quantizationUtils_js__WEBPACK_IMPORTED_MODULE_3__.toQuantizationTransform)(o)??void 0;if(u&&!m)for(const t of F)T[V++]={attributes:s.getAttributes(t),geometry:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.getGeometry)(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),h,e,x,I)};else if(!u&&m)for(const t of F)T[V++]={attributes:s.getAttributes(t),centroid:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.transformCentroid)(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:s.getAttributes(t),centroid:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.transformCentroid)(this,this.featureAdapter.getCentroid(t,this),e),geometry:(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.getGeometry)(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),h,e,x,I)}}else for(const r of F){const e=s.getAttributes(r);e&&(T[V++]={attributes:e})}const S=g||0;if(null!=f){const e=S+f;T=T.slice(S,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let t=!1,s=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY;for(const r of e.outStatistics??[])if("exceedslimit"===r.statisticType){s=null!=r.maxPointCount?r.maxPointCount:Number.POSITIVE_INFINITY,i=null!=r.maxRecordCount?r.maxRecordCount:Number.POSITIVE_INFINITY,a=null!=r.maxVertexCount?r.maxVertexCount:Number.POSITIVE_INFINITY;break}if("esriGeometryPoint"===this.geometryType)t=this.items.length>s;else if(this.items.length>i)t=!0;else{const e=C(this.hasZ,this.hasM),s=this.featureAdapter;t=this.items.reduce(((e,t)=>{const i=s.getGeometry(t);return e+(null!=i&&i.coords.length||0)}),0)/e>a}return{fields:[{name:"exceedslimit",type:"esriFieldTypeInteger",alias:"exceedslimit",sqlType:"sqlTypeInteger",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(t)}}]}}async _createStatisticsQueryResponse(e){const t={attributes:{}},s=[],i=new Map,a=new Map,r=new Map,n=new Map,o=new _AttributesBuilder_js__WEBPACK_IMPORTED_MODULE_5__["default"](e,this.featureAdapter,this.fieldsIndex),u=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:m,resultRecordCount:h}=e,g=c?.length,f=!!g,p=f?c[0]:null,y=f&&!this.fieldsIndex.get(p);for(const l of u??[]){const{outStatisticFieldName:e,statisticType:u}=l,m=l,h="exceedslimit"!==u?l.onStatisticField:void 0,I="percentile_disc"===u||"percentile_cont"===u,T="EnvelopeAggregate"===u||"CentroidAggregate"===u||"ConvexHullAggregate"===u,V=f&&1===g&&(h===p||y)&&"count"===u;if(f){if(!r.has(h)){const e=[];for(const t of c){const s=this._getAttributeValues(o,t,i);e.push(s)}r.set(h,this._calculateUniqueValues(e,!T&&o.returnDistinctValues))}const t=r.get(h);if(!t)continue;const s=Object.keys(t);for(const a of s){const{count:s,data:r,items:l,itemPositions:u}=t[a],g=r.join(",");if(!d||o.validateItems(l,d)){const t=n.get(g)||{attributes:{}};if(T){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:s}=await this._getAggregateGeometry(m,l);t.aggregateGeometries[s]=e}else{let a=null;if(V)a=s;else{const e=this._getAttributeValues(o,h,i),t=u.map((t=>e[t]));a=I&&"statisticParameters"in m?this._getPercentileValue(m,t):this._getStatisticValue(m,t,null,o.returnDistinctValues)}t.attributes[e]=a}let a=0;c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:"EXPR_"+ ++a]=r[s])),n.set(g,t)}}}else if(T){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:s}=await this._getAggregateGeometry(m,this.items);t.aggregateGeometries[s]=e}else{const s=this._getAttributeValues(o,h,i);t.attributes[e]=I&&"statisticParameters"in m?this._getPercentileValue(m,s):this._getStatisticValue(m,s,a,o.returnDistinctValues)}const F="min"!==u&&"max"!==u||!(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isStringField)(this.fieldsIndex.get(h))&&!this._isAnyDateField(h)?null:this.fieldsIndex.get(h)?.type;s.push({name:e,alias:e,type:F||"esriFieldTypeDouble"})}const I=f?Array.from(n.values()):[t];return this._sortFeatures(I,m,((e,t)=>e.attributes[t])),h&&(I.length=Math.min(h,I.length)),{fields:s,features:I}}_isAnyDateField(e){const t=this.fieldsIndex.get(e);return (0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isDateField)(t)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isDateOnlyField)(t)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isTimestampOffsetField)(t)||(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isTimeOnlyField)(t)}async _getAggregateGeometry(e,r){const{convexHull:n,union:o}=await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_arcgis_core_chunks_geometryEngineBase_js"), __webpack_require__.e("node_modules_arcgis_core_geometry_geometryEngineJSON_js-_997e1")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../geometry/geometryEngineJSON.js */ "./node_modules/@arcgis/core/geometry/geometryEngineJSON.js")),{statisticType:l,outStatisticFieldName:u}=e,{featureAdapter:d,spatialReference:m,geometryType:h,hasZ:g,hasM:f}=this,p=r.map((e=>(0,_geometryUtils_js__WEBPACK_IMPORTED_MODULE_6__.getGeometry)(h,g,f,d.getGeometry(e)))),y=n(m,p,!0)[0],x={aggregateGeometries:null,outStatisticFieldName:null};if("EnvelopeAggregate"===l){const e=y?(0,_geometry_support_extentUtils_js__WEBPACK_IMPORTED_MODULE_2__.getPolygonExtent)(y):(0,_geometry_support_extentUtils_js__WEBPACK_IMPORTED_MODULE_2__.getGeometryExtent)(o(m,p));x.aggregateGeometries={...e,spatialReference:m},x.outStatisticFieldName=u||"extent"}else if("CentroidAggregate"===l){const e=y?(0,_geometry_support_centroid_js__WEBPACK_IMPORTED_MODULE_1__.polygonCentroid)(y):(0,_geometry_support_centroid_js__WEBPACK_IMPORTED_MODULE_1__.extentCentroid)((0,_geometry_support_extentUtils_js__WEBPACK_IMPORTED_MODULE_2__.getGeometryExtent)(o(m,p)));x.aggregateGeometries={x:e[0],y:e[1],spatialReference:m},x.outStatisticFieldName=u||"centroid"}else"ConvexHullAggregate"===l&&(x.aggregateGeometries=y,x.outStatisticFieldName=u||"convexHull");return x}_getStatisticValue(e,t,s,i){const{onStatisticField:a,statisticType:r}=e;let n=null;n=s?.has(a)?s.get(a):(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_9__.isStringField)(this.fieldsIndex.get(a))||this._isAnyDateField(a)?(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateStringStatistics)({values:t,returnDistinct:i}):(0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculateStatistics)({values:i?[...new Set(t)]:t,minValue:null,maxValue:null,useSampleStdDev:!0}),s&&s.set(a,n);return n["var"===r?"variance":r]}_getPercentileValue(e,t){const{onStatisticField:s,statisticParameters:i,statisticType:a}=e,{value:r,orderBy:n}=i,o=this.fieldsIndex.get(s);return (0,_statistics_utils_js__WEBPACK_IMPORTED_MODULE_10__.calculatePercentile)(t,{value:r,orderBy:n,fieldType:o?.type,isDiscrete:"percentile_disc"===a})}_getAttributeValues(e,t,s){if(s.has(t))return s.get(t);const i=this.fieldsIndex.get(t),a=this.items.map((s=>e.getFieldValue(s,t,i)));return s.set(t,a),a}_calculateUniqueValues(e,t){const s={},i=this.items,a=i.length;for(let r=0;r<a;r++){const a=i[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(",");null==s[o]?s[o]={count:1,data:n,items:[a],itemPositions:[r]}:(t||s[o].count++,s[o].items.push(a),s[o].itemPositions.push(r))}return s}async _getDataValues(t,s=!0){const i=new _AttributesBuilder_js__WEBPACK_IMPORTED_MODULE_5__["default"](this.query,this.featureAdapter,this.fieldsIndex),{valueExpression:a,scale:r,timeZone:n}=t;return a?i.getExpressionValues(this.items,a,{viewingMode:"map",scale:r,spatialReference:this.query.outSR||this.spatialReference},{geometryType:this.geometryType,hasZ:this.hasZ,hasM:this.hasM},n):i.getDataValues(this.items,(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_0__.clone)(t),s)}}function N(e,t,s,i){const a=i.x-s.x,r=i.y-s.y,n=a*a+r*r,o=(t.x-s.x)*a+(t.y-s.y)*r,l=Math.min(1,Math.max(0,o/n));e.x=s.x+a*l,e.y=s.y+r*l}function C(e,t){return e?t?4:3:t?3:2}class D{constructor(e,t){this.coords=e,this.coordsIndex=t}get x(){return this.coords[this.coordsIndex]}get y(){return this.coords[this.coordsIndex+1]}get z(){return this.coords[this.coordsIndex+2]}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   allDateAndTimeFieldTypes: () => (/* binding */ a),
/* harmony export */   getAliasFromFieldName: () => (/* binding */ y),
/* harmony export */   getExpressionFromFieldName: () => (/* binding */ u),
/* harmony export */   getWhereClause: () => (/* binding */ c),
/* harmony export */   numericFieldTypes: () => (/* binding */ o),
/* harmony export */   validateFields: () => (/* binding */ g),
/* harmony export */   validateHaving: () => (/* binding */ f),
/* harmony export */   validateWhere: () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_sql_WhereClauseCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/sql/WhereClauseCache.js */ "./node_modules/@arcgis/core/core/sql/WhereClauseCache.js");
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../support/fieldType.js */ "./node_modules/@arcgis/core/layers/support/fieldType.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const t=new _core_sql_WhereClauseCache_js__WEBPACK_IMPORTED_MODULE_1__.WhereClauseCache(50,500),s="unsupported-query",n=" as ",o=new Set(["esriFieldTypeOID","esriFieldTypeSmallInteger","esriFieldTypeBigInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong"]),a=new Set(["esriFieldTypeDate","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]),l=new Set(["esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...o,...a]);function d(i,r,n={}){const o=c(r,i);if(!o){const n=t.getError(r,i);throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](s,"invalid SQL expression",{expression:r,error:n})}const a=n.expressionName||"expression";if(n.validateStandardized&&!o.isStandardized)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](s,`${a} is not standard`,{expression:r});if(n.validateAggregate&&!o.isAggregate)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](s,`${a} does not contain a valid aggregate function`,{expression:r});return o.fieldNames}function p(e,i,r,t){if(!r)return!0;const s="where clause";return g(e,i,d(e,r,{validateStandardized:!0,expressionName:s}),{expressionName:s,query:t}),!0}function f(i,r,t,n,o){if(!t)return!0;const a="having clause",l=d(i,t,{validateAggregate:!0,expressionName:a});g(i,r,l,{expressionName:a,query:o});const p=c(t,i),f=p?.getExpressions().every((e=>{const{aggregateType:r,field:t}=e,s=i.get(t)?.name;return n.some((e=>{const{onStatisticField:t,statisticType:n}=e,o=i.get(t)?.name;return o===s&&n.toLowerCase().trim()===r}))}));if(!f)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](s,"expressions in having clause should also exist in outStatistics",{having:t});return!0}function c(e,i){return e?t.get(e,i):null}function u(e){return/\((.*?)\)/.test(e)?e:e.split(n)[0]}function y(e){return e.split(n)[1]}function g(i,r,t,n={}){const o=new Map;if(m(o,i,r,n.allowedFieldTypes??l,t),o.size){const i=n.expressionName??"expression";throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](s,`${i} contains invalid or missing fields`,{errors:Array.from(o.values()),query:n.query})}}function m(e,i,r,t,s){for(const o of s){if("*"===o)continue;if(i.get(o))T(e,i,r,t,o);else try{const s=d(i,u(o),{validateStandardized:!0});for(const n of s)T(e,i,r,t,n)}catch(n){e.set(o,{type:"expression-error",expression:o,error:n})}}}function T(e,i,t,s,n){if("*"===n)return;const o=i.get(n);o?t.has(o.name)?!1===s?.has(o.type)&&e.set(n,{type:"invalid-type",fieldName:o.name,fieldType:_support_fieldType_js__WEBPACK_IMPORTED_MODULE_2__.kebabDict.fromJSON(o.type),allowedFieldTypes:Array.from(s,(e=>_support_fieldType_js__WEBPACK_IMPORTED_MODULE_2__.kebabDict.fromJSON(e)))}):e.set(n,{type:"missing-field",fieldName:o.name}):e.set(n,{type:"invalid-field",fieldName:n})}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkProjectionSupport: () => (/* binding */ x),
/* harmony export */   project: () => (/* binding */ j),
/* harmony export */   projectMany: () => (/* binding */ b)
/* harmony export */ });
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../geometry/projection.js */ "./node_modules/@arcgis/core/geometry/projection.js");
/* harmony import */ var _geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../geometry/geometryAdapters/json.js */ "./node_modules/@arcgis/core/geometry/geometryAdapters/json.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../geometry/support/webMercatorUtils.js */ "./node_modules/@arcgis/core/geometry/support/webMercatorUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const c=[0,0];function h(s,t){if(!t)return null;if("x"in t){const e={x:0,y:0};return[e.x,e.y]=s(t.x,t.y,c),null!=t.z&&(e.z=t.z),null!=t.m&&(e.m=t.m),e}if("xmin"in t){const e={xmin:0,ymin:0,xmax:0,ymax:0};return[e.xmin,e.ymin]=s(t.xmin,t.ymin,c),[e.xmax,e.ymax]=s(t.xmax,t.ymax,c),t.hasZ&&(e.zmin=t.zmin,e.zmax=t.zmax,e.hasZ=!0),t.hasM&&(e.mmin=t.mmin,e.mmax=t.mmax,e.hasM=!0),e}return"rings"in t?{rings:l(t.rings,s),hasM:t.hasM,hasZ:t.hasZ}:"paths"in t?{paths:l(t.paths,s),hasM:t.hasM,hasZ:t.hasZ}:"points"in t?{points:f(t.points,s),hasM:t.hasM,hasZ:t.hasZ}:null}function l(s,t){const e=[];for(const n of s)e.push(f(n,t));return e}function f(s,t){const e=[];for(const n of s){const s=t(n[0],n[1],[0,0]);e.push(s),n.length>2&&s.push(n[2]),n.length>3&&s.push(n[3])}return e}async function x(t,n){if(!t||!n)return;const r=Array.isArray(t)?t.map((s=>null!=s.geometry?s.geometry.spatialReference:null)).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.isSome):[t];await (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_2__.initializeProjection)(r.map((s=>({source:s,dest:n}))))}const y=h.bind(null,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_5__.lngLatToXY),g=h.bind(null,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_5__.xyToLngLat);function j(s,t,e,m){if(!s)return s;if(e||(e=t,t=s.spatialReference),!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(t)||!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.isValid)(e)||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.equals)(t,e))return s;if((0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_5__.canProject)(t,e)){const t=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.isWebMercator)(e)?y(s):g(s);return t.spatialReference=e,t}return (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_2__.projectMany)(_geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_3__.jsonAdapter,[s],t,e,null,m)[0]}class _{constructor(){this._jobs=[],this._timer=null,this._process=this._process.bind(this)}async push(s,e,n,r){if(!s?.length||!e||!n||(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.equals)(e,n))return s;const i={geometries:s,inSpatialReference:e,outSpatialReference:n,geographicTransformation:r,resolve:(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__.createResolver)()};return this._jobs.push(i),this._timer??=setTimeout(this._process,10),i.resolve.promise}_process(){this._timer=null;const s=this._jobs.shift();if(!s)return;const{geometries:t,inSpatialReference:e,outSpatialReference:i,resolve:o,geographicTransformation:m}=s;(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_5__.canProject)(e,i)?(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.isWebMercator)(i)?o(t.map(y)):o(t.map(g)):o((0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_2__.projectMany)(_geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_3__.jsonAdapter,t,e,i,m,null)),this._jobs.length>0&&(this._timer=setTimeout(this._process,10))}}const M=new _;function b(s,t,e,n){return M.push(s,t,e,n)}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/queryValidationUtils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/queryValidationUtils.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   validateQuery: () => (/* binding */ c),
/* harmony export */   validateStatisticsQuery: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attributeSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js");
/* harmony import */ var _projectionSupport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spatialQuerySupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/spatialQuerySupport.js");
/* harmony import */ var _support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../support/arcadeOnDemand.js */ "./node_modules/@arcgis/core/support/arcadeOnDemand.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const u="unsupported-query";async function c(t,{fieldsIndex:i,geometryType:s,spatialReference:r,availableFields:o}){if((t.distance??0)<0||null!=t.geometryPrecision||t.multipatchOption&&"xyFootprint"!==t.multipatchOption||t.pixelSize||t.relationParam||t.text)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"Unsupported query options",{query:t});return p(i,o,t),f(i,o,t),Promise.all([(0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_3__.checkSpatialQuerySupport)(t,s,r),(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_2__.checkProjectionSupport)(r,t.outSR)]).then((()=>t))}function p(t,i,o){const{outFields:n,orderByFields:a,returnDistinctValues:l,outStatistics:c}=o,p=c?c.map((e=>e.outStatisticFieldName&&e.outStatisticFieldName.toLowerCase())).filter(Boolean):[];if(a&&a.length>0){const e=" asc",r=" desc",n=a.map((t=>{const i=t.toLowerCase();return i.includes(e)?i.split(e)[0]:i.includes(r)?i.split(r)[0]:t})).filter((e=>!p.includes(e)));(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,n,{expressionName:"orderByFields",query:o})}if(n&&n.length>0)(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,n,{expressionName:"outFields",query:o});else if(l)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"outFields should be specified for returnDistinctValues",{query:o});(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateWhere)(t,i,o.where,o)}const d=new Set([..._attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.numericFieldTypes,..._attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.allDateAndTimeFieldTypes]);function f(t,i,r){const{outStatistics:n,groupByFieldsForStatistics:a,having:l}=r,c=a?.length,p=n?.length;if(l){if(!c||!p)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"outStatistics and groupByFieldsForStatistics should be specified with having",{query:r});(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateHaving)(t,i,l,n,r)}if(p){if(!h(n))return;const o=n.map((e=>e.onStatisticField)).filter(Boolean);(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,o,{expressionName:"onStatisticFields",query:r}),c&&(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,a,{expressionName:"groupByFieldsForStatistics",query:r});for(const a of n){const{onStatisticField:o,statisticType:n}=a;if(("percentile_disc"===n||"percentile_cont"===n)&&"statisticParameters"in a){const{statisticParameters:t}=a;if(!t)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"statisticParameters should be set for percentile type",{definition:a,query:r})}else t.get(o)&&"count"!==n&&"min"!==n&&"max"!==n&&(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,[o],{expressionName:`outStatistics with '${n}' statistic type`,allowedFieldTypes:d,query:r})}}}async function m(t,i,{fieldsIndex:s,geometryType:r,spatialReference:o,availableFields:l}){if((t.distance??0)<0||null!=t.geometryPrecision||t.multipatchOption||t.pixelSize||t.relationParam||t.text||t.outStatistics||t.groupByFieldsForStatistics||t.having||t.orderByFields)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"Unsupported query options",{query:t});return p(s,l,t),Promise.all([y(s,l,i,t),(0,_spatialQuerySupport_js__WEBPACK_IMPORTED_MODULE_3__.checkSpatialQuerySupport)(t,r,o),(0,_projectionSupport_js__WEBPACK_IMPORTED_MODULE_2__.checkProjectionSupport)(o,t.outSR)]).then((()=>t))}async function y(t,i,r,o){let n=[];if(r.valueExpression){const{arcadeUtils:e}=await (0,_support_arcadeOnDemand_js__WEBPACK_IMPORTED_MODULE_4__.loadArcade)();n=e.extractFieldNames(r.valueExpression)}if(r.field&&n.push(r.field),r.field2&&n.push(r.field2),r.field3&&n.push(r.field3),r.normalizationField&&n.push(r.normalizationField),!n.length&&!r.valueExpression)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"](u,"field or valueExpression is required",{params:r});(0,_attributeSupport_js__WEBPACK_IMPORTED_MODULE_1__.validateFields)(t,i,n,{expressionName:"statistics",query:o})}function h(e){return null!=e&&e.every((e=>"exceedslimit"!==e.statisticType))}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,