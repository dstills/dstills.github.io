"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_arcgis_core_core_libs_rbush_PooledRBush_js-node_modules_arcgis_core_laye-60a2df"],{

/***/ "./node_modules/@arcgis/core/chunks/quickselect.js":
/*!*********************************************************!*\
  !*** ./node_modules/@arcgis/core/chunks/quickselect.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: () => (/* binding */ f)
/* harmony export */ });
/* harmony import */ var _commonjsHelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_commonjsHelpers.js */ "./node_modules/@arcgis/core/chunks/_commonjsHelpers.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
var r,t,n,a={exports:{}};a.exports,r=a,t=function(){function o(o,t,a,f,e){r(o,t,a||0,f||o.length-1,e||n)}function r(o,n,a,f,e){for(;f>a;){if(f-a>600){var s=f-a+1,i=n-a+1,h=Math.log(s),p=.5*Math.exp(2*h/3),c=.5*Math.sqrt(h*p*(s-p)/s)*(i-s/2<0?-1:1);r(o,n,Math.max(a,Math.floor(n-i*p/s+c)),Math.min(f,Math.floor(n+(s-i)*p/s+c)),e)}var u=o[n],x=a,M=f;for(t(o,a,n),e(o[f],u)>0&&t(o,a,f);x<M;){for(t(o,x,M),x++,M--;e(o[x],u)<0;)x++;for(;e(o[M],u)>0;)M--}0===e(o[a],u)?t(o,a,M):t(o,++M,f),M<=n&&(a=M+1),n<=M&&(f=M-1)}}function t(o,r,t){var n=o[r];o[r]=o[t],o[t]=n}function n(o,r){return o<r?-1:o>r?1:0}return o},void 0!==(n=t())&&(r.exports=n);const f=(0,_commonjsHelpers_js__WEBPACK_IMPORTED_MODULE_0__.g)(a.exports);


/***/ }),

/***/ "./node_modules/@arcgis/core/core/libs/rbush/PooledRBush.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arcgis/core/core/libs/rbush/PooledRBush.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BBox: () => (/* binding */ Y),
/* harmony export */   PooledRBush: () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _PooledArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PooledArray.js */ "./node_modules/@arcgis/core/core/PooledArray.js");
/* harmony import */ var _chunks_quickselect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../chunks/quickselect.js */ "./node_modules/@arcgis/core/chunks/quickselect.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class s{constructor(t=9,i){this._compareMinX=o,this._compareMinY=l,this._toBBox=t=>t,this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),i&&("function"==typeof i?this._toBBox=i:this._initFormat(i)),this.clear()}destroy(){this.clear(),p.prune(),g.prune(),M.prune(),X.prune()}all(t){this._all(this._data,t)}search(t,i){let n=this._data;const e=this._toBBox;if(x(t,n))for(p.clear();n;){for(let s=0,h=n.children.length;s<h;s++){const h=n.children[s],a=n.leaf?e(h):h;x(t,a)&&(n.leaf?i(h):_(t,a)?this._all(h,i):p.push(h))}n=p.pop()}}collides(t){let i=this._data;const n=this._toBBox;if(!x(t,i))return!1;for(p.clear();i;){for(let e=0,s=i.children.length;e<s;e++){const s=i.children[e],h=i.leaf?n(s):s;if(x(t,h)){if(i.leaf||_(t,h))return!0;p.push(s)}}i=p.pop()}return!1}load(t){if(!t.length)return this;if(t.length<this._minEntries){for(let i=0,n=t.length;i<n;i++)this.insert(t[i]);return this}let i=this._build(t.slice(0,t.length),0,t.length-1,0);if(this._data.children.length)if(this._data.height===i.height)this._splitRoot(this._data,i);else{if(this._data.height<i.height){const t=this._data;this._data=i,i=t}this._insert(i,this._data.height-i.height-1,!0)}else this._data=i;return this}insert(t){return t&&this._insert(t,this._data.height-1),this}clear(){return this._data=new w([]),this}remove(i){if(!i)return this;let n,e=this._data,s=null,h=0,a=!1;const r=this._toBBox(i);for(M.clear(),X.clear();e||M.length>0;){if(e||(e=M.pop(),s=M.data[M.length-1],h=X.pop()??0,a=!0),e.leaf&&(n=(0,_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.indexOf)(e.children,i,e.children.length,e.indexHint),-1!==n))return e.children.splice(n,1),M.push(e),this._condense(M),this;a||e.leaf||!_(e,r)?s?(h++,e=s.children[h],a=!1):e=null:(M.push(e),X.push(h),h=0,s=e,e=e.children[0])}return this}toJSON(){return this._data}fromJSON(t){return this._data=t,this}_all(t,i){let n=t;for(g.clear();n;){if(!0===n.leaf)for(const t of n.children)i(t);else g.pushArray(n.children);n=g.pop()??null}}_build(t,i,n,e){const s=n-i+1;let a=this._maxEntries;if(s<=a){const e=new w(t.slice(i,n+1));return h(e,this._toBBox),e}e||(e=Math.ceil(Math.log(s)/Math.log(a)),a=Math.ceil(s/a**(e-1)));const r=new b([]);r.height=e;const o=Math.ceil(s/a),l=o*Math.ceil(Math.sqrt(a));f(t,i,n,l,this._compareMinX);for(let h=i;h<=n;h+=l){const i=Math.min(h+l-1,n);f(t,h,i,o,this._compareMinY);for(let n=h;n<=i;n+=o){const s=Math.min(n+o-1,i);r.children.push(this._build(t,n,s,e-1))}}return h(r,this._toBBox),r}_chooseSubtree(t,i,n,e){for(;e.push(i),!0!==i.leaf&&e.length-1!==n;){let n,e=1/0,s=1/0;for(let h=0,a=i.children.length;h<a;h++){const a=i.children[h],r=c(a),o=d(t,a)-r;o<s?(s=o,e=r<e?r:e,n=a):o===s&&r<e&&(e=r,n=a)}i=n||i.children[0]}return i}_insert(t,i,n){const e=this._toBBox,s=n?t:e(t);M.clear();const h=this._chooseSubtree(s,this._data,i,M);for(h.children.push(t),r(h,s);i>=0&&M.data[i].children.length>this._maxEntries;)this._split(M,i),i--;this._adjustParentBBoxes(s,M,i)}_split(t,i){const n=t.data[i],e=n.children.length,s=this._minEntries;this._chooseSplitAxis(n,s,e);const a=this._chooseSplitIndex(n,s,e);if(!a)return void console.log("  Error: assertion failed at PooledRBush._split: no valid split index");const r=n.children.splice(a,n.children.length-a),o=n.leaf?new w(r):new b(r);o.height=n.height,h(n,this._toBBox),h(o,this._toBBox),i?t.data[i-1].children.push(o):this._splitRoot(n,o)}_splitRoot(t,i){this._data=new b([t,i]),this._data.height=t.height+1,h(this._data,this._toBBox)}_chooseSplitIndex(t,i,n){let e,s,h;e=s=1/0;for(let r=i;r<=n-i;r++){const i=a(t,0,r,this._toBBox),o=a(t,r,n,this._toBBox),l=u(i,o),m=c(i)+c(o);l<e?(e=l,h=r,s=m<s?m:s):l===e&&m<s&&(s=m,h=r)}return h}_chooseSplitAxis(t,i,n){const e=t.leaf?this._compareMinX:o,s=t.leaf?this._compareMinY:l;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,s)&&t.children.sort(e)}_allDistMargin(t,i,n,e){t.children.sort(e);const s=this._toBBox,h=a(t,0,i,s),o=a(t,n-i,n,s);let l=m(h)+m(o);for(let a=i;a<n-i;a++){const i=t.children[a];r(h,t.leaf?s(i):i),l+=m(h)}for(let a=n-i-1;a>=i;a--){const i=t.children[a];r(o,t.leaf?s(i):i),l+=m(o)}return l}_adjustParentBBoxes(t,i,n){for(let e=n;e>=0;e--)r(i.data[e],t)}_condense(i){for(let n=i.length-1;n>=0;n--){const e=i.data[n];if(0===e.children.length)if(n>0){const s=i.data[n-1],h=s.children;h.splice((0,_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.indexOf)(h,e,h.length,s.indexHint),1)}else this.clear();else h(e,this._toBBox)}}_initFormat(t){const i=["return a"," - b",";"];this._compareMinX=new Function("a","b",i.join(t[0])),this._compareMinY=new Function("a","b",i.join(t[1])),this._toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}}function h(t,i){a(t,0,t.children.length,i,t)}function a(t,i,n,e,s){s||(s=new w([])),s.minX=1/0,s.minY=1/0,s.maxX=-1/0,s.maxY=-1/0;for(let h,a=i;a<n;a++)h=t.children[a],r(s,t.leaf?e(h):h);return s}function r(t,i){t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY)}function o(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function c(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function m(t){return t.maxX-t.minX+(t.maxY-t.minY)}function d(t,i){return(Math.max(i.maxX,t.maxX)-Math.min(i.minX,t.minX))*(Math.max(i.maxY,t.maxY)-Math.min(i.minY,t.minY))}function u(t,i){const n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),s=Math.min(t.maxX,i.maxX),h=Math.min(t.maxY,i.maxY);return Math.max(0,s-n)*Math.max(0,h-e)}function _(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function x(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function f(t,i,n,s,h){const a=[i,n];for(;a.length;){const i=a.pop(),n=a.pop();if(i-n<=s)continue;const r=n+Math.ceil((i-n)/s/2)*s;(0,_chunks_quickselect_js__WEBPACK_IMPORTED_MODULE_2__.q)(t,r,n,i,h),a.push(n,r,r,i)}}const p=new _PooledArray_js__WEBPACK_IMPORTED_MODULE_1__["default"],g=new _PooledArray_js__WEBPACK_IMPORTED_MODULE_1__["default"],M=new _PooledArray_js__WEBPACK_IMPORTED_MODULE_1__["default"],X=new _PooledArray_js__WEBPACK_IMPORTED_MODULE_1__["default"]({deallocator:void 0});class Y{constructor(){this.minX=1/0,this.minY=1/0,this.maxX=-1/0,this.maxY=-1/0}}class B extends Y{constructor(){super(...arguments),this.height=1,this.indexHint=new _arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.PositionHint}}class w extends B{constructor(t){super(),this.children=t,this.leaf=!0}}class b extends B{constructor(t){super(),this.children=t,this.leaf=!1}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/centroid.js":
/*!***************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/centroid.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getCentroidOptimizedGeometry: () => (/* binding */ n),
/* harmony export */   lineCentroid: () => (/* binding */ r)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function t(t,n){return t?n?4:3:n?3:2}function n(n,I,o,u,N){if(!I?.lengths.length)return null;const l="upperLeft"===N?.originPosition?-1:1;n.lengths.length&&(n.lengths.length=0),n.coords.length&&(n.coords.length=0);const s=n.coords,c=[],f=o?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:T,coords:i}=I,h=t(o,u);let g=0;for(const t of T){const n=e(f,i,g,t,o,u,l);n&&c.push(n),g+=t*h}if(c.sort(((t,n)=>{let e=l*t[2]-l*n[2];return 0===e&&o&&(e=t[4]-n[4]),e})),c.length){let t=6*c[0][2];s[0]=c[0][0]/t,s[1]=c[0][1]/t,o&&(t=6*c[0][4],s[2]=0!==t?c[0][3]/t:0),(s[0]<f[0]||s[0]>f[1]||s[1]<f[2]||s[1]>f[3]||o&&(s[2]<f[4]||s[2]>f[5]))&&(s.length=0)}if(!s.length){const t=I.lengths[0]?r(i,0,T[0],o,u):null;if(!t)return null;s[0]=t[0],s[1]=t[1],o&&t.length>2&&(s[2]=t[2])}return n}function e(n,e,r,I,o,u,N=1){const l=t(o,u);let s=r,c=r+l,f=0,T=0,i=0,h=0,g=0;for(let t=0,b=I-1;t<b;t++,s+=l,c+=l){const t=e[s],r=e[s+1],I=e[s+2],u=e[c],N=e[c+1],l=e[c+2];let E=t*N-u*r;h+=E,f+=(t+u)*E,T+=(r+N)*E,o&&(E=t*l-u*I,i+=(I+l)*E,g+=E),t<n[0]&&(n[0]=t),t>n[1]&&(n[1]=t),r<n[2]&&(n[2]=r),r>n[3]&&(n[3]=r),o&&(I<n[4]&&(n[4]=I),I>n[5]&&(n[5]=I))}if(h*N>0&&(h*=-1),g*N>0&&(g*=-1),!h)return null;const E=[f,T,.5*h];return o&&(E[3]=i,E[4]=.5*g),E}function r(n,e,r,l,s){const c=t(l,s);let f=e,T=e+c,i=0,h=0,g=0,E=0;for(let t=0,b=r-1;t<b;t++,f+=c,T+=c){const t=n[f],e=n[f+1],r=n[f+2],s=n[T],c=n[T+1],b=n[T+2],m=l?o(t,e,r,s,c,b):I(t,e,s,c);if(m)if(i+=m,l){const n=N(t,e,r,s,c,b);h+=m*n[0],g+=m*n[1],E+=m*n[2]}else{const n=u(t,e,s,c);h+=m*n[0],g+=m*n[1]}}return i>0?l?[h/i,g/i,E/i]:[h/i,g/i]:r>0?l?[n[e],n[e+1],n[e+2]]:[n[e],n[e+1]]:null}function I(t,n,e,r){const I=e-t,o=r-n;return Math.sqrt(I*I+o*o)}function o(t,n,e,r,I,o){const u=r-t,N=I-n,l=o-e;return Math.sqrt(u*u+N*N+l*l)}function u(t,n,e,r){return[t+.5*(e-t),n+.5*(r-n)]}function N(t,n,e,r,I,o){return[t+.5*(r-t),n+.5*(I-n),e+.5*(o-e)]}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/data/optimizedFeatureQueryEngineAdapter.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/data/optimizedFeatureQueryEngineAdapter.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   optimizedFeatureQueryEngineAdapter: () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../centroid.js */ "./node_modules/@arcgis/core/layers/graphics/centroid.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const o={getObjectId:t=>t.objectId,getAttributes:t=>t.attributes,getAttribute:(t,e)=>t.attributes[e],cloneWithGeometry:(t,r)=>new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__.OptimizedFeature(r,t.attributes,null,t.objectId),getGeometry:t=>t.geometry,getCentroid:(e,o)=>(null==e.centroid&&(e.centroid=(0,_centroid_js__WEBPACK_IMPORTED_MODULE_0__.getCentroidOptimizedGeometry)(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__["default"],e.geometry,o.hasZ,o.hasM)),e.centroid)};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfYXJjZ2lzX2NvcmVfY29yZV9saWJzX3JidXNoX1Bvb2xlZFJCdXNoX2pzLW5vZGVfbW9kdWxlc19hcmNnaXNfY29yZV9sYXllLTYwYTJkZi5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQyxhQUFhLFlBQVksMkJBQTJCLHNCQUFzQiwrQkFBK0Isc0JBQXNCLEtBQUssSUFBSSxFQUFFLFlBQVksa0dBQWtHLGlGQUFpRixtQkFBbUIsbUNBQW1DLElBQUksRUFBRSxxQkFBcUIsWUFBWSxLQUFLLEtBQUssWUFBWSxLQUFLLCtEQUErRCxrQkFBa0IsV0FBVyxpQkFBaUIsZ0JBQWdCLHNCQUFzQixTQUFTLGlDQUFpQyxRQUFRLHNEQUFDLFlBQTJCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDSjVzQjtBQUNBO0FBQ0E7QUFDQTtBQUN1SixRQUFRLG1CQUFtQixrT0FBa08sVUFBVSxxREFBcUQsT0FBTyx3QkFBd0IsWUFBWSxpQkFBaUIscUJBQXFCLHdCQUF3QixFQUFFLEVBQUUsZ0NBQWdDLElBQUksS0FBSyxzQ0FBc0Msc0RBQXNELFdBQVcsWUFBWSxpQkFBaUIscUJBQXFCLG9CQUFvQixjQUFjLEVBQUUsRUFBRSxnQ0FBZ0MsSUFBSSxLQUFLLHNDQUFzQyxXQUFXLDJCQUEyQixXQUFXLFVBQVUsU0FBUyxRQUFRLHlCQUF5Qiw4QkFBOEIsdUJBQXVCLElBQUksc0JBQXNCLFlBQVksc0RBQXNELDRGQUE0RixLQUFLLCtCQUErQixtQkFBbUIsaUJBQWlCLGdEQUFnRCxrQkFBa0IsWUFBWSxVQUFVLG1EQUFtRCxRQUFRLGlDQUFpQyxVQUFVLGtCQUFrQixtQ0FBbUMsd0JBQXdCLHdCQUF3QixjQUFjLEVBQUUsb0VBQW9FLHVEQUFDLG9IQUFvSCxxR0FBcUcsWUFBWSxTQUFTLGtCQUFrQixZQUFZLHlCQUF5QixVQUFVLFFBQVEsY0FBYyxFQUFFLEVBQUUsOENBQThDLDZCQUE2QixpQkFBaUIsZ0JBQWdCLGNBQWMsdUJBQXVCLFNBQVMsOEJBQThCLDJCQUEyQixrRUFBa0Usa0JBQWtCLFdBQVcsbURBQW1ELDZCQUE2QixZQUFZLEtBQUssTUFBTSwwQkFBMEIsNkJBQTZCLFlBQVksS0FBSyxNQUFNLDBCQUEwQix5Q0FBeUMsMkJBQTJCLHdCQUF3QixLQUFLLHNDQUFzQyxFQUFFLGtCQUFrQixnQ0FBZ0MsSUFBSSxLQUFLLHdDQUF3Qyw4Q0FBOEMsbUJBQW1CLFNBQVMsZUFBZSxnQ0FBZ0MsVUFBVSw4Q0FBOEMsOEJBQThCLGlEQUFpRCxzQkFBc0IsZ0NBQWdDLFlBQVkseURBQXlELDZCQUE2QixzQ0FBc0MsdUdBQXVHLDRFQUE0RSwwR0FBMEcsZ0JBQWdCLGdGQUFnRix5QkFBeUIsVUFBVSxRQUFRLFlBQVksT0FBTyxLQUFLLDJFQUEyRSw4Q0FBOEMsU0FBUyx3QkFBd0IsZ0VBQWdFLDhFQUE4RSx3QkFBd0IsbUJBQW1CLGlEQUFpRCxnQkFBZ0IsWUFBWSxNQUFNLEtBQUssc0JBQXNCLDJCQUEyQixnQkFBZ0IsS0FBSyxLQUFLLHNCQUFzQiwyQkFBMkIsU0FBUywyQkFBMkIsWUFBWSxLQUFLLG1CQUFtQixhQUFhLHFCQUFxQixLQUFLLEtBQUssa0JBQWtCLGlDQUFpQyxpQ0FBaUMsU0FBUyx1REFBQyw4QkFBOEIsa0JBQWtCLHdCQUF3QixlQUFlLDZCQUE2QixHQUFHLGlKQUFpSixvRUFBb0UsSUFBSSxnQkFBZ0IsNkJBQTZCLHNCQUFzQiwrREFBK0QsY0FBYyxJQUFJLHVDQUF1QyxTQUFTLGdCQUFnQiw0SEFBNEgsZ0JBQWdCLHFCQUFxQixnQkFBZ0IscUJBQXFCLGNBQWMsc0NBQXNDLGNBQWMscUNBQXFDLGdCQUFnQiwwR0FBMEcsZ0JBQWdCLDhHQUE4Ryx1Q0FBdUMsZ0JBQWdCLHNFQUFzRSxnQkFBZ0Isc0VBQXNFLHNCQUFzQixjQUFjLEtBQUssU0FBUyxFQUFFLDBCQUEwQixtQkFBbUIsaUNBQWlDLHlEQUFDLDZCQUE2QixZQUFZLHVEQUFDLE9BQU8sdURBQUMsT0FBTyx1REFBQyxPQUFPLHVEQUFDLEVBQUUsbUJBQW1CLEVBQUUsUUFBUSxjQUFjLDJEQUEyRCxrQkFBa0IsY0FBYyxxREFBcUQsd0RBQUMsRUFBRSxrQkFBa0IsZUFBZSxzQ0FBc0Msa0JBQWtCLGVBQWUsc0NBQXlFOzs7Ozs7Ozs7Ozs7Ozs7O0FDSnhvTTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQkFBcUIsc0JBQXNCLGtDQUFrQyw2Q0FBNkMsNEVBQTRFLHlSQUF5UixtQkFBbUIsWUFBWSxRQUFRLGtCQUFrQix5QkFBeUIsb0JBQW9CLG1CQUFtQixvQkFBb0IsaUNBQWlDLGFBQWEsZ0JBQWdCLDRKQUE0SixjQUFjLDBDQUEwQyxrQkFBa0IsK0NBQStDLFNBQVMsNEJBQTRCLGVBQWUsa0NBQWtDLGtCQUFrQixJQUFJLGVBQWUsd0RBQXdELGNBQWMscUtBQXFLLGdEQUFnRCxtQkFBbUIsK0JBQStCLHNCQUFzQixlQUFlLDhCQUE4QixrQkFBa0IsSUFBSSxlQUFlLHNGQUFzRixnQkFBZ0IsdUJBQXVCLDhCQUE4QixLQUFLLG1CQUFtQixxQkFBcUIsbUZBQW1GLG9CQUFvQixrQkFBa0IsMEJBQTBCLHdCQUF3Qix3QkFBd0IsOEJBQThCLG9CQUFvQiw4QkFBOEIsd0JBQXdCLHlDQUFxRzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDSnZsRTtBQUNBO0FBQ0E7QUFDQTtBQUMrSixTQUFTLHlIQUF5SCxrRUFBQyw2R0FBNkcsMEVBQUMsS0FBSyw2REFBQyx5Q0FBeUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9jaHVua3MvcXVpY2tzZWxlY3QuanMiLCJ3ZWJwYWNrOi8vc3ludmlldy8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvY29yZS9saWJzL3JidXNoL1Bvb2xlZFJCdXNoLmpzIiwid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9ncmFwaGljcy9jZW50cm9pZC5qcyIsIndlYnBhY2s6Ly9zeW52aWV3Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvZ3JhcGhpY3MvZGF0YS9vcHRpbWl6ZWRGZWF0dXJlUXVlcnlFbmdpbmVBZGFwdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7ZyBhcyBvfWZyb21cIi4vX2NvbW1vbmpzSGVscGVycy5qc1wiO3ZhciByLHQsbixhPXtleHBvcnRzOnt9fTthLmV4cG9ydHMscj1hLHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBvKG8sdCxhLGYsZSl7cihvLHQsYXx8MCxmfHxvLmxlbmd0aC0xLGV8fG4pfWZ1bmN0aW9uIHIobyxuLGEsZixlKXtmb3IoO2Y+YTspe2lmKGYtYT42MDApe3ZhciBzPWYtYSsxLGk9bi1hKzEsaD1NYXRoLmxvZyhzKSxwPS41Kk1hdGguZXhwKDIqaC8zKSxjPS41Kk1hdGguc3FydChoKnAqKHMtcCkvcykqKGktcy8yPDA/LTE6MSk7cihvLG4sTWF0aC5tYXgoYSxNYXRoLmZsb29yKG4taSpwL3MrYykpLE1hdGgubWluKGYsTWF0aC5mbG9vcihuKyhzLWkpKnAvcytjKSksZSl9dmFyIHU9b1tuXSx4PWEsTT1mO2Zvcih0KG8sYSxuKSxlKG9bZl0sdSk+MCYmdChvLGEsZik7eDxNOyl7Zm9yKHQobyx4LE0pLHgrKyxNLS07ZShvW3hdLHUpPDA7KXgrKztmb3IoO2Uob1tNXSx1KT4wOylNLS19MD09PWUob1thXSx1KT90KG8sYSxNKTp0KG8sKytNLGYpLE08PW4mJihhPU0rMSksbjw9TSYmKGY9TS0xKX19ZnVuY3Rpb24gdChvLHIsdCl7dmFyIG49b1tyXTtvW3JdPW9bdF0sb1t0XT1ufWZ1bmN0aW9uIG4obyxyKXtyZXR1cm4gbzxyPy0xOm8+cj8xOjB9cmV0dXJuIG99LHZvaWQgMCE9PShuPXQoKSkmJihyLmV4cG9ydHM9bik7Y29uc3QgZj1vKGEuZXhwb3J0cyk7ZXhwb3J0e2YgYXMgcX07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e2luZGV4T2YgYXMgdCxQb3NpdGlvbkhpbnQgYXMgaX1mcm9tXCIuLi8uLi9hcnJheVV0aWxzLmpzXCI7aW1wb3J0IG4gZnJvbVwiLi4vLi4vUG9vbGVkQXJyYXkuanNcIjtpbXBvcnR7cSBhcyBlfWZyb21cIi4uLy4uLy4uL2NodW5rcy9xdWlja3NlbGVjdC5qc1wiO2NsYXNzIHN7Y29uc3RydWN0b3IodD05LGkpe3RoaXMuX2NvbXBhcmVNaW5YPW8sdGhpcy5fY29tcGFyZU1pblk9bCx0aGlzLl90b0JCb3g9dD0+dCx0aGlzLl9tYXhFbnRyaWVzPU1hdGgubWF4KDQsdHx8OSksdGhpcy5fbWluRW50cmllcz1NYXRoLm1heCgyLE1hdGguY2VpbCguNCp0aGlzLl9tYXhFbnRyaWVzKSksaSYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGk/dGhpcy5fdG9CQm94PWk6dGhpcy5faW5pdEZvcm1hdChpKSksdGhpcy5jbGVhcigpfWRlc3Ryb3koKXt0aGlzLmNsZWFyKCkscC5wcnVuZSgpLGcucHJ1bmUoKSxNLnBydW5lKCksWC5wcnVuZSgpfWFsbCh0KXt0aGlzLl9hbGwodGhpcy5fZGF0YSx0KX1zZWFyY2godCxpKXtsZXQgbj10aGlzLl9kYXRhO2NvbnN0IGU9dGhpcy5fdG9CQm94O2lmKHgodCxuKSlmb3IocC5jbGVhcigpO247KXtmb3IobGV0IHM9MCxoPW4uY2hpbGRyZW4ubGVuZ3RoO3M8aDtzKyspe2NvbnN0IGg9bi5jaGlsZHJlbltzXSxhPW4ubGVhZj9lKGgpOmg7eCh0LGEpJiYobi5sZWFmP2koaCk6Xyh0LGEpP3RoaXMuX2FsbChoLGkpOnAucHVzaChoKSl9bj1wLnBvcCgpfX1jb2xsaWRlcyh0KXtsZXQgaT10aGlzLl9kYXRhO2NvbnN0IG49dGhpcy5fdG9CQm94O2lmKCF4KHQsaSkpcmV0dXJuITE7Zm9yKHAuY2xlYXIoKTtpOyl7Zm9yKGxldCBlPTAscz1pLmNoaWxkcmVuLmxlbmd0aDtlPHM7ZSsrKXtjb25zdCBzPWkuY2hpbGRyZW5bZV0saD1pLmxlYWY/bihzKTpzO2lmKHgodCxoKSl7aWYoaS5sZWFmfHxfKHQsaCkpcmV0dXJuITA7cC5wdXNoKHMpfX1pPXAucG9wKCl9cmV0dXJuITF9bG9hZCh0KXtpZighdC5sZW5ndGgpcmV0dXJuIHRoaXM7aWYodC5sZW5ndGg8dGhpcy5fbWluRW50cmllcyl7Zm9yKGxldCBpPTAsbj10Lmxlbmd0aDtpPG47aSsrKXRoaXMuaW5zZXJ0KHRbaV0pO3JldHVybiB0aGlzfWxldCBpPXRoaXMuX2J1aWxkKHQuc2xpY2UoMCx0Lmxlbmd0aCksMCx0Lmxlbmd0aC0xLDApO2lmKHRoaXMuX2RhdGEuY2hpbGRyZW4ubGVuZ3RoKWlmKHRoaXMuX2RhdGEuaGVpZ2h0PT09aS5oZWlnaHQpdGhpcy5fc3BsaXRSb290KHRoaXMuX2RhdGEsaSk7ZWxzZXtpZih0aGlzLl9kYXRhLmhlaWdodDxpLmhlaWdodCl7Y29uc3QgdD10aGlzLl9kYXRhO3RoaXMuX2RhdGE9aSxpPXR9dGhpcy5faW5zZXJ0KGksdGhpcy5fZGF0YS5oZWlnaHQtaS5oZWlnaHQtMSwhMCl9ZWxzZSB0aGlzLl9kYXRhPWk7cmV0dXJuIHRoaXN9aW5zZXJ0KHQpe3JldHVybiB0JiZ0aGlzLl9pbnNlcnQodCx0aGlzLl9kYXRhLmhlaWdodC0xKSx0aGlzfWNsZWFyKCl7cmV0dXJuIHRoaXMuX2RhdGE9bmV3IHcoW10pLHRoaXN9cmVtb3ZlKGkpe2lmKCFpKXJldHVybiB0aGlzO2xldCBuLGU9dGhpcy5fZGF0YSxzPW51bGwsaD0wLGE9ITE7Y29uc3Qgcj10aGlzLl90b0JCb3goaSk7Zm9yKE0uY2xlYXIoKSxYLmNsZWFyKCk7ZXx8TS5sZW5ndGg+MDspe2lmKGV8fChlPU0ucG9wKCkscz1NLmRhdGFbTS5sZW5ndGgtMV0saD1YLnBvcCgpPz8wLGE9ITApLGUubGVhZiYmKG49dChlLmNoaWxkcmVuLGksZS5jaGlsZHJlbi5sZW5ndGgsZS5pbmRleEhpbnQpLC0xIT09bikpcmV0dXJuIGUuY2hpbGRyZW4uc3BsaWNlKG4sMSksTS5wdXNoKGUpLHRoaXMuX2NvbmRlbnNlKE0pLHRoaXM7YXx8ZS5sZWFmfHwhXyhlLHIpP3M/KGgrKyxlPXMuY2hpbGRyZW5baF0sYT0hMSk6ZT1udWxsOihNLnB1c2goZSksWC5wdXNoKGgpLGg9MCxzPWUsZT1lLmNoaWxkcmVuWzBdKX1yZXR1cm4gdGhpc310b0pTT04oKXtyZXR1cm4gdGhpcy5fZGF0YX1mcm9tSlNPTih0KXtyZXR1cm4gdGhpcy5fZGF0YT10LHRoaXN9X2FsbCh0LGkpe2xldCBuPXQ7Zm9yKGcuY2xlYXIoKTtuOyl7aWYoITA9PT1uLmxlYWYpZm9yKGNvbnN0IHQgb2Ygbi5jaGlsZHJlbilpKHQpO2Vsc2UgZy5wdXNoQXJyYXkobi5jaGlsZHJlbik7bj1nLnBvcCgpPz9udWxsfX1fYnVpbGQodCxpLG4sZSl7Y29uc3Qgcz1uLWkrMTtsZXQgYT10aGlzLl9tYXhFbnRyaWVzO2lmKHM8PWEpe2NvbnN0IGU9bmV3IHcodC5zbGljZShpLG4rMSkpO3JldHVybiBoKGUsdGhpcy5fdG9CQm94KSxlfWV8fChlPU1hdGguY2VpbChNYXRoLmxvZyhzKS9NYXRoLmxvZyhhKSksYT1NYXRoLmNlaWwocy9hKiooZS0xKSkpO2NvbnN0IHI9bmV3IGIoW10pO3IuaGVpZ2h0PWU7Y29uc3Qgbz1NYXRoLmNlaWwocy9hKSxsPW8qTWF0aC5jZWlsKE1hdGguc3FydChhKSk7Zih0LGksbixsLHRoaXMuX2NvbXBhcmVNaW5YKTtmb3IobGV0IGg9aTtoPD1uO2grPWwpe2NvbnN0IGk9TWF0aC5taW4oaCtsLTEsbik7Zih0LGgsaSxvLHRoaXMuX2NvbXBhcmVNaW5ZKTtmb3IobGV0IG49aDtuPD1pO24rPW8pe2NvbnN0IHM9TWF0aC5taW4obitvLTEsaSk7ci5jaGlsZHJlbi5wdXNoKHRoaXMuX2J1aWxkKHQsbixzLGUtMSkpfX1yZXR1cm4gaChyLHRoaXMuX3RvQkJveCkscn1fY2hvb3NlU3VidHJlZSh0LGksbixlKXtmb3IoO2UucHVzaChpKSwhMCE9PWkubGVhZiYmZS5sZW5ndGgtMSE9PW47KXtsZXQgbixlPTEvMCxzPTEvMDtmb3IobGV0IGg9MCxhPWkuY2hpbGRyZW4ubGVuZ3RoO2g8YTtoKyspe2NvbnN0IGE9aS5jaGlsZHJlbltoXSxyPWMoYSksbz1kKHQsYSktcjtvPHM/KHM9byxlPXI8ZT9yOmUsbj1hKTpvPT09cyYmcjxlJiYoZT1yLG49YSl9aT1ufHxpLmNoaWxkcmVuWzBdfXJldHVybiBpfV9pbnNlcnQodCxpLG4pe2NvbnN0IGU9dGhpcy5fdG9CQm94LHM9bj90OmUodCk7TS5jbGVhcigpO2NvbnN0IGg9dGhpcy5fY2hvb3NlU3VidHJlZShzLHRoaXMuX2RhdGEsaSxNKTtmb3IoaC5jaGlsZHJlbi5wdXNoKHQpLHIoaCxzKTtpPj0wJiZNLmRhdGFbaV0uY2hpbGRyZW4ubGVuZ3RoPnRoaXMuX21heEVudHJpZXM7KXRoaXMuX3NwbGl0KE0saSksaS0tO3RoaXMuX2FkanVzdFBhcmVudEJCb3hlcyhzLE0saSl9X3NwbGl0KHQsaSl7Y29uc3Qgbj10LmRhdGFbaV0sZT1uLmNoaWxkcmVuLmxlbmd0aCxzPXRoaXMuX21pbkVudHJpZXM7dGhpcy5fY2hvb3NlU3BsaXRBeGlzKG4scyxlKTtjb25zdCBhPXRoaXMuX2Nob29zZVNwbGl0SW5kZXgobixzLGUpO2lmKCFhKXJldHVybiB2b2lkIGNvbnNvbGUubG9nKFwiICBFcnJvcjogYXNzZXJ0aW9uIGZhaWxlZCBhdCBQb29sZWRSQnVzaC5fc3BsaXQ6IG5vIHZhbGlkIHNwbGl0IGluZGV4XCIpO2NvbnN0IHI9bi5jaGlsZHJlbi5zcGxpY2UoYSxuLmNoaWxkcmVuLmxlbmd0aC1hKSxvPW4ubGVhZj9uZXcgdyhyKTpuZXcgYihyKTtvLmhlaWdodD1uLmhlaWdodCxoKG4sdGhpcy5fdG9CQm94KSxoKG8sdGhpcy5fdG9CQm94KSxpP3QuZGF0YVtpLTFdLmNoaWxkcmVuLnB1c2gobyk6dGhpcy5fc3BsaXRSb290KG4sbyl9X3NwbGl0Um9vdCh0LGkpe3RoaXMuX2RhdGE9bmV3IGIoW3QsaV0pLHRoaXMuX2RhdGEuaGVpZ2h0PXQuaGVpZ2h0KzEsaCh0aGlzLl9kYXRhLHRoaXMuX3RvQkJveCl9X2Nob29zZVNwbGl0SW5kZXgodCxpLG4pe2xldCBlLHMsaDtlPXM9MS8wO2ZvcihsZXQgcj1pO3I8PW4taTtyKyspe2NvbnN0IGk9YSh0LDAscix0aGlzLl90b0JCb3gpLG89YSh0LHIsbix0aGlzLl90b0JCb3gpLGw9dShpLG8pLG09YyhpKStjKG8pO2w8ZT8oZT1sLGg9cixzPW08cz9tOnMpOmw9PT1lJiZtPHMmJihzPW0saD1yKX1yZXR1cm4gaH1fY2hvb3NlU3BsaXRBeGlzKHQsaSxuKXtjb25zdCBlPXQubGVhZj90aGlzLl9jb21wYXJlTWluWDpvLHM9dC5sZWFmP3RoaXMuX2NvbXBhcmVNaW5ZOmw7dGhpcy5fYWxsRGlzdE1hcmdpbih0LGksbixlKTx0aGlzLl9hbGxEaXN0TWFyZ2luKHQsaSxuLHMpJiZ0LmNoaWxkcmVuLnNvcnQoZSl9X2FsbERpc3RNYXJnaW4odCxpLG4sZSl7dC5jaGlsZHJlbi5zb3J0KGUpO2NvbnN0IHM9dGhpcy5fdG9CQm94LGg9YSh0LDAsaSxzKSxvPWEodCxuLWksbixzKTtsZXQgbD1tKGgpK20obyk7Zm9yKGxldCBhPWk7YTxuLWk7YSsrKXtjb25zdCBpPXQuY2hpbGRyZW5bYV07cihoLHQubGVhZj9zKGkpOmkpLGwrPW0oaCl9Zm9yKGxldCBhPW4taS0xO2E+PWk7YS0tKXtjb25zdCBpPXQuY2hpbGRyZW5bYV07cihvLHQubGVhZj9zKGkpOmkpLGwrPW0obyl9cmV0dXJuIGx9X2FkanVzdFBhcmVudEJCb3hlcyh0LGksbil7Zm9yKGxldCBlPW47ZT49MDtlLS0pcihpLmRhdGFbZV0sdCl9X2NvbmRlbnNlKGkpe2ZvcihsZXQgbj1pLmxlbmd0aC0xO24+PTA7bi0tKXtjb25zdCBlPWkuZGF0YVtuXTtpZigwPT09ZS5jaGlsZHJlbi5sZW5ndGgpaWYobj4wKXtjb25zdCBzPWkuZGF0YVtuLTFdLGg9cy5jaGlsZHJlbjtoLnNwbGljZSh0KGgsZSxoLmxlbmd0aCxzLmluZGV4SGludCksMSl9ZWxzZSB0aGlzLmNsZWFyKCk7ZWxzZSBoKGUsdGhpcy5fdG9CQm94KX19X2luaXRGb3JtYXQodCl7Y29uc3QgaT1bXCJyZXR1cm4gYVwiLFwiIC0gYlwiLFwiO1wiXTt0aGlzLl9jb21wYXJlTWluWD1uZXcgRnVuY3Rpb24oXCJhXCIsXCJiXCIsaS5qb2luKHRbMF0pKSx0aGlzLl9jb21wYXJlTWluWT1uZXcgRnVuY3Rpb24oXCJhXCIsXCJiXCIsaS5qb2luKHRbMV0pKSx0aGlzLl90b0JCb3g9bmV3IEZ1bmN0aW9uKFwiYVwiLFwicmV0dXJuIHttaW5YOiBhXCIrdFswXStcIiwgbWluWTogYVwiK3RbMV0rXCIsIG1heFg6IGFcIit0WzJdK1wiLCBtYXhZOiBhXCIrdFszXStcIn07XCIpfX1mdW5jdGlvbiBoKHQsaSl7YSh0LDAsdC5jaGlsZHJlbi5sZW5ndGgsaSx0KX1mdW5jdGlvbiBhKHQsaSxuLGUscyl7c3x8KHM9bmV3IHcoW10pKSxzLm1pblg9MS8wLHMubWluWT0xLzAscy5tYXhYPS0xLzAscy5tYXhZPS0xLzA7Zm9yKGxldCBoLGE9aTthPG47YSsrKWg9dC5jaGlsZHJlblthXSxyKHMsdC5sZWFmP2UoaCk6aCk7cmV0dXJuIHN9ZnVuY3Rpb24gcih0LGkpe3QubWluWD1NYXRoLm1pbih0Lm1pblgsaS5taW5YKSx0Lm1pblk9TWF0aC5taW4odC5taW5ZLGkubWluWSksdC5tYXhYPU1hdGgubWF4KHQubWF4WCxpLm1heFgpLHQubWF4WT1NYXRoLm1heCh0Lm1heFksaS5tYXhZKX1mdW5jdGlvbiBvKHQsaSl7cmV0dXJuIHQubWluWC1pLm1pblh9ZnVuY3Rpb24gbCh0LGkpe3JldHVybiB0Lm1pblktaS5taW5ZfWZ1bmN0aW9uIGModCl7cmV0dXJuKHQubWF4WC10Lm1pblgpKih0Lm1heFktdC5taW5ZKX1mdW5jdGlvbiBtKHQpe3JldHVybiB0Lm1heFgtdC5taW5YKyh0Lm1heFktdC5taW5ZKX1mdW5jdGlvbiBkKHQsaSl7cmV0dXJuKE1hdGgubWF4KGkubWF4WCx0Lm1heFgpLU1hdGgubWluKGkubWluWCx0Lm1pblgpKSooTWF0aC5tYXgoaS5tYXhZLHQubWF4WSktTWF0aC5taW4oaS5taW5ZLHQubWluWSkpfWZ1bmN0aW9uIHUodCxpKXtjb25zdCBuPU1hdGgubWF4KHQubWluWCxpLm1pblgpLGU9TWF0aC5tYXgodC5taW5ZLGkubWluWSkscz1NYXRoLm1pbih0Lm1heFgsaS5tYXhYKSxoPU1hdGgubWluKHQubWF4WSxpLm1heFkpO3JldHVybiBNYXRoLm1heCgwLHMtbikqTWF0aC5tYXgoMCxoLWUpfWZ1bmN0aW9uIF8odCxpKXtyZXR1cm4gdC5taW5YPD1pLm1pblgmJnQubWluWTw9aS5taW5ZJiZpLm1heFg8PXQubWF4WCYmaS5tYXhZPD10Lm1heFl9ZnVuY3Rpb24geCh0LGkpe3JldHVybiBpLm1pblg8PXQubWF4WCYmaS5taW5ZPD10Lm1heFkmJmkubWF4WD49dC5taW5YJiZpLm1heFk+PXQubWluWX1mdW5jdGlvbiBmKHQsaSxuLHMsaCl7Y29uc3QgYT1baSxuXTtmb3IoO2EubGVuZ3RoOyl7Y29uc3QgaT1hLnBvcCgpLG49YS5wb3AoKTtpZihpLW48PXMpY29udGludWU7Y29uc3Qgcj1uK01hdGguY2VpbCgoaS1uKS9zLzIpKnM7ZSh0LHIsbixpLGgpLGEucHVzaChuLHIscixpKX19Y29uc3QgcD1uZXcgbixnPW5ldyBuLE09bmV3IG4sWD1uZXcgbih7ZGVhbGxvY2F0b3I6dm9pZCAwfSk7Y2xhc3MgWXtjb25zdHJ1Y3Rvcigpe3RoaXMubWluWD0xLzAsdGhpcy5taW5ZPTEvMCx0aGlzLm1heFg9LTEvMCx0aGlzLm1heFk9LTEvMH19Y2xhc3MgQiBleHRlbmRzIFl7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuaGVpZ2h0PTEsdGhpcy5pbmRleEhpbnQ9bmV3IGl9fWNsYXNzIHcgZXh0ZW5kcyBCe2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5jaGlsZHJlbj10LHRoaXMubGVhZj0hMH19Y2xhc3MgYiBleHRlbmRzIEJ7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLmNoaWxkcmVuPXQsdGhpcy5sZWFmPSExfX1leHBvcnR7WSBhcyBCQm94LHMgYXMgUG9vbGVkUkJ1c2h9O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjgvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmZ1bmN0aW9uIHQodCxuKXtyZXR1cm4gdD9uPzQ6MzpuPzM6Mn1mdW5jdGlvbiBuKG4sSSxvLHUsTil7aWYoIUk/Lmxlbmd0aHMubGVuZ3RoKXJldHVybiBudWxsO2NvbnN0IGw9XCJ1cHBlckxlZnRcIj09PU4/Lm9yaWdpblBvc2l0aW9uPy0xOjE7bi5sZW5ndGhzLmxlbmd0aCYmKG4ubGVuZ3Rocy5sZW5ndGg9MCksbi5jb29yZHMubGVuZ3RoJiYobi5jb29yZHMubGVuZ3RoPTApO2NvbnN0IHM9bi5jb29yZHMsYz1bXSxmPW8/W051bWJlci5QT1NJVElWRV9JTkZJTklUWSxOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLE51bWJlci5ORUdBVElWRV9JTkZJTklUWSxOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXTpbTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLE51bWJlci5ORUdBVElWRV9JTkZJTklUWSxOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXSx7bGVuZ3RoczpULGNvb3JkczppfT1JLGg9dChvLHUpO2xldCBnPTA7Zm9yKGNvbnN0IHQgb2YgVCl7Y29uc3Qgbj1lKGYsaSxnLHQsbyx1LGwpO24mJmMucHVzaChuKSxnKz10Kmh9aWYoYy5zb3J0KCgodCxuKT0+e2xldCBlPWwqdFsyXS1sKm5bMl07cmV0dXJuIDA9PT1lJiZvJiYoZT10WzRdLW5bNF0pLGV9KSksYy5sZW5ndGgpe2xldCB0PTYqY1swXVsyXTtzWzBdPWNbMF1bMF0vdCxzWzFdPWNbMF1bMV0vdCxvJiYodD02KmNbMF1bNF0sc1syXT0wIT09dD9jWzBdWzNdL3Q6MCksKHNbMF08ZlswXXx8c1swXT5mWzFdfHxzWzFdPGZbMl18fHNbMV0+ZlszXXx8byYmKHNbMl08Zls0XXx8c1syXT5mWzVdKSkmJihzLmxlbmd0aD0wKX1pZighcy5sZW5ndGgpe2NvbnN0IHQ9SS5sZW5ndGhzWzBdP3IoaSwwLFRbMF0sbyx1KTpudWxsO2lmKCF0KXJldHVybiBudWxsO3NbMF09dFswXSxzWzFdPXRbMV0sbyYmdC5sZW5ndGg+MiYmKHNbMl09dFsyXSl9cmV0dXJuIG59ZnVuY3Rpb24gZShuLGUscixJLG8sdSxOPTEpe2NvbnN0IGw9dChvLHUpO2xldCBzPXIsYz1yK2wsZj0wLFQ9MCxpPTAsaD0wLGc9MDtmb3IobGV0IHQ9MCxiPUktMTt0PGI7dCsrLHMrPWwsYys9bCl7Y29uc3QgdD1lW3NdLHI9ZVtzKzFdLEk9ZVtzKzJdLHU9ZVtjXSxOPWVbYysxXSxsPWVbYysyXTtsZXQgRT10Kk4tdSpyO2grPUUsZis9KHQrdSkqRSxUKz0ocitOKSpFLG8mJihFPXQqbC11KkksaSs9KEkrbCkqRSxnKz1FKSx0PG5bMF0mJihuWzBdPXQpLHQ+blsxXSYmKG5bMV09dCkscjxuWzJdJiYoblsyXT1yKSxyPm5bM10mJihuWzNdPXIpLG8mJihJPG5bNF0mJihuWzRdPUkpLEk+bls1XSYmKG5bNV09SSkpfWlmKGgqTj4wJiYoaCo9LTEpLGcqTj4wJiYoZyo9LTEpLCFoKXJldHVybiBudWxsO2NvbnN0IEU9W2YsVCwuNSpoXTtyZXR1cm4gbyYmKEVbM109aSxFWzRdPS41KmcpLEV9ZnVuY3Rpb24gcihuLGUscixsLHMpe2NvbnN0IGM9dChsLHMpO2xldCBmPWUsVD1lK2MsaT0wLGg9MCxnPTAsRT0wO2ZvcihsZXQgdD0wLGI9ci0xO3Q8Yjt0KyssZis9YyxUKz1jKXtjb25zdCB0PW5bZl0sZT1uW2YrMV0scj1uW2YrMl0scz1uW1RdLGM9bltUKzFdLGI9bltUKzJdLG09bD9vKHQsZSxyLHMsYyxiKTpJKHQsZSxzLGMpO2lmKG0paWYoaSs9bSxsKXtjb25zdCBuPU4odCxlLHIscyxjLGIpO2grPW0qblswXSxnKz1tKm5bMV0sRSs9bSpuWzJdfWVsc2V7Y29uc3Qgbj11KHQsZSxzLGMpO2grPW0qblswXSxnKz1tKm5bMV19fXJldHVybiBpPjA/bD9baC9pLGcvaSxFL2ldOltoL2ksZy9pXTpyPjA/bD9bbltlXSxuW2UrMV0sbltlKzJdXTpbbltlXSxuW2UrMV1dOm51bGx9ZnVuY3Rpb24gSSh0LG4sZSxyKXtjb25zdCBJPWUtdCxvPXItbjtyZXR1cm4gTWF0aC5zcXJ0KEkqSStvKm8pfWZ1bmN0aW9uIG8odCxuLGUscixJLG8pe2NvbnN0IHU9ci10LE49SS1uLGw9by1lO3JldHVybiBNYXRoLnNxcnQodSp1K04qTitsKmwpfWZ1bmN0aW9uIHUodCxuLGUscil7cmV0dXJuW3QrLjUqKGUtdCksbisuNSooci1uKV19ZnVuY3Rpb24gTih0LG4sZSxyLEksbyl7cmV0dXJuW3QrLjUqKHItdCksbisuNSooSS1uKSxlKy41KihvLWUpXX1leHBvcnR7biBhcyBnZXRDZW50cm9pZE9wdGltaXplZEdlb21ldHJ5LHIgYXMgbGluZUNlbnRyb2lkfTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI4L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7Z2V0Q2VudHJvaWRPcHRpbWl6ZWRHZW9tZXRyeSBhcyB0fWZyb21cIi4uL2NlbnRyb2lkLmpzXCI7aW1wb3J0e09wdGltaXplZEZlYXR1cmUgYXMgZX1mcm9tXCIuLi9PcHRpbWl6ZWRGZWF0dXJlLmpzXCI7aW1wb3J0IHIgZnJvbVwiLi4vT3B0aW1pemVkR2VvbWV0cnkuanNcIjtjb25zdCBvPXtnZXRPYmplY3RJZDp0PT50Lm9iamVjdElkLGdldEF0dHJpYnV0ZXM6dD0+dC5hdHRyaWJ1dGVzLGdldEF0dHJpYnV0ZToodCxlKT0+dC5hdHRyaWJ1dGVzW2VdLGNsb25lV2l0aEdlb21ldHJ5Oih0LHIpPT5uZXcgZShyLHQuYXR0cmlidXRlcyxudWxsLHQub2JqZWN0SWQpLGdldEdlb21ldHJ5OnQ9PnQuZ2VvbWV0cnksZ2V0Q2VudHJvaWQ6KGUsbyk9PihudWxsPT1lLmNlbnRyb2lkJiYoZS5jZW50cm9pZD10KG5ldyByLGUuZ2VvbWV0cnksby5oYXNaLG8uaGFzTSkpLGUuY2VudHJvaWQpfTtleHBvcnR7byBhcyBvcHRpbWl6ZWRGZWF0dXJlUXVlcnlFbmdpbmVBZGFwdGVyfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==