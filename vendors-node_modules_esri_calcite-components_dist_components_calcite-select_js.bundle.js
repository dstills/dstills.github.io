"use strict";
(self["webpackChunksynview"] = self["webpackChunksynview"] || []).push([["vendors-node_modules_esri_calcite-components_dist_components_calcite-select_js"],{

/***/ "./node_modules/@esri/calcite-components/dist/components/calcite-select.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/calcite-select.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteSelect: () => (/* binding */ CalciteSelect),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form.js */ "./node_modules/@esri/calcite-components/dist/components/form.js");
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interactive.js */ "./node_modules/@esri/calcite-components/dist/components/interactive.js");
/* harmony import */ var _label2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./label2.js */ "./node_modules/@esri/calcite-components/dist/components/label2.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observers.js */ "./node_modules/@esri/calcite-components/dist/components/observers.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.7.0
 */









const CSS = {
  icon: "icon",
  iconContainer: "icon-container",
  select: "select",
};

const selectCss = ":host{--calcite-icon-size:1rem;--calcite-spacing-eighth:0.125rem;--calcite-spacing-quarter:0.25rem;--calcite-spacing-half:0.5rem;--calcite-spacing-three-quarters:0.75rem;--calcite-spacing:1rem;--calcite-spacing-plus-quarter:1.25rem;--calcite-spacing-plus-half:1.5rem;--calcite-spacing-double:2rem;--calcite-menu-min-width:10rem;--calcite-header-min-height:3rem;--calcite-footer-min-height:3rem}:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:flex;align-items:stretch;inline-size:var(--select-width)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host([scale=s]){block-size:1.5rem;--calcite-select-font-size:var(--calcite-font-size--2);--calcite-select-spacing-inline:0.5rem 2rem}:host([scale=s]) .icon-container{padding-inline:0.5rem}:host([scale=m]){block-size:2rem;--calcite-select-font-size:var(--calcite-font-size--1);--calcite-select-spacing-inline:0.75rem 2.5rem}:host([scale=m]) .icon-container{padding-inline:0.75rem}:host([scale=l]){block-size:44px;--calcite-select-font-size:var(--calcite-font-size-0);--calcite-select-spacing-inline:1rem 3rem}:host([scale=l]) .icon-container{padding-inline:1rem}:host([width=auto]){inline-size:auto}:host([width=half]){inline-size:50%}:host([width=full]){inline-size:100%}.select{margin:0px;box-sizing:border-box;inline-size:100%;cursor:pointer;-webkit-appearance:none;appearance:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-radius:0px;border-width:1px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:var(--calcite-ui-foreground-1);font-family:inherit;color:var(--calcite-ui-text-2);outline-color:transparent;font-size:var(--calcite-select-font-size);padding-inline:var(--calcite-select-spacing-inline);border-inline-end-width:0px}.select:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.select:hover{background-color:var(--calcite-ui-foreground-2)}select:disabled{border-color:var(--calcite-ui-border-input);--tw-bg-opacity:1}.icon-container{pointer-events:none;position:absolute;inset-block:0px;display:flex;align-items:center;border-width:0px;border-style:solid;border-color:var(--calcite-ui-border-input);background-color:transparent;color:var(--calcite-ui-text-2);inset-inline-end:0px;border-inline-width:0px 1px}.select:focus~.icon-container{border-color:transparent}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}:host([hidden]){display:none}[hidden]{display:none}";

function isOption(optionOrGroup) {
  return optionOrGroup.tagName === "CALCITE-OPTION";
}
function isOptionGroup(optionOrGroup) {
  return optionOrGroup.tagName === "CALCITE-OPTION-GROUP";
}
const Select = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteSelectChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calciteSelectChange", 6);
    this.componentToNativeEl = new Map();
    this.mutationObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_5__.c)("mutation", () => this.populateInternalSelect());
    this.handleInternalSelectChange = () => {
      const selected = this.selectEl.selectedOptions[0];
      this.selectFromNativeOption(selected);
      requestAnimationFrame(() => this.emitChangeEvent());
    };
    this.populateInternalSelect = () => {
      const optionsAndGroups = Array.from(this.el.children).filter((child) => child.tagName === "CALCITE-OPTION" || child.tagName === "CALCITE-OPTION-GROUP");
      this.clearInternalSelect();
      optionsAndGroups.forEach((optionOrGroup) => this.selectEl?.append(this.toNativeElement(optionOrGroup)));
    };
    this.storeSelectRef = (node) => {
      this.selectEl = node;
      this.populateInternalSelect();
      const selected = this.selectEl.selectedOptions[0];
      this.selectFromNativeOption(selected);
    };
    this.emitChangeEvent = () => {
      this.calciteSelectChange.emit();
    };
    this.disabled = false;
    this.form = undefined;
    this.label = undefined;
    this.name = undefined;
    this.required = false;
    this.scale = "m";
    this.value = null;
    this.selectedOption = undefined;
    this.width = "auto";
  }
  valueHandler(value) {
    const items = this.el.querySelectorAll("calcite-option");
    items.forEach((item) => (item.selected = item.value === value));
  }
  selectedOptionHandler(selectedOption) {
    this.value = selectedOption?.value;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    const { el } = this;
    this.mutationObserver?.observe(el, {
      subtree: true,
      childList: true,
    });
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
  }
  disconnectedCallback() {
    this.mutationObserver?.disconnect();
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
  }
  componentWillLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.a)(this);
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
    (0,_form_js__WEBPACK_IMPORTED_MODULE_1__.a)(this, this.selectedOption?.value ?? "");
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.u)(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component. */
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.k)(this.selectEl);
  }
  handleOptionOrGroupChange(event) {
    event.stopPropagation();
    const optionOrGroup = event.target;
    const nativeEl = this.componentToNativeEl.get(optionOrGroup);
    if (!nativeEl) {
      return;
    }
    this.updateNativeElement(optionOrGroup, nativeEl);
    if (isOption(optionOrGroup) && optionOrGroup.selected) {
      this.deselectAllExcept(optionOrGroup);
      this.selectedOption = optionOrGroup;
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  updateNativeElement(optionOrGroup, nativeOptionOrGroup) {
    nativeOptionOrGroup.disabled = optionOrGroup.disabled;
    nativeOptionOrGroup.label = optionOrGroup.label;
    if (isOption(optionOrGroup)) {
      const option = nativeOptionOrGroup;
      option.selected = optionOrGroup.selected;
      option.value = optionOrGroup.value;
      // need to set innerText for mobile
      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701
      option.innerText = optionOrGroup.label;
    }
  }
  clearInternalSelect() {
    this.componentToNativeEl.forEach((value) => value.remove());
    this.componentToNativeEl.clear();
  }
  selectFromNativeOption(nativeOption) {
    if (!nativeOption) {
      return;
    }
    let futureSelected;
    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {
      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {
        optionOrGroup.selected = true;
        futureSelected = optionOrGroup;
        this.deselectAllExcept(optionOrGroup);
      }
    });
    if (futureSelected) {
      this.selectedOption = futureSelected;
    }
  }
  toNativeElement(optionOrGroup) {
    if (isOption(optionOrGroup)) {
      const option = document.createElement("option");
      this.updateNativeElement(optionOrGroup, option);
      this.componentToNativeEl.set(optionOrGroup, option);
      return option;
    }
    if (isOptionGroup(optionOrGroup)) {
      const group = document.createElement("optgroup");
      this.updateNativeElement(optionOrGroup, group);
      Array.from(optionOrGroup.children).forEach((option) => {
        const nativeOption = this.toNativeElement(option);
        group.append(nativeOption);
        this.componentToNativeEl.set(optionOrGroup, nativeOption);
      });
      this.componentToNativeEl.set(optionOrGroup, group);
      return group;
    }
    throw new Error("unsupported element child provided");
  }
  deselectAllExcept(except) {
    this.el.querySelectorAll("calcite-option").forEach((option) => {
      if (option === except) {
        return;
      }
      option.selected = false;
    });
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderChevron() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("div", { class: CSS.iconContainer }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { class: CSS.icon, icon: "chevron-down", scale: this.scale === "l" ? "m" : "s" })));
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.Fragment, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("select", { "aria-label": (0,_label2_js__WEBPACK_IMPORTED_MODULE_3__.g)(this), class: CSS.select, disabled: this.disabled, onChange: this.handleInternalSelectChange,
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.storeSelectRef }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("slot", null)), this.renderChevron(), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_form_js__WEBPACK_IMPORTED_MODULE_1__.H, { component: this })));
  }
  get el() { return this; }
  static get watchers() { return {
    "value": ["valueHandler"],
    "selectedOption": ["selectedOptionHandler"]
  }; }
  static get style() { return selectCss; }
}, [1, "calcite-select", {
    "disabled": [516],
    "form": [513],
    "label": [1],
    "name": [513],
    "required": [516],
    "scale": [513],
    "value": [1025],
    "selectedOption": [1040],
    "width": [513],
    "setFocus": [64]
  }, [[0, "calciteInternalOptionChange", "handleOptionOrGroupChange"], [0, "calciteInternalOptionGroupChange", "handleOptionOrGroupChange"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-select", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-select":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Select);
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
  } });
}
defineCustomElement$1();

const CalciteSelect = Select;
const defineCustomElement = defineCustomElement$1;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbnRzX2NhbGNpdGUtc2VsZWN0X2pzLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNtSDtBQUN0RTtBQUNpRjtBQUNYO0FBQzFCO0FBQ3FCO0FBQ3pEO0FBQ0U7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLHlCQUF5QixrQ0FBa0Msa0NBQWtDLDhCQUE4Qix5Q0FBeUMsdUJBQXVCLHVDQUF1QyxtQ0FBbUMsOEJBQThCLCtCQUErQixpQ0FBaUMsaUNBQWlDLGtCQUFrQixlQUFlLHlCQUF5QixpQkFBaUIsMkNBQTJDLG1EQUFtRCxvQkFBb0IsTUFBTSxrQkFBa0IsYUFBYSxvQkFBb0IsZ0NBQWdDLHlHQUF5RyxVQUFVLGlCQUFpQixrQkFBa0IsdURBQXVELDRDQUE0QyxpQ0FBaUMsc0JBQXNCLGlCQUFpQixnQkFBZ0IsdURBQXVELCtDQUErQyxpQ0FBaUMsdUJBQXVCLGlCQUFpQixnQkFBZ0Isc0RBQXNELDBDQUEwQyxpQ0FBaUMsb0JBQW9CLG9CQUFvQixpQkFBaUIsb0JBQW9CLGdCQUFnQixvQkFBb0IsaUJBQWlCLFFBQVEsV0FBVyxzQkFBc0IsaUJBQWlCLGVBQWUsd0JBQXdCLGdCQUFnQixnQkFBZ0IsdUJBQXVCLG1CQUFtQixrQkFBa0IsaUJBQWlCLG1CQUFtQiw0Q0FBNEMsZ0RBQWdELG9CQUFvQiwrQkFBK0IsMEJBQTBCLDBDQUEwQyxvREFBb0QsNEJBQTRCLGNBQWMseUVBQXlFLHFQQUFxUCxjQUFjLGdEQUFnRCxnQkFBZ0IsNENBQTRDLGtCQUFrQixnQkFBZ0Isb0JBQW9CLGtCQUFrQixnQkFBZ0IsYUFBYSxtQkFBbUIsaUJBQWlCLG1CQUFtQiw0Q0FBNEMsNkJBQTZCLCtCQUErQixxQkFBcUIsNEJBQTRCLDhCQUE4Qix5QkFBeUIseUNBQXlDLG9CQUFvQixxQkFBcUIsd0JBQXdCLHFCQUFxQiw2QkFBNkIsbUJBQW1CLDBCQUEwQixtQ0FBbUMsc0JBQXNCLGdCQUFnQixhQUFhLFNBQVMsYUFBYTs7QUFFampHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwRkFBa0IsZUFBZSwrRUFBVztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixtRkFBVztBQUMxQztBQUNBLDRCQUE0QixnREFBYztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLEtBQUs7QUFDakI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksa0RBQWtCO0FBQ3RCLElBQUksNkNBQVk7QUFDaEIsSUFBSSwyQ0FBVztBQUNmO0FBQ0E7QUFDQTtBQUNBLElBQUksa0RBQXFCO0FBQ3pCLElBQUksNkNBQWU7QUFDbkIsSUFBSSwyQ0FBYztBQUNsQjtBQUNBO0FBQ0EsSUFBSSwrQ0FBc0I7QUFDMUI7QUFDQTtBQUNBLElBQUksK0NBQWtCO0FBQ3RCLElBQUksMkNBQTJCO0FBQy9CO0FBQ0E7QUFDQSxJQUFJLGtEQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwrQ0FBa0I7QUFDNUIsSUFBSSwwQ0FBWTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUVBQUMsVUFBVSwwQkFBMEIsRUFBRSx5RUFBQyxtQkFBbUIsOEVBQThFO0FBQ3JKO0FBQ0E7QUFDQSxZQUFZLHlFQUFDLENBQUMsNEVBQVEsUUFBUSx5RUFBQyxhQUFhLGNBQWMsNkNBQVk7QUFDdEU7QUFDQSxnQ0FBZ0MsRUFBRSx5RUFBQyx1Q0FBdUMseUVBQUMsQ0FBQyx1Q0FBbUIsSUFBSSxpQkFBaUI7QUFDcEg7QUFDQSxhQUFhO0FBQ2IsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkNBQXFCO0FBQzdCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUU4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N5bnZpZXcvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXNlbGVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjEuNy4wXG4gKi9cbmltcG9ydCB7IHByb3h5Q3VzdG9tRWxlbWVudCwgSFRNTEVsZW1lbnQsIGNyZWF0ZUV2ZW50LCBoLCBGcmFnbWVudCB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L2luZGV4LmpzJztcbmltcG9ydCB7IGsgYXMgZm9jdXNFbGVtZW50IH0gZnJvbSAnLi9kb20uanMnO1xuaW1wb3J0IHsgYyBhcyBjb25uZWN0Rm9ybSwgZCBhcyBkaXNjb25uZWN0Rm9ybSwgYSBhcyBhZnRlckNvbm5lY3REZWZhdWx0VmFsdWVTZXQsIEggYXMgSGlkZGVuRm9ybUlucHV0U2xvdCB9IGZyb20gJy4vZm9ybS5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RJbnRlcmFjdGl2ZSwgZCBhcyBkaXNjb25uZWN0SW50ZXJhY3RpdmUsIHUgYXMgdXBkYXRlSG9zdEludGVyYWN0aW9uIH0gZnJvbSAnLi9pbnRlcmFjdGl2ZS5qcyc7XG5pbXBvcnQgeyBjIGFzIGNvbm5lY3RMYWJlbCwgZCBhcyBkaXNjb25uZWN0TGFiZWwsIGcgYXMgZ2V0TGFiZWxUZXh0IH0gZnJvbSAnLi9sYWJlbDIuanMnO1xuaW1wb3J0IHsgYSBhcyBzZXRVcExvYWRhYmxlQ29tcG9uZW50LCBzIGFzIHNldENvbXBvbmVudExvYWRlZCwgYyBhcyBjb21wb25lbnRGb2N1c2FibGUgfSBmcm9tICcuL2xvYWRhYmxlLmpzJztcbmltcG9ydCB7IGMgYXMgY3JlYXRlT2JzZXJ2ZXIgfSBmcm9tICcuL29ic2VydmVycy5qcyc7XG5pbXBvcnQgeyBkIGFzIGRlZmluZUN1c3RvbUVsZW1lbnQkMiB9IGZyb20gJy4vaWNvbi5qcyc7XG5cbmNvbnN0IENTUyA9IHtcbiAgaWNvbjogXCJpY29uXCIsXG4gIGljb25Db250YWluZXI6IFwiaWNvbi1jb250YWluZXJcIixcbiAgc2VsZWN0OiBcInNlbGVjdFwiLFxufTtcblxuY29uc3Qgc2VsZWN0Q3NzID0gXCI6aG9zdHstLWNhbGNpdGUtaWNvbi1zaXplOjFyZW07LS1jYWxjaXRlLXNwYWNpbmctZWlnaHRoOjAuMTI1cmVtOy0tY2FsY2l0ZS1zcGFjaW5nLXF1YXJ0ZXI6MC4yNXJlbTstLWNhbGNpdGUtc3BhY2luZy1oYWxmOjAuNXJlbTstLWNhbGNpdGUtc3BhY2luZy10aHJlZS1xdWFydGVyczowLjc1cmVtOy0tY2FsY2l0ZS1zcGFjaW5nOjFyZW07LS1jYWxjaXRlLXNwYWNpbmctcGx1cy1xdWFydGVyOjEuMjVyZW07LS1jYWxjaXRlLXNwYWNpbmctcGx1cy1oYWxmOjEuNXJlbTstLWNhbGNpdGUtc3BhY2luZy1kb3VibGU6MnJlbTstLWNhbGNpdGUtbWVudS1taW4td2lkdGg6MTByZW07LS1jYWxjaXRlLWhlYWRlci1taW4taGVpZ2h0OjNyZW07LS1jYWxjaXRlLWZvb3Rlci1taW4taGVpZ2h0OjNyZW19Omhvc3QoW2Rpc2FibGVkXSl7Y3Vyc29yOmRlZmF1bHQ7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7b3BhY2l0eTp2YXIoLS1jYWxjaXRlLXVpLW9wYWNpdHktZGlzYWJsZWQpfTpob3N0KFtkaXNhYmxlZF0pICosOmhvc3QoW2Rpc2FibGVkXSkgOjpzbG90dGVkKCope3BvaW50ZXItZXZlbnRzOm5vbmV9Omhvc3R7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOnN0cmV0Y2g7aW5saW5lLXNpemU6dmFyKC0tc2VsZWN0LXdpZHRoKX06aG9zdChbZGlzYWJsZWRdKSA6OnNsb3R0ZWQoW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXSksOmhvc3QoW2Rpc2FibGVkXSkgW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXXtvcGFjaXR5OjF9Omhvc3QoW3NjYWxlPXNdKXtibG9jay1zaXplOjEuNXJlbTstLWNhbGNpdGUtc2VsZWN0LWZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMik7LS1jYWxjaXRlLXNlbGVjdC1zcGFjaW5nLWlubGluZTowLjVyZW0gMnJlbX06aG9zdChbc2NhbGU9c10pIC5pY29uLWNvbnRhaW5lcntwYWRkaW5nLWlubGluZTowLjVyZW19Omhvc3QoW3NjYWxlPW1dKXtibG9jay1zaXplOjJyZW07LS1jYWxjaXRlLXNlbGVjdC1mb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtLTEpOy0tY2FsY2l0ZS1zZWxlY3Qtc3BhY2luZy1pbmxpbmU6MC43NXJlbSAyLjVyZW19Omhvc3QoW3NjYWxlPW1dKSAuaWNvbi1jb250YWluZXJ7cGFkZGluZy1pbmxpbmU6MC43NXJlbX06aG9zdChbc2NhbGU9bF0pe2Jsb2NrLXNpemU6NDRweDstLWNhbGNpdGUtc2VsZWN0LWZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0wKTstLWNhbGNpdGUtc2VsZWN0LXNwYWNpbmctaW5saW5lOjFyZW0gM3JlbX06aG9zdChbc2NhbGU9bF0pIC5pY29uLWNvbnRhaW5lcntwYWRkaW5nLWlubGluZToxcmVtfTpob3N0KFt3aWR0aD1hdXRvXSl7aW5saW5lLXNpemU6YXV0b306aG9zdChbd2lkdGg9aGFsZl0pe2lubGluZS1zaXplOjUwJX06aG9zdChbd2lkdGg9ZnVsbF0pe2lubGluZS1zaXplOjEwMCV9LnNlbGVjdHttYXJnaW46MHB4O2JveC1zaXppbmc6Ym9yZGVyLWJveDtpbmxpbmUtc2l6ZToxMDAlO2N1cnNvcjpwb2ludGVyOy13ZWJraXQtYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZTtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXA7Ym9yZGVyLXJhZGl1czowcHg7Ym9yZGVyLXdpZHRoOjFweDtib3JkZXItc3R5bGU6c29saWQ7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktYm9yZGVyLWlucHV0KTtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKTtmb250LWZhbWlseTppbmhlcml0O2NvbG9yOnZhcigtLWNhbGNpdGUtdWktdGV4dC0yKTtvdXRsaW5lLWNvbG9yOnRyYW5zcGFyZW50O2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLXNlbGVjdC1mb250LXNpemUpO3BhZGRpbmctaW5saW5lOnZhcigtLWNhbGNpdGUtc2VsZWN0LXNwYWNpbmctaW5saW5lKTtib3JkZXItaW5saW5lLWVuZC13aWR0aDowcHh9LnNlbGVjdDpmb2N1c3tvdXRsaW5lOjJweCBzb2xpZCB2YXIoLS1jYWxjaXRlLXVpLWZvY3VzLWNvbG9yLCB2YXIoLS1jYWxjaXRlLXVpLWJyYW5kKSk7b3V0bGluZS1vZmZzZXQ6Y2FsYyhcXG4gICAgICAgICAgICAtMnB4ICpcXG4gICAgICAgICAgICBjYWxjKFxcbiAgICAgICAgICAgICAgMSAtXFxuICAgICAgICAgICAgICAyICogY2xhbXAoXFxuICAgICAgICAgICAgICAgIDAsXFxuICAgICAgICAgICAgICAgIHZhcigtLWNhbGNpdGUtdWktZm9jdXMtb2Zmc2V0LWludmVydCksXFxuICAgICAgICAgICAgICAgIDFcXG4gICAgICAgICAgICAgIClcXG4gICAgICAgICAgICApXFxuICAgICAgICAgICl9LnNlbGVjdDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKX1zZWxlY3Q6ZGlzYWJsZWR7Ym9yZGVyLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktYm9yZGVyLWlucHV0KTstLXR3LWJnLW9wYWNpdHk6MX0uaWNvbi1jb250YWluZXJ7cG9pbnRlci1ldmVudHM6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTtpbnNldC1ibG9jazowcHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtib3JkZXItd2lkdGg6MHB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS11aS1ib3JkZXItaW5wdXQpO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS10ZXh0LTIpO2luc2V0LWlubGluZS1lbmQ6MHB4O2JvcmRlci1pbmxpbmUtd2lkdGg6MHB4IDFweH0uc2VsZWN0OmZvY3Vzfi5pY29uLWNvbnRhaW5lcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnR9OjpzbG90dGVkKGlucHV0W3Nsb3Q9aGlkZGVuLWZvcm0taW5wdXRdKXttYXJnaW46MCAhaW1wb3J0YW50O29wYWNpdHk6MCAhaW1wb3J0YW50O291dGxpbmU6bm9uZSAhaW1wb3J0YW50O3BhZGRpbmc6MCAhaW1wb3J0YW50O3Bvc2l0aW9uOmFic29sdXRlICFpbXBvcnRhbnQ7aW5zZXQ6MCAhaW1wb3J0YW50O3RyYW5zZm9ybTpub25lICFpbXBvcnRhbnQ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUgIWltcG9ydGFudDt6LWluZGV4Oi0xICFpbXBvcnRhbnR9Omhvc3QoW2hpZGRlbl0pe2Rpc3BsYXk6bm9uZX1baGlkZGVuXXtkaXNwbGF5Om5vbmV9XCI7XG5cbmZ1bmN0aW9uIGlzT3B0aW9uKG9wdGlvbk9yR3JvdXApIHtcbiAgcmV0dXJuIG9wdGlvbk9yR3JvdXAudGFnTmFtZSA9PT0gXCJDQUxDSVRFLU9QVElPTlwiO1xufVxuZnVuY3Rpb24gaXNPcHRpb25Hcm91cChvcHRpb25Pckdyb3VwKSB7XG4gIHJldHVybiBvcHRpb25Pckdyb3VwLnRhZ05hbWUgPT09IFwiQ0FMQ0lURS1PUFRJT04tR1JPVVBcIjtcbn1cbmNvbnN0IFNlbGVjdCA9IC8qQF9fUFVSRV9fKi8gcHJveHlDdXN0b21FbGVtZW50KGNsYXNzIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX19yZWdpc3Rlckhvc3QoKTtcbiAgICB0aGlzLl9fYXR0YWNoU2hhZG93KCk7XG4gICAgdGhpcy5jYWxjaXRlU2VsZWN0Q2hhbmdlID0gY3JlYXRlRXZlbnQodGhpcywgXCJjYWxjaXRlU2VsZWN0Q2hhbmdlXCIsIDYpO1xuICAgIHRoaXMuY29tcG9uZW50VG9OYXRpdmVFbCA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLm11dGF0aW9uT2JzZXJ2ZXIgPSBjcmVhdGVPYnNlcnZlcihcIm11dGF0aW9uXCIsICgpID0+IHRoaXMucG9wdWxhdGVJbnRlcm5hbFNlbGVjdCgpKTtcbiAgICB0aGlzLmhhbmRsZUludGVybmFsU2VsZWN0Q2hhbmdlID0gKCkgPT4ge1xuICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB0aGlzLnNlbGVjdEVsLnNlbGVjdGVkT3B0aW9uc1swXTtcbiAgICAgIHRoaXMuc2VsZWN0RnJvbU5hdGl2ZU9wdGlvbihzZWxlY3RlZCk7XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5lbWl0Q2hhbmdlRXZlbnQoKSk7XG4gICAgfTtcbiAgICB0aGlzLnBvcHVsYXRlSW50ZXJuYWxTZWxlY3QgPSAoKSA9PiB7XG4gICAgICBjb25zdCBvcHRpb25zQW5kR3JvdXBzID0gQXJyYXkuZnJvbSh0aGlzLmVsLmNoaWxkcmVuKS5maWx0ZXIoKGNoaWxkKSA9PiBjaGlsZC50YWdOYW1lID09PSBcIkNBTENJVEUtT1BUSU9OXCIgfHwgY2hpbGQudGFnTmFtZSA9PT0gXCJDQUxDSVRFLU9QVElPTi1HUk9VUFwiKTtcbiAgICAgIHRoaXMuY2xlYXJJbnRlcm5hbFNlbGVjdCgpO1xuICAgICAgb3B0aW9uc0FuZEdyb3Vwcy5mb3JFYWNoKChvcHRpb25Pckdyb3VwKSA9PiB0aGlzLnNlbGVjdEVsPy5hcHBlbmQodGhpcy50b05hdGl2ZUVsZW1lbnQob3B0aW9uT3JHcm91cCkpKTtcbiAgICB9O1xuICAgIHRoaXMuc3RvcmVTZWxlY3RSZWYgPSAobm9kZSkgPT4ge1xuICAgICAgdGhpcy5zZWxlY3RFbCA9IG5vZGU7XG4gICAgICB0aGlzLnBvcHVsYXRlSW50ZXJuYWxTZWxlY3QoKTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkID0gdGhpcy5zZWxlY3RFbC5zZWxlY3RlZE9wdGlvbnNbMF07XG4gICAgICB0aGlzLnNlbGVjdEZyb21OYXRpdmVPcHRpb24oc2VsZWN0ZWQpO1xuICAgIH07XG4gICAgdGhpcy5lbWl0Q2hhbmdlRXZlbnQgPSAoKSA9PiB7XG4gICAgICB0aGlzLmNhbGNpdGVTZWxlY3RDaGFuZ2UuZW1pdCgpO1xuICAgIH07XG4gICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuZm9ybSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmxhYmVsID0gdW5kZWZpbmVkO1xuICAgIHRoaXMubmFtZSA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnJlcXVpcmVkID0gZmFsc2U7XG4gICAgdGhpcy5zY2FsZSA9IFwibVwiO1xuICAgIHRoaXMudmFsdWUgPSBudWxsO1xuICAgIHRoaXMuc2VsZWN0ZWRPcHRpb24gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy53aWR0aCA9IFwiYXV0b1wiO1xuICB9XG4gIHZhbHVlSGFuZGxlcih2YWx1ZSkge1xuICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiY2FsY2l0ZS1vcHRpb25cIik7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gKGl0ZW0uc2VsZWN0ZWQgPSBpdGVtLnZhbHVlID09PSB2YWx1ZSkpO1xuICB9XG4gIHNlbGVjdGVkT3B0aW9uSGFuZGxlcihzZWxlY3RlZE9wdGlvbikge1xuICAgIHRoaXMudmFsdWUgPSBzZWxlY3RlZE9wdGlvbj8udmFsdWU7XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgTGlmZWN5Y2xlXG4gIC8vXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29uc3QgeyBlbCB9ID0gdGhpcztcbiAgICB0aGlzLm11dGF0aW9uT2JzZXJ2ZXI/Lm9ic2VydmUoZWwsIHtcbiAgICAgIHN1YnRyZWU6IHRydWUsXG4gICAgICBjaGlsZExpc3Q6IHRydWUsXG4gICAgfSk7XG4gICAgY29ubmVjdEludGVyYWN0aXZlKHRoaXMpO1xuICAgIGNvbm5lY3RMYWJlbCh0aGlzKTtcbiAgICBjb25uZWN0Rm9ybSh0aGlzKTtcbiAgfVxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLm11dGF0aW9uT2JzZXJ2ZXI/LmRpc2Nvbm5lY3QoKTtcbiAgICBkaXNjb25uZWN0SW50ZXJhY3RpdmUodGhpcyk7XG4gICAgZGlzY29ubmVjdExhYmVsKHRoaXMpO1xuICAgIGRpc2Nvbm5lY3RGb3JtKHRoaXMpO1xuICB9XG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHNldFVwTG9hZGFibGVDb21wb25lbnQodGhpcyk7XG4gIH1cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICBzZXRDb21wb25lbnRMb2FkZWQodGhpcyk7XG4gICAgYWZ0ZXJDb25uZWN0RGVmYXVsdFZhbHVlU2V0KHRoaXMsIHRoaXMuc2VsZWN0ZWRPcHRpb24/LnZhbHVlID8/IFwiXCIpO1xuICB9XG4gIGNvbXBvbmVudERpZFJlbmRlcigpIHtcbiAgICB1cGRhdGVIb3N0SW50ZXJhY3Rpb24odGhpcyk7XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgUHVibGljIE1ldGhvZHNcbiAgLy9cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvKiogU2V0cyBmb2N1cyBvbiB0aGUgY29tcG9uZW50LiAqL1xuICBhc3luYyBzZXRGb2N1cygpIHtcbiAgICBhd2FpdCBjb21wb25lbnRGb2N1c2FibGUodGhpcyk7XG4gICAgZm9jdXNFbGVtZW50KHRoaXMuc2VsZWN0RWwpO1xuICB9XG4gIGhhbmRsZU9wdGlvbk9yR3JvdXBDaGFuZ2UoZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBjb25zdCBvcHRpb25Pckdyb3VwID0gZXZlbnQudGFyZ2V0O1xuICAgIGNvbnN0IG5hdGl2ZUVsID0gdGhpcy5jb21wb25lbnRUb05hdGl2ZUVsLmdldChvcHRpb25Pckdyb3VwKTtcbiAgICBpZiAoIW5hdGl2ZUVsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMudXBkYXRlTmF0aXZlRWxlbWVudChvcHRpb25Pckdyb3VwLCBuYXRpdmVFbCk7XG4gICAgaWYgKGlzT3B0aW9uKG9wdGlvbk9yR3JvdXApICYmIG9wdGlvbk9yR3JvdXAuc2VsZWN0ZWQpIHtcbiAgICAgIHRoaXMuZGVzZWxlY3RBbGxFeGNlcHQob3B0aW9uT3JHcm91cCk7XG4gICAgICB0aGlzLnNlbGVjdGVkT3B0aW9uID0gb3B0aW9uT3JHcm91cDtcbiAgICB9XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgUHJpdmF0ZSBNZXRob2RzXG4gIC8vXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgb25MYWJlbENsaWNrKCkge1xuICAgIHRoaXMuc2V0Rm9jdXMoKTtcbiAgfVxuICB1cGRhdGVOYXRpdmVFbGVtZW50KG9wdGlvbk9yR3JvdXAsIG5hdGl2ZU9wdGlvbk9yR3JvdXApIHtcbiAgICBuYXRpdmVPcHRpb25Pckdyb3VwLmRpc2FibGVkID0gb3B0aW9uT3JHcm91cC5kaXNhYmxlZDtcbiAgICBuYXRpdmVPcHRpb25Pckdyb3VwLmxhYmVsID0gb3B0aW9uT3JHcm91cC5sYWJlbDtcbiAgICBpZiAoaXNPcHRpb24ob3B0aW9uT3JHcm91cCkpIHtcbiAgICAgIGNvbnN0IG9wdGlvbiA9IG5hdGl2ZU9wdGlvbk9yR3JvdXA7XG4gICAgICBvcHRpb24uc2VsZWN0ZWQgPSBvcHRpb25Pckdyb3VwLnNlbGVjdGVkO1xuICAgICAgb3B0aW9uLnZhbHVlID0gb3B0aW9uT3JHcm91cC52YWx1ZTtcbiAgICAgIC8vIG5lZWQgdG8gc2V0IGlubmVyVGV4dCBmb3IgbW9iaWxlXG4gICAgICAvLyBzZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzUwMjE2MjAvaW9zLXNhZmFyaS1ub3Qtc2hvd2luZy1hbGwtb3B0aW9ucy1mb3Itc2VsZWN0LW1lbnUvNDE3NDk3MDFcbiAgICAgIG9wdGlvbi5pbm5lclRleHQgPSBvcHRpb25Pckdyb3VwLmxhYmVsO1xuICAgIH1cbiAgfVxuICBjbGVhckludGVybmFsU2VsZWN0KCkge1xuICAgIHRoaXMuY29tcG9uZW50VG9OYXRpdmVFbC5mb3JFYWNoKCh2YWx1ZSkgPT4gdmFsdWUucmVtb3ZlKCkpO1xuICAgIHRoaXMuY29tcG9uZW50VG9OYXRpdmVFbC5jbGVhcigpO1xuICB9XG4gIHNlbGVjdEZyb21OYXRpdmVPcHRpb24obmF0aXZlT3B0aW9uKSB7XG4gICAgaWYgKCFuYXRpdmVPcHRpb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IGZ1dHVyZVNlbGVjdGVkO1xuICAgIHRoaXMuY29tcG9uZW50VG9OYXRpdmVFbC5mb3JFYWNoKChuYXRpdmVPcHRpb25Pckdyb3VwLCBvcHRpb25Pckdyb3VwKSA9PiB7XG4gICAgICBpZiAoaXNPcHRpb24ob3B0aW9uT3JHcm91cCkgJiYgbmF0aXZlT3B0aW9uT3JHcm91cCA9PT0gbmF0aXZlT3B0aW9uKSB7XG4gICAgICAgIG9wdGlvbk9yR3JvdXAuc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICBmdXR1cmVTZWxlY3RlZCA9IG9wdGlvbk9yR3JvdXA7XG4gICAgICAgIHRoaXMuZGVzZWxlY3RBbGxFeGNlcHQob3B0aW9uT3JHcm91cCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGZ1dHVyZVNlbGVjdGVkKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkT3B0aW9uID0gZnV0dXJlU2VsZWN0ZWQ7XG4gICAgfVxuICB9XG4gIHRvTmF0aXZlRWxlbWVudChvcHRpb25Pckdyb3VwKSB7XG4gICAgaWYgKGlzT3B0aW9uKG9wdGlvbk9yR3JvdXApKSB7XG4gICAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgICAgdGhpcy51cGRhdGVOYXRpdmVFbGVtZW50KG9wdGlvbk9yR3JvdXAsIG9wdGlvbik7XG4gICAgICB0aGlzLmNvbXBvbmVudFRvTmF0aXZlRWwuc2V0KG9wdGlvbk9yR3JvdXAsIG9wdGlvbik7XG4gICAgICByZXR1cm4gb3B0aW9uO1xuICAgIH1cbiAgICBpZiAoaXNPcHRpb25Hcm91cChvcHRpb25Pckdyb3VwKSkge1xuICAgICAgY29uc3QgZ3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0Z3JvdXBcIik7XG4gICAgICB0aGlzLnVwZGF0ZU5hdGl2ZUVsZW1lbnQob3B0aW9uT3JHcm91cCwgZ3JvdXApO1xuICAgICAgQXJyYXkuZnJvbShvcHRpb25Pckdyb3VwLmNoaWxkcmVuKS5mb3JFYWNoKChvcHRpb24pID0+IHtcbiAgICAgICAgY29uc3QgbmF0aXZlT3B0aW9uID0gdGhpcy50b05hdGl2ZUVsZW1lbnQob3B0aW9uKTtcbiAgICAgICAgZ3JvdXAuYXBwZW5kKG5hdGl2ZU9wdGlvbik7XG4gICAgICAgIHRoaXMuY29tcG9uZW50VG9OYXRpdmVFbC5zZXQob3B0aW9uT3JHcm91cCwgbmF0aXZlT3B0aW9uKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb21wb25lbnRUb05hdGl2ZUVsLnNldChvcHRpb25Pckdyb3VwLCBncm91cCk7XG4gICAgICByZXR1cm4gZ3JvdXA7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkIGVsZW1lbnQgY2hpbGQgcHJvdmlkZWRcIik7XG4gIH1cbiAgZGVzZWxlY3RBbGxFeGNlcHQoZXhjZXB0KSB7XG4gICAgdGhpcy5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiY2FsY2l0ZS1vcHRpb25cIikuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICBpZiAob3B0aW9uID09PSBleGNlcHQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgb3B0aW9uLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgUmVuZGVyIE1ldGhvZHNcbiAgLy9cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICByZW5kZXJDaGV2cm9uKCkge1xuICAgIHJldHVybiAoaChcImRpdlwiLCB7IGNsYXNzOiBDU1MuaWNvbkNvbnRhaW5lciB9LCBoKFwiY2FsY2l0ZS1pY29uXCIsIHsgY2xhc3M6IENTUy5pY29uLCBpY29uOiBcImNoZXZyb24tZG93blwiLCBzY2FsZTogdGhpcy5zY2FsZSA9PT0gXCJsXCIgPyBcIm1cIiA6IFwic1wiIH0pKSk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoaChGcmFnbWVudCwgbnVsbCwgaChcInNlbGVjdFwiLCB7IFwiYXJpYS1sYWJlbFwiOiBnZXRMYWJlbFRleHQodGhpcyksIGNsYXNzOiBDU1Muc2VsZWN0LCBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZCwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlSW50ZXJuYWxTZWxlY3RDaGFuZ2UsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvanN4LXNvcnQtcHJvcHMgLS0gcmVmIHNob3VsZCBiZSBsYXN0IHNvIG5vZGUgYXR0cnMvcHJvcHMgYXJlIGluIHN5bmMgKHNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWRlc2lnbi1zeXN0ZW0vcHVsbC82NTMwKVxuICAgICAgcmVmOiB0aGlzLnN0b3JlU2VsZWN0UmVmIH0sIGgoXCJzbG90XCIsIG51bGwpKSwgdGhpcy5yZW5kZXJDaGV2cm9uKCksIGgoSGlkZGVuRm9ybUlucHV0U2xvdCwgeyBjb21wb25lbnQ6IHRoaXMgfSkpKTtcbiAgfVxuICBnZXQgZWwoKSB7IHJldHVybiB0aGlzOyB9XG4gIHN0YXRpYyBnZXQgd2F0Y2hlcnMoKSB7IHJldHVybiB7XG4gICAgXCJ2YWx1ZVwiOiBbXCJ2YWx1ZUhhbmRsZXJcIl0sXG4gICAgXCJzZWxlY3RlZE9wdGlvblwiOiBbXCJzZWxlY3RlZE9wdGlvbkhhbmRsZXJcIl1cbiAgfTsgfVxuICBzdGF0aWMgZ2V0IHN0eWxlKCkgeyByZXR1cm4gc2VsZWN0Q3NzOyB9XG59LCBbMSwgXCJjYWxjaXRlLXNlbGVjdFwiLCB7XG4gICAgXCJkaXNhYmxlZFwiOiBbNTE2XSxcbiAgICBcImZvcm1cIjogWzUxM10sXG4gICAgXCJsYWJlbFwiOiBbMV0sXG4gICAgXCJuYW1lXCI6IFs1MTNdLFxuICAgIFwicmVxdWlyZWRcIjogWzUxNl0sXG4gICAgXCJzY2FsZVwiOiBbNTEzXSxcbiAgICBcInZhbHVlXCI6IFsxMDI1XSxcbiAgICBcInNlbGVjdGVkT3B0aW9uXCI6IFsxMDQwXSxcbiAgICBcIndpZHRoXCI6IFs1MTNdLFxuICAgIFwic2V0Rm9jdXNcIjogWzY0XVxuICB9LCBbWzAsIFwiY2FsY2l0ZUludGVybmFsT3B0aW9uQ2hhbmdlXCIsIFwiaGFuZGxlT3B0aW9uT3JHcm91cENoYW5nZVwiXSwgWzAsIFwiY2FsY2l0ZUludGVybmFsT3B0aW9uR3JvdXBDaGFuZ2VcIiwgXCJoYW5kbGVPcHRpb25Pckdyb3VwQ2hhbmdlXCJdXV0pO1xuZnVuY3Rpb24gZGVmaW5lQ3VzdG9tRWxlbWVudCQxKCkge1xuICBpZiAodHlwZW9mIGN1c3RvbUVsZW1lbnRzID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGNvbXBvbmVudHMgPSBbXCJjYWxjaXRlLXNlbGVjdFwiLCBcImNhbGNpdGUtaWNvblwiXTtcbiAgY29tcG9uZW50cy5mb3JFYWNoKHRhZ05hbWUgPT4geyBzd2l0Y2ggKHRhZ05hbWUpIHtcbiAgICBjYXNlIFwiY2FsY2l0ZS1zZWxlY3RcIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZSh0YWdOYW1lLCBTZWxlY3QpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNhbGNpdGUtaWNvblwiOlxuICAgICAgaWYgKCFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgZGVmaW5lQ3VzdG9tRWxlbWVudCQyKCk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfSB9KTtcbn1cbmRlZmluZUN1c3RvbUVsZW1lbnQkMSgpO1xuXG5jb25zdCBDYWxjaXRlU2VsZWN0ID0gU2VsZWN0O1xuY29uc3QgZGVmaW5lQ3VzdG9tRWxlbWVudCA9IGRlZmluZUN1c3RvbUVsZW1lbnQkMTtcblxuZXhwb3J0IHsgQ2FsY2l0ZVNlbGVjdCwgZGVmaW5lQ3VzdG9tRWxlbWVudCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9